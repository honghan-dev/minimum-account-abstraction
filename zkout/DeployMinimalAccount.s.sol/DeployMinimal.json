{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"DeployMinimalAccount.s.sol:DeployMinimal\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.le\t@.BB0_6\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.eq\t@.BB0_79\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tor\t@CPI0_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_6:\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.eq\t@.BB0_11\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_13[0], r0, r1\n\tst.1\t164, r1\n\tcontext.gas_left\tr1\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r0\n\tadd\t96, r0, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\t196, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_15[0], r1, r1\n\tst.1\t228, r0\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_14\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_20\n.BB0_79:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tshr.s\t24, r1, r1\n\tand\t@CPI0_12[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_11:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t14, r0, r1\n\tsload\tr1, r1\n\tadd\t13, r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_12[0], r2, r2\n\tst.1\t128, r2\n\tand\t@CPI0_12[0], r1, r1\n\tst.1\t160, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_20:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_92\n\tadd\tr0, r0, r6\n.BB0_22:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_22\n.BB0_92:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_24\n.BB0_23:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_24:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_18:\n\tand\t@CPI0_12[0], r1, r2\n\tadd\t15, r0, r5\n\tsload\tr5, r1\n\tand\t@CPI0_16[0], r1, r1\n\tor\tr1, r2, r1\n\tsstore\tr5, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tld.1\t64, r10\n\tst.1.inc\tr10, r1, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_25\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t64, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t64, r0, r4\n\tjump\t@.BB0_36\n.BB0_25:\n\tadd\tr6, r0, stack-[4]\n\tadd\tr5, r0, stack-[5]\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\tr10, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t64, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t64, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_91\n\tadd\tr0, r0, r7\n.BB0_27:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_27\n.BB0_91:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_29\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_29:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_31\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[4], r0, r6\n.BB0_36:\n\tadd\t31, r4, r1\n\tand\t224, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_19[0], r1, r4\n\tjump.gt\t@.BB0_41\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_41\n\tsub.s!\t64, r3, r2\n\tjump.ge\t@.BB0_43\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_31:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_90\n\tadd\tr0, r0, r6\n.BB0_33:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_33\n.BB0_90:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_35\n.BB0_34:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_35:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_43:\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.le\t@.BB0_44\n.BB0_41:\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_44:\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tld.1\tr10, r2\n\tsub.s!\t@CPI0_12[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr6, r4\n\tsub.s!\t@CPI0_12[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\tr5, r0, stack-[5]\n\tst.1\tr2, r4\n\tld.1\tr1, r1\n\tand\t@CPI0_12[0], r1, r1\n\tadd\t13, r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_16[0], r2, r2\n\tor\tr2, r1, r1\n\tadd\tr3, r0, stack-[4]\n\tsstore\tr3, r1\n\tadd\t14, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_16[0], r1, r1\n\tadd\tr4, r0, stack-[6]\n\tor\tr1, r4, r1\n\tadd\tr2, r0, stack-[3]\n\tsstore\tr2, r1\n\tadd\t@CPI0_21[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_39\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t@CPI0_24[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[6]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[2]\n\tshl.s\t192, r2, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_47\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_41\n\tadd\tstack-[6], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_26[0], r1, r1\n\tjump.gt\t@.BB0_41\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[6], r0, r4\n\tadd\t36, r4, r2\n\tadd\t@CPI0_27[0], r0, r3\n\tst.1\tr2, r3\n\tand\t@CPI0_12[0], r1, r1\n\tadd\t132, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr4, r2\n\tadd\tstack-[1], r0, r2\n\tst.1\tr2, r0\n\tadd\t100, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r4, r2\n\tadd\tstack-[7], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_53\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_57\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_59\n.BB0_47:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_89\n\tadd\tr0, r0, r6\n.BB0_49:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_49\n.BB0_89:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_35\n\tjump\t@.BB0_34\n.BB0_53:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_59:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_88\n\tadd\tr0, r0, r6\n.BB0_61:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_61\n.BB0_88:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_24\n\tjump\t@.BB0_23\n.BB0_57:\n\tshl.s\t24, r1, r2\n\tand\t@CPI0_29[0], r2, r2\n\tadd\t12, r0, r4\n\tsload\tr4, r3\n\tand\t@CPI0_30[0], r3, r3\n\tor\tr3, r2, r2\n\tadd\tr4, r0, stack-[4]\n\tsstore\tr4, r2\n\tadd\tstack-[3], r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI0_21[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_12[0], r1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI0_12[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_39\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[7]\n\tadd\t4, r2, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_69\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_65\n.BB0_69:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_41\n\tadd\tstack-[7], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_21[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_39\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[7]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[3]\n\tshl.s\t192, r2, r1\n\tor\tstack-[3], r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_73\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tjump.gt\t@.BB0_41\n\tadd\tstack-[7], r0, r3\n\tst.1\t64, r3\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tsload\tr2, r2\n\tand\t@CPI0_12[0], r2, r2\n\tst.1\tr3, r2\n\tshr.s\t24, r1, r1\n\tand\t@CPI0_12[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[3], r0, r1\n\tor\t@CPI0_33[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_39:\n\trevert\n.BB0_65:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_87\n\tadd\tr0, r0, r6\n.BB0_67:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_67\n.BB0_87:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_35\n\tjump\t@.BB0_34\n.BB0_73:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_86\n\tadd\tr0, r0, r6\n.BB0_75:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_75\n.BB0_86:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_35\n\tjump\t@.BB0_34\n.func_end0:\n\n__cxa_throw:\n.func_begin1:\n\trevert\n.func_end1:\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -16711936\nCPI0_2:\n\t.cell 65537\nCPI0_3:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_4:\n\t.cell 3225444901\nCPI0_5:\n\t.cell 3225444902\nCPI0_6:\n\t.cell 3296113143\nCPI0_7:\n\t.cell 4174167879\nCPI0_8:\n\t.cell 2035297365\nCPI0_9:\n\t.cell 2105154699\nCPI0_10:\n\t.cell 16711680\nCPI0_11:\n\t.cell 2535301202817642044428229017600\nCPI0_12:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_13:\n\t.cell 452320715653218891477952428846925355790512254764583784426935412038450265758\nCPI0_14:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_15:\n\t.cell 904625697166532776746648320380374280103671765658434360802338178844445376512\nCPI0_16:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_17:\n\t.cell -27151071013223617441696809311706469891330170172232269417374360038580301070336\nCPI0_18:\n\t.cell 316912650057057350374175801344\nCPI0_19:\n\t.cell 18446744073709551615\nCPI0_20:\n\t.cell 18446744073709551551\nCPI0_21:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_22:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_23:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_24:\n\t.cell 57861001352061575297113109862124438461155370584296964375022396541557157134336\nCPI0_25:\n\t.cell 2852213850513516153367582212096\nCPI0_26:\n\t.cell 18446744073709551483\nCPI0_27:\n\t.cell 452319465750496133114079454064877688512222498037078897713762783078482394938\nCPI0_28:\n\t.cell 904625697166532776746648320380374280103671768193735558897613740403029180416\nCPI0_29:\n\t.cell 24519928653854221733733552434404946937899825954920857600\nCPI0_30:\n\t.cell -24519928653854221733733552434404946937899825954920857601\nCPI0_31:\n\t.cell -5883797128923490009923284826678827595714978823192929338615473490105089392640\nCPI0_32:\n\t.cell 53787885087763336501906314510680303380505312860176240795757540877198344323072\nCPI0_33:\n\t.cell 5070602400912917605986812821504\nCPI0_34:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_35:\n\t.cell 5070602403274100847421635428352\n","methodIdentifiers":{"IS_SCRIPT()":"f8ccbf47","config()":"79502c55","deployMinimalAccount()":"7d7a1c8b","minimalAccount()":"c476b1f7","run()":"c0406226"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"config\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployMinimalAccount\",\"outputs\":[{\"internalType\":\"contract HelperConfig\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract MinimalAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimalAccount\",\"outputs\":[{\"internalType\":\"contract MinimalAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/DeployMinimalAccount.s.sol\":\"DeployMinimal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-era-contracts/=lib/foundry-era-contracts/src/system-contracts/\",\":murky/=lib/foundry-era-contracts/lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solpp/=lib/foundry-era-contracts/src/solpp/solpp-generated-contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/EntryPoint.sol\":{\"keccak256\":\"0xde1b6ee98784612164b14d94a4327716ad4872dbcd01e72b6b383adfdf0f4a16\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://13eebdb3bca2b482cafcde2d9feea87fd2f4f1e9a8f642632550539437511455\",\"dweb:/ipfs/QmTa83r22x3LF1jKNHaBMqgoF23VXZYDU8HMdPP5zJs84A\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"lib/account-abstraction/contracts/core/NonceManager.sol\":{\"keccak256\":\"0x1f951786ce6f171e7ed0242fee73ee4a205c7523404ee6cffca48b8c64ea5fe9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a602bf2274d478dae7a532cca31f8179131808c324cc26ece5c7e87c5a1015a6\",\"dweb:/ipfs/QmaaSyw5GGbAWzUhAPCtsb38P3MmaVr1ngp61PYHCU2a5a\"]},\"lib/account-abstraction/contracts/core/SenderCreator.sol\":{\"keccak256\":\"0xeb95afb6e4cf921c1ed105ecb9f549ca46bee57f68acd1d2f4f84607ac0db5c5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2ac91562f1fcabe4809a1b4256895efebcf46f89e08336a6c09ee2d29733238\",\"dweb:/ipfs/QmPsQnPcCzioPwVtUhxkbnwKPC1bnhHSbAwK9GXVpjN3mH\"]},\"lib/account-abstraction/contracts/core/StakeManager.sol\":{\"keccak256\":\"0x673eb19600058d8642605ca409c9e1d4cab13735564b856270b92c330ffb1b8d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://06599c57c7075ee8eb5f1710fccca3eb322876b968ec271e1fb34af41510ab2c\",\"dweb:/ipfs/QmVsDEjmZYtzgXa4AYKxbQEYQVh6NBq8GmFJCariBUqK4G\"]},\"lib/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"lib/account-abstraction/contracts/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0xd3dc32dde1add1fb6377f939ceff6be31c2e21343522311f7b88db666be9ee6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b8f065171bd32e23b306868189c730f849ce6147f753c59e396e7afcf384577\",\"dweb:/ipfs/QmZpDRNEZ9YNgGgyLQo5yM4bB1FNbtnfDABsChbgSQKXUh\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/account-abstraction/contracts/utils/Exec.sol\":{\"keccak256\":\"0x86b1b1cd11158dddb9d381040c57fdc643c74b5e4eed3e7e036f32452672ad74\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ad88663b6c76df73cf09a272cf333d038df7bb4c51281284b572bf9b46e1cd77\",\"dweb:/ipfs/QmVKxYF8avyPBtqejVhFCM2CuHsfpsCh7TsPqkBLtrgwJQ\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x0b7475858d62180b6ccbea2181cf9fa0ed6773fdb8b0f5cbd946d13c5660579f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ba7fa71d8d3ace512ee0a3d9d4d5923a6eb01fcbd93219726e40eeb50a8e52f\",\"dweb:/ipfs/QmScHyHRhrWp21Gazmzq1HR1YDjkbpya6SPTHEs5wzjhwg\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/DeployMinimalAccount.s.sol\":{\"keccak256\":\"0x9caa4c1f6b1c279d55206e380a9433fd96850701404e12c2914dea53bc593bbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cd0372b274824e8b1831697710f880bfa64e84dae98be793a3a29cc9a5d2012\",\"dweb:/ipfs/QmdgS2bLkeeyXqJ8WzbovrHxN7m4cC2KXaiRZW4k5hFe6c\"]},\"script/HelperConfig.s.sol\":{\"keccak256\":\"0x30cac6fd23529d4b43d574a272d8f0efc107ec0e9ba1f85ae6475ee6395e8cd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f05155378a606a1d69d1762f3ae8cb4945e9931fe3fa20244fe06b114d300c01\",\"dweb:/ipfs/QmZJYzhrz5VSDrTRUZUugfLrmS2229T7BEEgpbEE8xQfF6\"]},\"src/ethereum/MinimalAccount.sol\":{\"keccak256\":\"0x9d27eaa39439a4da830eb36e51dbac338d0be1f48678c6ede452cf03ef6b9bc3\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://562b97cd8a625661c5879850b3c1d0fe8a4e48b06e3f35fca092e6addc8f80ed\",\"dweb:/ipfs/QmTNhoDdfALgA37rq7Z2sssh4Ex4tK75LPV66hF3zBAkRm\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 78:\"script/DeployMinimalAccount.s.sol\"\nobject \"DeployMinimal_50440\" {\n    code {\n        {\n            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ not(16711935)), 65537))\n            let _2 := datasize(\"DeployMinimal_50440_deployed\")\n            codecopy(_1, dataoffset(\"DeployMinimal_50440_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 78:\"script/DeployMinimalAccount.s.sol\"\n    object \"DeployMinimal_50440_deployed\" {\n        code {\n            {\n                /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x79502c55 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _5 := sub(shl(160, 1), 1)\n                        let value := and(sload(/** @src 78:302:342  \"HelperConfig.NetworkConfig public config\" */ 13), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _5)\n                        let value_1 := and(sload(/** @src 78:302:342  \"HelperConfig.NetworkConfig public config\" */ 14), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _5)\n                        mstore(_1, value)\n                        mstore(add(_1, 32), value_1)\n                        return(_1, _2)\n                    }\n                    case 0x7d7a1c8b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 78:513:531  \"new HelperConfig()\"\n                        let _6 := /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ mload(_2)\n                        /// @src 78:513:531  \"new HelperConfig()\"\n                        let _7 := datasize(\"HelperConfig_50629\")\n                        let _8 := add(_6, _7)\n                        let _9 := 0xffffffffffffffff\n                        if or(gt(_8, _9), lt(_8, _6))\n                        {\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        /// @src 78:513:531  \"new HelperConfig()\"\n                        datacopy(_6, dataoffset(\"HelperConfig_50629\"), _7)\n                        let expr_address := create(/** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _4, /** @src 78:513:531  \"new HelperConfig()\" */ _6, sub(_8, _6))\n                        if iszero(expr_address)\n                        {\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, _4, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        let _10 := sub(shl(160, 1), 1)\n                        let _11 := and(expr_address, _10)\n                        let _12 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(/** @src 78:498:531  \"helperConfig = new HelperConfig()\" */ 0x0f, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ or(and(sload(/** @src 78:498:531  \"helperConfig = new HelperConfig()\" */ 0x0f), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _12), _11))\n                        /// @src 78:550:574  \"helperConfig.getConfig()\"\n                        let _13 := /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ mload(_2)\n                        /// @src 78:550:574  \"helperConfig.getConfig()\"\n                        mstore(_13, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ shl(226, 0x30fe4275))\n                        /// @src 78:550:574  \"helperConfig.getConfig()\"\n                        let _14 := call(gas(), _11, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _4, /** @src 78:550:574  \"helperConfig.getConfig()\" */ _13, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _3, /** @src 78:550:574  \"helperConfig.getConfig()\" */ _13, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _2)\n                        /// @src 78:550:574  \"helperConfig.getConfig()\"\n                        if iszero(_14)\n                        {\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            let pos_1 := mload(_2)\n                            returndatacopy(pos_1, _4, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 78:550:574  \"helperConfig.getConfig()\"\n                        let expr_mpos := /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _4\n                        /// @src 78:550:574  \"helperConfig.getConfig()\"\n                        if _14\n                        {\n                            let _15 := /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _2\n                            /// @src 78:550:574  \"helperConfig.getConfig()\"\n                            if gt(/** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _2, /** @src 78:550:574  \"helperConfig.getConfig()\" */ returndatasize()) { _15 := returndatasize() }\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            let newFreePtr := add(_13, and(add(_15, 31), not(31)))\n                            if or(gt(newFreePtr, /** @src 78:513:531  \"new HelperConfig()\" */ _9), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ lt(newFreePtr, _13))\n                            {\n                                mstore(_4, shl(224, 0x4e487b71))\n                                mstore(_3, 0x41)\n                                revert(_4, 0x24)\n                            }\n                            if slt(sub(/** @src 78:550:574  \"helperConfig.getConfig()\" */ add(_13, _15), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _13), _2) { revert(_4, _4) }\n                            let newFreePtr_1 := add(newFreePtr, _2)\n                            if or(gt(newFreePtr_1, /** @src 78:513:531  \"new HelperConfig()\" */ _9), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ lt(newFreePtr_1, newFreePtr))\n                            {\n                                mstore(_4, shl(224, 0x4e487b71))\n                                mstore(_3, 0x41)\n                                revert(_4, 0x24)\n                            }\n                            mstore(_2, newFreePtr_1)\n                            mstore(newFreePtr, abi_decode_address_fromMemory(_13))\n                            mstore(add(newFreePtr, 32), abi_decode_address_fromMemory(add(_13, 32)))\n                            /// @src 78:550:574  \"helperConfig.getConfig()\"\n                            expr_mpos := newFreePtr\n                        }\n                        /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                        sstore(/** @src 78:541:574  \"config = helperConfig.getConfig()\" */ 0x0d, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ or(and(sload(/** @src 78:541:574  \"config = helperConfig.getConfig()\" */ 0x0d), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _12), and(mload(expr_mpos), _10)))\n                        let _16 := and(mload(add(expr_mpos, 32)), _10)\n                        sstore(14, or(and(sload(14), _12), _16))\n                        let _17 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 78:585:618  \"vm.startBroadcast(config.account)\"\n                        if iszero(extcodesize(/** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _17))\n                        /// @src 78:585:618  \"vm.startBroadcast(config.account)\"\n                        {\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 78:585:618  \"vm.startBroadcast(config.account)\"\n                        let _18 := /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ mload(_2)\n                        /// @src 78:585:618  \"vm.startBroadcast(config.account)\"\n                        mstore(_18, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ shl(224, 0x7fec2a8d))\n                        mstore(/** @src 78:585:618  \"vm.startBroadcast(config.account)\" */ add(_18, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _3), _16)\n                        /// @src 78:585:618  \"vm.startBroadcast(config.account)\"\n                        let _19 := call(gas(), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _17, _4, /** @src 78:585:618  \"vm.startBroadcast(config.account)\" */ _18, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ 36, /** @src 78:585:618  \"vm.startBroadcast(config.account)\" */ _18, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _4)\n                        /// @src 78:585:618  \"vm.startBroadcast(config.account)\"\n                        if iszero(_19)\n                        {\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            let pos_2 := mload(_2)\n                            returndatacopy(pos_2, _4, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 78:585:618  \"vm.startBroadcast(config.account)\"\n                        if _19\n                        {\n                            finalize_allocation(_18)\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            _4 := _4\n                        }\n                        let value_2 := and(sload(/** @src 78:541:574  \"config = helperConfig.getConfig()\" */ 0x0d), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _10)\n                        /// @src 78:645:682  \"new MinimalAccount(config.entryPoint)\"\n                        let _20 := /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ mload(_2)\n                        /// @src 78:645:682  \"new MinimalAccount(config.entryPoint)\"\n                        let _21 := datasize(\"MinimalAccount_51163\")\n                        let _22 := add(_20, _21)\n                        if or(gt(_22, /** @src 78:513:531  \"new HelperConfig()\" */ _9), /** @src 78:645:682  \"new MinimalAccount(config.entryPoint)\" */ lt(_22, _20))\n                        {\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                        }\n                        /// @src 78:645:682  \"new MinimalAccount(config.entryPoint)\"\n                        datacopy(_20, dataoffset(\"MinimalAccount_51163\"), _21)\n                        /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                        mstore(_22, value_2)\n                        /// @src 78:645:682  \"new MinimalAccount(config.entryPoint)\"\n                        let expr_address_1 := create(/** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _4, /** @src 78:645:682  \"new MinimalAccount(config.entryPoint)\" */ _20, add(sub(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ _22, /** @src 78:645:682  \"new MinimalAccount(config.entryPoint)\" */ _20), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ 32))\n                        /// @src 78:645:682  \"new MinimalAccount(config.entryPoint)\"\n                        if iszero(expr_address_1)\n                        {\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            let pos_3 := mload(_2)\n                            returndatacopy(pos_3, _4, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _23 := sload(/** @src 78:628:682  \"minimalAccount = new MinimalAccount(config.entryPoint)\" */ 0x0c)\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let result := or(and(_23, not(sub(shl(184, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ 1), /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ 16777216))), and(shl(24, expr_address_1), sub(shl(184, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ 1), /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ 16777216)))\n                        sstore(/** @src 78:628:682  \"minimalAccount = new MinimalAccount(config.entryPoint)\" */ 0x0c, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ result)\n                        let value_3 := /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ shr(24, result), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _10)\n                        let value_4 := and(sload(14), _10)\n                        /// @src 78:692:740  \"minimalAccount.transferOwnership(config.account)\"\n                        if iszero(extcodesize(value_3))\n                        {\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 78:692:740  \"minimalAccount.transferOwnership(config.account)\"\n                        let _24 := /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ mload(_2)\n                        /// @src 78:692:740  \"minimalAccount.transferOwnership(config.account)\"\n                        mstore(_24, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ shl(224, 0xf2fde38b))\n                        mstore(/** @src 78:692:740  \"minimalAccount.transferOwnership(config.account)\" */ add(_24, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _3), value_4)\n                        /// @src 78:692:740  \"minimalAccount.transferOwnership(config.account)\"\n                        let _25 := call(gas(), value_3, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _4, /** @src 78:692:740  \"minimalAccount.transferOwnership(config.account)\" */ _24, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ 36, /** @src 78:692:740  \"minimalAccount.transferOwnership(config.account)\" */ _24, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _4)\n                        /// @src 78:692:740  \"minimalAccount.transferOwnership(config.account)\"\n                        if iszero(_25)\n                        {\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            let pos_4 := mload(_2)\n                            returndatacopy(pos_4, _4, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 78:692:740  \"minimalAccount.transferOwnership(config.account)\"\n                        if _25\n                        {\n                            finalize_allocation(_24)\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        /// @src 78:750:768  \"vm.stopBroadcast()\"\n                        if iszero(extcodesize(/** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _17))\n                        /// @src 78:750:768  \"vm.stopBroadcast()\"\n                        {\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 78:750:768  \"vm.stopBroadcast()\"\n                        let _26 := /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ mload(_2)\n                        /// @src 78:750:768  \"vm.stopBroadcast()\"\n                        mstore(_26, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ shl(225, 0x3b756e9b))\n                        /// @src 78:750:768  \"vm.stopBroadcast()\"\n                        let _27 := call(gas(), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _17, _4, /** @src 78:750:768  \"vm.stopBroadcast()\" */ _26, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _3, /** @src 78:750:768  \"vm.stopBroadcast()\" */ _26, /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _4)\n                        /// @src 78:750:768  \"vm.stopBroadcast()\"\n                        if iszero(_27)\n                        {\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            let pos_5 := mload(_2)\n                            returndatacopy(pos_5, _4, returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 78:750:768  \"vm.stopBroadcast()\"\n                        if _27\n                        {\n                            finalize_allocation(_26)\n                            /// @src 78:221:825  \"contract DeployMinimal is Script {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        let value_5 := and(sload(/** @src 78:498:531  \"helperConfig = new HelperConfig()\" */ 0x0f), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _10)\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let value_6 := /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ shr(24, sload(/** @src 78:628:682  \"minimalAccount = new MinimalAccount(config.entryPoint)\" */ 0x0c)), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ _10)\n                        let memPos := mload(_2)\n                        mstore(memPos, value_5)\n                        mstore(add(memPos, 32), value_6)\n                        return(memPos, _2)\n                    }\n                    case 0xc0406226 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        return(_4, _4)\n                    }\n                    case 0xc476b1f7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_7 := and(shr(24, sload(/** @src 78:260:296  \"MinimalAccount public minimalAccount\" */ 12)), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, value_7)\n                        return(memPos_1, 32)\n                    }\n                    case 0xf8ccbf47 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_8 := and(shr(16, sload(/** @src 16:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 78:221:825  \"contract DeployMinimal is Script {...\" */ 0xff)\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, iszero(iszero(value_8)))\n                        return(memPos_2, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function abi_decode_address_fromMemory(offset) -> value\n            {\n                value := mload(offset)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n        }\n        /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 79:\"script/HelperConfig.s.sol\"\n        object \"HelperConfig_50629\" {\n            code {\n                {\n                    /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                    mstore(64, memoryguard(0x80))\n                    if callvalue() { revert(0, 0) }\n                    sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ not(16711935)), 65537))\n                    let memPtr := allocate_memory()\n                    mstore(memPtr, 0)\n                    mstore(add(memPtr, 32), 0)\n                    /// @src 79:1530:1625  \"NetworkConfig({entryPoint: 0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789, account: BURNER_WALLET})\"\n                    let expr_mpos := /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                    /// @src 79:539:581  \"0x86E26DC295d7c11FF54a39aA3420E3F163581D0c\"\n                    mstore(expr_mpos, /** @src 79:1557:1599  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789)\n                    /// @src 79:1530:1625  \"NetworkConfig({entryPoint: 0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789, account: BURNER_WALLET})\"\n                    let _1 := add(expr_mpos, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 32)\n                    /// @src 79:539:581  \"0x86E26DC295d7c11FF54a39aA3420E3F163581D0c\"\n                    mstore(_1, 0x86e26dc295d7c11ff54a39aa3420e3f163581d0c)\n                    /// @src 79:399:407  \"11155111\"\n                    mstore(/** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 0, /** @src 79:399:407  \"11155111\" */ 0xaa36a7)\n                    mstore(/** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 32, /** @src 79:884:898  \"networkConfigs\" */ 0x0f)\n                    /// @src 79:399:407  \"11155111\"\n                    let dataSlot := keccak256(/** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 0, 64)\n                    /// @src 79:399:407  \"11155111\"\n                    let _2 := sub(shl(160, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 1), 1)\n                    /// @src 79:399:407  \"11155111\"\n                    let _3 := and(mload(expr_mpos), _2)\n                    let _4 := not(sub(shl(160, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 1), 1))\n                    /// @src 79:399:407  \"11155111\"\n                    sstore(dataSlot, or(and(sload(dataSlot), _4), _3))\n                    let memberSlot := add(dataSlot, /** @src 18:3166:3170  \"true\" */ 0x01)\n                    /// @src 79:399:407  \"11155111\"\n                    sstore(memberSlot, or(and(sload(memberSlot), _4), and(mload(_1), _2)))\n                    /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                    let _5 := mload(64)\n                    let _6 := datasize(\"HelperConfig_50629_deployed\")\n                    codecopy(_5, dataoffset(\"HelperConfig_50629_deployed\"), _6)\n                    return(_5, _6)\n                }\n                function allocate_memory() -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, 64)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n            }\n            /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 30:\"lib/forge-std/src/console.sol\", 79:\"script/HelperConfig.s.sol\"\n            object \"HelperConfig_50629_deployed\" {\n                code {\n                    {\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        let _1 := 64\n                        mstore(_1, memoryguard(0x80))\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            let _2 := 0\n                            switch shr(224, calldataload(_2))\n                            case 0x12900da8 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let ret := fun_getOrCreateAnvilEthConfig()\n                                let memPos := mload(_1)\n                                return(memPos, sub(abi_encode_struct_NetworkConfig(memPos, ret), memPos))\n                            }\n                            case 0x3408e470 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let memPos_1 := mload(_1)\n                                mstore(memPos_1, /** @src 79:2389:2402  \"block.chainid\" */ chainid())\n                                /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                                return(memPos_1, 32)\n                            }\n                            case 0x7b99b603 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                mstore(_2, calldataload(4))\n                                mstore(32, /** @src 79:790:853  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ 15)\n                                /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                                let dataSlot := keccak256(_2, _1)\n                                let _3 := sub(shl(160, 1), 1)\n                                let cleaned := and(sload(/** @src 79:790:853  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ dataSlot), /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _3)\n                                let cleaned_1 := and(sload(/** @src 79:790:853  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ add(dataSlot, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 1)), _3)\n                                let memPos_2 := mload(_1)\n                                return(memPos_2, sub(abi_encode_address_address(memPos_2, cleaned, cleaned_1), memPos_2))\n                            }\n                            case 0xa60f7516 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let _4 := sub(shl(160, 1), 1)\n                                let cleaned_2 := and(sload(/** @src 79:745:784  \"NetworkConfig public localNetworkConfig\" */ 13), /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _4)\n                                let cleaned_3 := and(sload(/** @src 79:745:784  \"NetworkConfig public localNetworkConfig\" */ 14), /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _4)\n                                let memPos_3 := mload(_1)\n                                return(memPos_3, sub(abi_encode_address_address(memPos_3, cleaned_2, cleaned_3), memPos_3))\n                            }\n                            case 0xc3f909d4 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let memPtr := mload(_1)\n                                finalize_allocation_2007(memPtr)\n                                mstore(memPtr, _2)\n                                mstore(add(memPtr, 32), _2)\n                                /// @src 79:1026:1067  \"return _getConfigByChainId(block.chainid)\"\n                                let var_mpos := /** @src 79:1033:1067  \"_getConfigByChainId(block.chainid)\" */ fun_getConfigByChainId(/** @src 79:1053:1066  \"block.chainid\" */ chainid())\n                                /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                                let memPos_4 := mload(_1)\n                                return(memPos_4, sub(abi_encode_struct_NetworkConfig(memPos_4, var_mpos), memPos_4))\n                            }\n                            case 0xf8ccbf47 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let value := and(shr(16, sload(/** @src 16:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 0xff)\n                                let memPos_5 := mload(_1)\n                                mstore(memPos_5, iszero(iszero(value)))\n                                return(memPos_5, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_struct_NetworkConfig(headStart, value0) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(mload(value0), _1))\n                        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n                    }\n                    function abi_encode_address_address(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                    }\n                    function finalize_allocation_2007(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, memPtr)\n                    }\n                    function read_from_storage_reference_type_struct_NetworkConfig() -> value\n                    {\n                        let memPtr := mload(64)\n                        finalize_allocation_2007(memPtr)\n                        value := memPtr\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(memPtr, and(sload(/** @src 79:1899:1917  \"localNetworkConfig\" */ 0x0d), /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _1))\n                        mstore(add(memPtr, 32), and(sload(14), _1))\n                    }\n                    /// @ast-id 50619 @src 79:1810:2314  \"function getOrCreateAnvilEthConfig() public returns (NetworkConfig memory) {...\"\n                    function fun_getOrCreateAnvilEthConfig() -> var_50568_mpos\n                    {\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        let _1 := 64\n                        let memPtr := mload(_1)\n                        finalize_allocation_2007(memPtr)\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        mstore(memPtr, /** @src -1:-1:-1 */ _2)\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        let _3 := 32\n                        mstore(add(memPtr, _3), /** @src -1:-1:-1 */ _2)\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        let _4 := sload(/** @src 79:1899:1925  \"localNetworkConfig.account\" */ 14)\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        let cleaned := /** @src -1:-1:-1 */ _2\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        let _5 := sub(shl(160, 1), 1)\n                        /// @src 79:1895:1991  \"if (localNetworkConfig.account != address(0)) {...\"\n                        if /** @src 79:1899:1939  \"localNetworkConfig.account != address(0)\" */ iszero(iszero(/** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ and(_4, _5)))\n                        /// @src 79:1895:1991  \"if (localNetworkConfig.account != address(0)) {...\"\n                        {\n                            /// @src 79:1955:1980  \"return localNetworkConfig\"\n                            var_50568_mpos := /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ read_from_storage_reference_type_struct_NetworkConfig()\n                            /// @src 79:1955:1980  \"return localNetworkConfig\"\n                            leave\n                        }\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        let memPtr_1 := mload(_1)\n                        finalize_allocation_2007(memPtr_1)\n                        mstore(memPtr_1, 15)\n                        mstore(add(memPtr_1, _3), \"Deploying mocks\")\n                        /// @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        let expr_mpos := /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ mload(_1)\n                        /// @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        let _6 := add(expr_mpos, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _3)\n                        /// @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        mstore(_6, shl(226, 0x104c13eb))\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        mstore(/** @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ add(expr_mpos, 36), /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _3)\n                        let length := mload(memPtr_1)\n                        mstore(add(/** @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 68), length)\n                        let i := /** @src -1:-1:-1 */ _2\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        for { } lt(i, length) { i := add(i, _3) }\n                        {\n                            mstore(add(add(/** @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ i), 100), mload(add(add(memPtr_1, i), _3)))\n                        }\n                        mstore(add(add(/** @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ length), 100), /** @src -1:-1:-1 */ _2)\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        let _7 := not(31)\n                        /// @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        let _8 := sub(/** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ add(/** @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ and(add(length, 31), _7)), /** @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos)\n                        mstore(expr_mpos, add(_8, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 68))\n                        let newFreePtr := add(expr_mpos, and(add(/** @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _8, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 131), _7))\n                        let _9 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _9), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(/** @src -1:-1:-1 */ _2, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ _2, /** @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ 36)\n                        }\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        mstore(_1, newFreePtr)\n                        /// @src 30:762:921  \"assembly {...\"\n                        pop(staticcall(gas(), /** @src 30:131:173  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 30:762:921  \"assembly {...\" */ _6, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ mload(/** @src 30:645:659  \"payload.length\" */ expr_mpos), /** @src -1:-1:-1 */ _2, _2))\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        let _10 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\"\n                        if iszero(extcodesize(/** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _10))\n                        /// @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\"\n                        {\n                            /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                            revert(/** @src -1:-1:-1 */ _2, _2)\n                        }\n                        /// @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\"\n                        let _11 := /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ mload(_1)\n                        /// @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\"\n                        mstore(_11, /** @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0x7fec2a8d))\n                        let _12 := 0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        mstore(/** @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\" */ add(_11, 4), /** @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _12)\n                        /// @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\"\n                        let _13 := call(gas(), /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _10, /** @src -1:-1:-1 */ _2, /** @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\" */ _11, /** @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ 36, /** @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\" */ _11, /** @src -1:-1:-1 */ _2)\n                        /// @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\"\n                        if iszero(_13)\n                        {\n                            /// @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            let pos := /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ mload(_1)\n                            /// @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\"\n                        if _13\n                        {\n                            finalize_allocation(_11)\n                            /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                            cleaned := /** @src -1:-1:-1 */ _2\n                        }\n                        /// @src 79:2115:2131  \"new EntryPoint()\"\n                        let _14 := /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ mload(_1)\n                        /// @src 79:2115:2131  \"new EntryPoint()\"\n                        let _15 := datasize(\"EntryPoint_2101\")\n                        let _16 := add(_14, _15)\n                        if or(gt(_16, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _9), /** @src 79:2115:2131  \"new EntryPoint()\" */ lt(_16, _14))\n                        {\n                            /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                            mstore(/** @src 79:1937:1938  \"0\" */ cleaned, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\" */ 4, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 0x41)\n                            revert(/** @src 79:1937:1938  \"0\" */ cleaned, /** @src 30:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ 36)\n                        }\n                        /// @src 79:2115:2131  \"new EntryPoint()\"\n                        datacopy(_14, dataoffset(\"EntryPoint_2101\"), _15)\n                        let expr_address := create(/** @src 79:1937:1938  \"0\" */ cleaned, /** @src 79:2115:2131  \"new EntryPoint()\" */ _14, sub(_16, _14))\n                        if iszero(expr_address)\n                        {\n                            /// @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            let pos_1 := /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ mload(_1)\n                            /// @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            returndatacopy(pos_1, /** @src 79:1937:1938  \"0\" */ cleaned, /** @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 79:2141:2159  \"vm.stopBroadcast()\"\n                        if iszero(extcodesize(/** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _10))\n                        /// @src 79:2141:2159  \"vm.stopBroadcast()\"\n                        {\n                            /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                            revert(/** @src 79:1937:1938  \"0\" */ cleaned, cleaned)\n                        }\n                        /// @src 79:2141:2159  \"vm.stopBroadcast()\"\n                        let _17 := /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ mload(_1)\n                        /// @src 79:2141:2159  \"vm.stopBroadcast()\"\n                        mstore(_17, /** @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(225, 0x3b756e9b))\n                        /// @src 79:2141:2159  \"vm.stopBroadcast()\"\n                        let _18 := call(gas(), /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _10, /** @src 79:1937:1938  \"0\" */ cleaned, /** @src 79:2141:2159  \"vm.stopBroadcast()\" */ _17, /** @src 79:2041:2081  \"vm.startBroadcast(ANVIL_DEFAULT_ADDRESS)\" */ 4, /** @src 79:2141:2159  \"vm.stopBroadcast()\" */ _17, /** @src 79:1937:1938  \"0\" */ cleaned)\n                        /// @src 79:2141:2159  \"vm.stopBroadcast()\"\n                        if iszero(_18)\n                        {\n                            /// @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            let pos_2 := /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ mload(_1)\n                            /// @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            returndatacopy(pos_2, /** @src 79:1937:1938  \"0\" */ cleaned, /** @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 79:2141:2159  \"vm.stopBroadcast()\"\n                        if _18\n                        {\n                            finalize_allocation(_17)\n                            /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                            if cleaned\n                            {\n                                revert(/** @src 79:1937:1938  \"0\" */ cleaned, cleaned)\n                            }\n                        }\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        let _19 := and(/** @src 79:2218:2237  \"address(entryPoint)\" */ expr_address, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _5)\n                        let memPtr_2 := mload(_1)\n                        finalize_allocation_2007(memPtr_2)\n                        mstore(memPtr_2, _19)\n                        mstore(/** @src 79:2191:2271  \"NetworkConfig({entryPoint: address(entryPoint), account: ANVIL_DEFAULT_ADDRESS})\" */ add(memPtr_2, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _3), /** @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _12)\n                        let _20 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(/** @src 79:1899:1917  \"localNetworkConfig\" */ 0x0d, /** @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ or(and(sload(/** @src 79:1899:1917  \"localNetworkConfig\" */ 0x0d), /** @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _20), /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _19))\n                        /// @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                        sstore(/** @src 79:1899:1925  \"localNetworkConfig.account\" */ 14, /** @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ or(and(sload(/** @src 79:1899:1925  \"localNetworkConfig.account\" */ 14), /** @src 79:628:670  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _20), _12))\n                        /// @src 79:2282:2307  \"return localNetworkConfig\"\n                        var_50568_mpos := /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ read_from_storage_reference_type_struct_NetworkConfig()\n                    }\n                    /// @ast-id 50537 @src 79:1080:1431  \"function _getConfigByChainId(uint256 chainId) internal returns (NetworkConfig memory) {...\"\n                    function fun_getConfigByChainId(var_chainId) -> var_mpos\n                    {\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        let memPtr := mload(64)\n                        finalize_allocation_2007(memPtr)\n                        mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                        /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                        mstore(add(memPtr, 32), /** @src -1:-1:-1 */ 0)\n                        /// @src 79:1176:1378  \"if (chainId == LOCAL_CHAIN_ID) {...\"\n                        switch /** @src 79:1180:1205  \"chainId == LOCAL_CHAIN_ID\" */ eq(var_chainId, /** @src 79:495:500  \"31337\" */ 0x7a69)\n                        case /** @src 79:1176:1378  \"if (chainId == LOCAL_CHAIN_ID) {...\" */ 0 {\n                            /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ var_chainId)\n                            mstore(32, /** @src 79:1276:1290  \"networkConfigs\" */ 0x0f)\n                            /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ 64)\n                            let _1 := sub(shl(160, 1), 1)\n                            let _2 := and(sload(/** @src 79:1276:1307  \"networkConfigs[chainId].account\" */ add(/** @src 79:1276:1299  \"networkConfigs[chainId]\" */ dataSlot, /** @src 79:1276:1307  \"networkConfigs[chainId].account\" */ 1)), /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _1)\n                            /// @src 79:1272:1378  \"if (networkConfigs[chainId].account != address(0)) {...\"\n                            if /** @src 79:1276:1321  \"networkConfigs[chainId].account != address(0)\" */ iszero(iszero(/** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ _2))\n                            /// @src 79:1272:1378  \"if (networkConfigs[chainId].account != address(0)) {...\"\n                            {\n                                /// @src 79:191:2411  \"contract HelperConfig is Script {...\"\n                                let memPtr_1 := mload(64)\n                                finalize_allocation_2007(memPtr_1)\n                                mstore(memPtr_1, and(sload(dataSlot), _1))\n                                mstore(add(memPtr_1, 32), _2)\n                                /// @src 79:1337:1367  \"return networkConfigs[chainId]\"\n                                var_mpos := memPtr_1\n                                leave\n                            }\n                        }\n                        default /// @src 79:1176:1378  \"if (chainId == LOCAL_CHAIN_ID) {...\"\n                        {\n                            /// @src 79:1221:1255  \"return getOrCreateAnvilEthConfig()\"\n                            var_mpos := /** @src 79:1228:1255  \"getOrCreateAnvilEthConfig()\" */ fun_getOrCreateAnvilEthConfig()\n                            /// @src 79:1221:1255  \"return getOrCreateAnvilEthConfig()\"\n                            leave\n                        }\n                        /// @src 79:1394:1424  \"HelperConfig__InvalidChainId()\"\n                        let _3 := /** @src 79:191:2411  \"contract HelperConfig is Script {...\" */ mload(64)\n                        /// @src 79:1394:1424  \"HelperConfig__InvalidChainId()\"\n                        mstore(_3, shl(225, 0x64780a77))\n                        revert(_3, 4)\n                    }\n                }\n                /// @use-src 0:\"lib/account-abstraction/contracts/core/EntryPoint.sol\", 2:\"lib/account-abstraction/contracts/core/NonceManager.sol\", 4:\"lib/account-abstraction/contracts/core/StakeManager.sol\", 9:\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\", 10:\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\", 12:\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\", 70:\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 74:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\", 75:\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\"\n                object \"EntryPoint_2101\" {\n                    code {\n                        {\n                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let _1 := memoryguard(0xa0)\n                            mstore(64, _1)\n                            if callvalue() { revert(0, 0) }\n                            /// @src 70:1713:1714  \"1\"\n                            sstore(/** @src 70:1917:1938  \"_status = NOT_ENTERED\" */ 0x02, /** @src 70:1713:1714  \"1\" */ 0x01)\n                            /// @src 0:985:1004  \"new SenderCreator()\"\n                            let _2 := datasize(\"SenderCreator_2418\")\n                            let _3 := add(_1, _2)\n                            if or(gt(_3, sub(shl(64, 1), 1)), lt(_3, _1))\n                            {\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                            }\n                            /// @src 0:985:1004  \"new SenderCreator()\"\n                            datacopy(_1, dataoffset(\"SenderCreator_2418\"), _2)\n                            let expr_address := create(/** @src -1:-1:-1 */ 0, /** @src 0:985:1004  \"new SenderCreator()\" */ _1, sub(_3, _1))\n                            if iszero(expr_address)\n                            {\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 0:985:1004  \"new SenderCreator()\"\n                            mstore(128, expr_address)\n                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let _4 := mload(64)\n                            let _5 := datasize(\"EntryPoint_2101_deployed\")\n                            codecopy(_4, dataoffset(\"EntryPoint_2101_deployed\"), _5)\n                            setimmutable(_4, \"35\", mload(/** @src 0:985:1004  \"new SenderCreator()\" */ 128))\n                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            return(_4, _5)\n                        }\n                    }\n                    /// @use-src 0:\"lib/account-abstraction/contracts/core/EntryPoint.sol\", 1:\"lib/account-abstraction/contracts/core/Helpers.sol\", 2:\"lib/account-abstraction/contracts/core/NonceManager.sol\", 4:\"lib/account-abstraction/contracts/core/StakeManager.sol\", 5:\"lib/account-abstraction/contracts/core/UserOperationLib.sol\", 14:\"lib/account-abstraction/contracts/utils/Exec.sol\", 70:\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 74:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\"\n                    object \"EntryPoint_2101_deployed\" {\n                        code {\n                            {\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(64, memoryguard(0x80))\n                                if iszero(lt(calldatasize(), 4))\n                                {\n                                    switch shr(224, calldataload(0))\n                                    case 0x0042dc53 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 512) { revert(0, 0) }\n                                        let offset := calldataload(4)\n                                        let _1 := 0xffffffffffffffff\n                                        if gt(offset, _1) { revert(0, 0) }\n                                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                                        let array := abi_decode_available_length_bytes(add(offset, 36), calldataload(add(4, offset)), calldatasize())\n                                        let _2 := add(calldatasize(), not(35))\n                                        if slt(_2, 0x01c0) { revert(0, 0) }\n                                        let memPtr := mload(64)\n                                        finalize_allocation_26259(memPtr)\n                                        if slt(_2, 0x0140) { revert(0, 0) }\n                                        let memPtr_1 := mload(64)\n                                        finalize_allocation_26260(memPtr_1)\n                                        let value := calldataload(36)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                        mstore(memPtr_1, value)\n                                        let _3 := 0x20\n                                        mstore(add(memPtr_1, _3), calldataload(68))\n                                        mstore(add(memPtr_1, 64), calldataload(100))\n                                        mstore(add(memPtr_1, 96), calldataload(132))\n                                        mstore(add(memPtr_1, 128), calldataload(164))\n                                        mstore(add(memPtr_1, 0xa0), calldataload(196))\n                                        mstore(add(memPtr_1, 192), calldataload(228))\n                                        let value_1 := calldataload(260)\n                                        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                        mstore(add(memPtr_1, 224), value_1)\n                                        mstore(add(memPtr_1, 256), calldataload(292))\n                                        mstore(add(memPtr_1, 288), calldataload(324))\n                                        mstore(memPtr, memPtr_1)\n                                        mstore(add(memPtr, _3), calldataload(356))\n                                        mstore(add(memPtr, 64), calldataload(388))\n                                        mstore(add(memPtr, 96), calldataload(420))\n                                        mstore(add(memPtr, 128), calldataload(452))\n                                        let offset_1 := calldataload(484)\n                                        if gt(offset_1, _1) { revert(0, 0) }\n                                        let value2, value3 := abi_decode_bytes_calldata(add(4, offset_1), calldatasize())\n                                        /// @src 0:11186:11195  \"gasleft()\"\n                                        let expr := gas()\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if iszero(/** @src 0:11213:11240  \"msg.sender == address(this)\" */ eq(/** @src 0:11213:11223  \"msg.sender\" */ caller(), /** @src 0:11235:11239  \"this\" */ address()))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_2 := mload(64)\n                                            mstore(memPtr_2, shl(229, 4594637))\n                                            mstore(add(memPtr_2, 4), _3)\n                                            mstore(add(memPtr_2, 36), 23)\n                                            mstore(add(memPtr_2, 68), \"AA92 internal call only\")\n                                            revert(memPtr_2, 100)\n                                        }\n                                        /// @src 0:11308:11322  \"opInfo.mUserOp\"\n                                        let _mpos := mload(memPtr)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _4 := mload(/** @src 0:11356:11376  \"mUserOp.callGasLimit\" */ add(_mpos, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 96))\n                                        let r := shr(6, mul(/** @src 0:11495:11504  \"gasleft()\" */ gas(), /** @src 0:11507:11509  \"63\" */ 0x3f))\n                                        /// @src 0:11491:11744  \"if (gasleft() * 63 / 64 < callGasLimit + mUserOp.paymasterPostOpGasLimit + INNER_GAS_OVERHEAD) {...\"\n                                        if /** @src 0:11495:11584  \"gasleft() * 63 / 64 < callGasLimit + mUserOp.paymasterPostOpGasLimit + INNER_GAS_OVERHEAD\" */ lt(r, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(add(_4, mload(/** @src 0:11532:11563  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0))), /** @src 0:1296:1301  \"10000\" */ 0x2710))\n                                        /// @src 0:11491:11744  \"if (gasleft() * 63 / 64 < callGasLimit + mUserOp.paymasterPostOpGasLimit + INNER_GAS_OVERHEAD) {...\"\n                                        {\n                                            /// @src 0:11604:11730  \"assembly (\\\"memory-safe\\\") {...\"\n                                            mstore(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:11604:11730  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeaddead))\n                                            revert(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, _3)\n                                        }\n                                        /// @src 0:11764:11826  \"IPaymaster.PostOpMode mode = IPaymaster.PostOpMode.opSucceeded\"\n                                        let var_mode := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:11840:11855  \"callData.length\"\n                                        let expr_1 := /** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:11840:11855  \"callData.length\" */ array)\n                                        /// @src 0:11836:12302  \"if (callData.length > 0) {...\"\n                                        if /** @src 0:11840:11859  \"callData.length > 0\" */ iszero(iszero(expr_1))\n                                        /// @src 0:11836:12302  \"if (callData.length > 0) {...\"\n                                        {\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let cleaned := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:11900:11914  \"mUserOp.sender\" */ _mpos), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            /// @src 0:11956:12292  \"if (!success) {...\"\n                                            if /** @src 0:11960:11968  \"!success\" */ iszero(/** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ call(_4, cleaned, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ add(array, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), /** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ expr_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0))\n                                            /// @src 0:11956:12292  \"if (!success) {...\"\n                                            {\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                let usr$len := returndatasize()\n                                                /// @src 0:1542:1546  \"2048\"\n                                                let _5 := 0x0800\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                if gt(usr$len, /** @src 0:1542:1546  \"2048\" */ _5)\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                {\n                                                    usr$len := /** @src 0:1542:1546  \"2048\" */ _5\n                                                }\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                let usr$ptr := mload(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(usr$ptr, usr$len)\n                                                returndatacopy(add(usr$ptr, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                                /// @src 0:12069:12221  \"if (result.length > 0) {...\"\n                                                if /** @src 0:12073:12090  \"result.length > 0\" */ iszero(iszero(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:12073:12086  \"result.length\" */ usr$ptr)))\n                                                /// @src 0:12069:12221  \"if (result.length > 0) {...\"\n                                                {\n                                                    /// @src 0:1542:1546  \"2048\"\n                                                    let _6 := mload(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr, _3))\n                                                    let cleaned_1 := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:12164:12178  \"mUserOp.sender\" */ _mpos), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                    let _7 := mload(/** @src 0:12180:12193  \"mUserOp.nonce\" */ add(_mpos, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                    /// @src 0:12119:12202  \"UserOperationRevertReason(opInfo.userOpHash, mUserOp.sender, mUserOp.nonce, result)\"\n                                                    let _8 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    mstore(_8, _7)\n                                                    /// @src 0:1542:1546  \"2048\"\n                                                    mstore(add(_8, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), 64)\n                                                    /// @src 0:12119:12202  \"UserOperationRevertReason(opInfo.userOpHash, mUserOp.sender, mUserOp.nonce, result)\"\n                                                    log3(_8, sub(/** @src 0:1542:1546  \"2048\" */ abi_encode_bytes(usr$ptr, add(_8, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)), /** @src 0:12119:12202  \"UserOperationRevertReason(opInfo.userOpHash, mUserOp.sender, mUserOp.nonce, result)\" */ _8), 0x1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201, _6, cleaned_1)\n                                                }\n                                                /// @src 0:12238:12277  \"mode = IPaymaster.PostOpMode.opReverted\"\n                                                var_mode := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1\n                                            }\n                                        }\n                                        /// @src 0:1542:1546  \"2048\"\n                                        let diff := sub(expr, /** @src 0:12365:12374  \"gasleft()\" */ gas())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _9 := add(diff, mload(add(memPtr, 128)))\n                                        /// @src 0:1542:1546  \"2048\"\n                                        let _10 := abi_decode_available_length_bytes(/** @src 0:12413:12461  \"_postExecution(mode, opInfo, context, actualGas)\" */ value2, value3, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldatasize())\n                                        /// @src 0:12413:12461  \"_postExecution(mode, opInfo, context, actualGas)\"\n                                        let var_actualGas := _9\n                                        let var_actualGasCost := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:25391:25400  \"gasleft()\"\n                                        let expr_2 := gas()\n                                        /// @src 0:25434:25455  \"address refundAddress\"\n                                        let var_refundAddress := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:25434:25455  \"address refundAddress\"\n                                        let var_refundAddress_1 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:25499:25513  \"opInfo.mUserOp\"\n                                        let _mpos_1 := mload(memPtr)\n                                        /// @src 0:25546:25572  \"getUserOpGasPrice(mUserOp)\"\n                                        let expr_3 := fun_getUserOpGasPrice(_mpos_1)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let cleaned_2 := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:25607:25624  \"mUserOp.paymaster\" */ add(_mpos_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 224)), sub(shl(160, 1), 1))\n                                        /// @src 0:25638:26482  \"if (paymaster == address(0)) {...\"\n                                        switch /** @src 0:25642:25665  \"paymaster == address(0)\" */ iszero(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                        case /** @src 0:25638:26482  \"if (paymaster == address(0)) {...\" */ 0 {\n                                            /// @src 0:25754:25779  \"refundAddress = paymaster\"\n                                            var_refundAddress := cleaned_2\n                                            /// @src 0:25797:26468  \"if (context.length > 0) {...\"\n                                            if /** @src 0:25801:25819  \"context.length > 0\" */ iszero(iszero(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:25801:25815  \"context.length\" */ _10)))\n                                            /// @src 0:25797:26468  \"if (context.length > 0) {...\"\n                                            {\n                                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if iszero(lt(var_mode, 3))\n                                                {\n                                                    mstore(0, shl(224, 0x4e487b71))\n                                                    mstore(4, 0x21)\n                                                    revert(0, 36)\n                                                }\n                                                /// @src 0:25901:26450  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                if /** @src 0:25905:25949  \"mode != IPaymaster.PostOpMode.postOpReverted\" */ iszero(eq(var_mode, /** @src 0:25913:25949  \"IPaymaster.PostOpMode.postOpReverted\" */ 2))\n                                                /// @src 0:25901:26450  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                {\n                                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _11 := mload(/** @src 0:26015:26046  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0))\n                                                    /// @src 0:25981:26141  \"IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\"\n                                                    if iszero(extcodesize(cleaned_2))\n                                                    {\n                                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        revert(0, 0)\n                                                    }\n                                                    /// @src 0:25981:26141  \"IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\"\n                                                    let _12 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:25981:26141  \"IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\"\n                                                    mstore(_12, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x7c627b21))\n                                                    mstore(/** @src 0:25981:26141  \"IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\" */ add(_12, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_mode)\n                                                    mstore(add(/** @src 0:25981:26141  \"IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\" */ _12, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 128)\n                                                    let tail := abi_encode_bytes(_10, add(/** @src 0:25981:26141  \"IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\" */ _12, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132))\n                                                    mstore(add(/** @src 0:25981:26141  \"IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\" */ _12, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), mul(/** @src 0:25859:25879  \"actualGas * gasPrice\" */ _9, expr_3))\n                                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(add(/** @src 0:25981:26141  \"IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\" */ _12, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), expr_3)\n                                                    /// @src 0:25981:26141  \"IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\"\n                                                    let trySuccessCondition := call(_11, cleaned_2, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:25981:26141  \"IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\" */ _12, sub(tail, _12), _12, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                                    /// @src 0:25981:26141  \"IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\"\n                                                    if trySuccessCondition\n                                                    {\n                                                        finalize_allocation_26283(_12)\n                                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        var_refundAddress_1 := 0\n                                                    }\n                                                    /// @src 0:25977:26428  \"try IPaymaster(paymaster).postOp{gas: mUserOp.paymasterPostOpGasLimit}(...\"\n                                                    switch iszero(trySuccessCondition)\n                                                    case 0 { }\n                                                    default {\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        let usr$len_1 := returndatasize()\n                                                        /// @src 0:1542:1546  \"2048\"\n                                                        let _13 := 0x0800\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        if gt(usr$len_1, /** @src 0:1542:1546  \"2048\" */ _13)\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        {\n                                                            usr$len_1 := /** @src 0:1542:1546  \"2048\" */ _13\n                                                        }\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        let usr$ptr_1 := mload(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        mstore(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr_1, usr$len_1), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        mstore(usr$ptr_1, usr$len_1)\n                                                        returndatacopy(add(usr$ptr_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), /** @src -1:-1:-1 */ var_refundAddress_1, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len_1)\n                                                        /// @src 0:26379:26401  \"PostOpReverted(reason)\"\n                                                        let _14 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:26379:26401  \"PostOpReverted(reason)\"\n                                                        mstore(_14, shl(226, 0x2b5e552f))\n                                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(/** @src 0:26379:26401  \"PostOpReverted(reason)\" */ add(_14, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), _3)\n                                                        /// @src 0:26379:26401  \"PostOpReverted(reason)\"\n                                                        revert(_14, sub(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr_1, add(/** @src 0:26379:26401  \"PostOpReverted(reason)\" */ _14, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:26379:26401  \"PostOpReverted(reason)\" */ _14))\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        default /// @src 0:25638:26482  \"if (paymaster == address(0)) {...\"\n                                        {\n                                            /// @src 0:25685:25715  \"refundAddress = mUserOp.sender\"\n                                            var_refundAddress := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:25701:25715  \"mUserOp.sender\" */ _mpos_1), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        }\n                                        /// @src 0:26495:26526  \"actualGas += preGas - gasleft()\"\n                                        var_actualGas := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(_9, /** @src 0:1542:1546  \"2048\" */ sub(expr_2, /** @src 0:26517:26526  \"gasleft()\" */ gas()))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _15 := mload(/** @src 0:26649:26669  \"mUserOp.callGasLimit\" */ add(_mpos_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 96))\n                                        let sum := add(_15, mload(/** @src 0:26672:26703  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0)))\n                                        /// @src 0:1542:1546  \"2048\"\n                                        let diff_1 := sub(var_actualGas, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(add(memPtr, 128)))\n                                        /// @src 0:26909:27183  \"if (executionGasLimit > executionGasUsed) {...\"\n                                        if /** @src 0:26913:26949  \"executionGasLimit > executionGasUsed\" */ gt(sum, diff_1)\n                                        /// @src 0:26909:27183  \"if (executionGasLimit > executionGasUsed) {...\"\n                                        {\n                                            /// @src 0:27135:27164  \"actualGas += unusedGasPenalty\"\n                                            var_actualGas := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, div(mul(/** @src 0:1542:1546  \"2048\" */ sub(/** @src 0:26993:27029  \"executionGasLimit - executionGasUsed\" */ sum, diff_1), /** @src 0:1595:1597  \"10\" */ 0x0a), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100))\n                                        }\n                                        /// @src 0:27211:27247  \"actualGasCost = actualGas * gasPrice\"\n                                        var_actualGasCost := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mul(/** @src 0:27227:27247  \"actualGas * gasPrice\" */ var_actualGas, expr_3)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _16 := mload(add(memPtr, 64))\n                                        /// @src 0:27307:28100  \"if (prefund < actualGasCost) {...\"\n                                        switch /** @src 0:27311:27334  \"prefund < actualGasCost\" */ lt(_16, var_actualGasCost)\n                                        case /** @src 0:27307:28100  \"if (prefund < actualGasCost) {...\" */ 0 {\n                                            /// @src 0:27888:27928  \"_incrementDeposit(refundAddress, refund)\"\n                                            pop(fun_incrementDeposit(var_refundAddress, /** @src 0:1542:1546  \"2048\" */ sub(/** @src 0:27847:27870  \"prefund - actualGasCost\" */ _16, var_actualGasCost)))\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            if iszero(lt(var_mode, 3))\n                                            {\n                                                mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                mstore(4, 0x21)\n                                                revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                            }\n                                            /// @src 0:1542:1546  \"2048\"\n                                            let _17 := mload(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr, _3))\n                                            /// @src 0:6163:6177  \"opInfo.mUserOp\"\n                                            let _mpos_2 := mload(memPtr)\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let cleaned_3 := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:6163:6184  \"opInfo.mUserOp.sender\" */ _mpos_2), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            let cleaned_4 := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:6198:6222  \"opInfo.mUserOp.paymaster\" */ add(_mpos_2, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 224)), sub(shl(160, 1), 1))\n                                            let _18 := mload(/** @src 0:6236:6256  \"opInfo.mUserOp.nonce\" */ add(_mpos_2, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                            /// @src 0:6100:6337  \"UserOperationEvent(...\"\n                                            let _19 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                            mstore(_19, _18)\n                                            mstore(add(_19, _3), /** @src 0:27961:28002  \"mode == IPaymaster.PostOpMode.opSucceeded\" */ iszero(var_mode))\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(_19, 64), var_actualGasCost)\n                                            mstore(add(_19, 96), var_actualGas)\n                                            /// @src 0:6100:6337  \"UserOperationEvent(...\"\n                                            log4(_19, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 128, /** @src 0:6100:6337  \"UserOperationEvent(...\" */ 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _17, cleaned_3, cleaned_4)\n                                        }\n                                        default /// @src 0:27307:28100  \"if (prefund < actualGasCost) {...\"\n                                        {\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            if iszero(lt(var_mode, 3))\n                                            {\n                                                mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                mstore(4, 0x21)\n                                                revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                            }\n                                            /// @src 0:27354:27792  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\"\n                                            switch /** @src 0:27358:27402  \"mode == IPaymaster.PostOpMode.postOpReverted\" */ eq(var_mode, /** @src 0:27366:27402  \"IPaymaster.PostOpMode.postOpReverted\" */ 2)\n                                            case /** @src 0:27354:27792  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\" */ 0 {\n                                                /// @src 0:27628:27774  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:27628:27774  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeadaa51))\n                                                revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3)\n                                            }\n                                            default /// @src 0:27354:27792  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\"\n                                            {\n                                                /// @src 0:27426:27449  \"actualGasCost = prefund\"\n                                                var_actualGasCost := _16\n                                                /// @src 0:27489:27495  \"opInfo\"\n                                                fun_emitPrefundTooLow(memPtr)\n                                                /// @src 0:27571:27580  \"actualGas\"\n                                                fun_emitUserOperationEvent(memPtr, _16, var_actualGas)\n                                            }\n                                        }\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let memPos := mload(64)\n                                        mstore(memPos, var_actualGasCost)\n                                        return(memPos, _3)\n                                    }\n                                    case 0x01ffc9a7 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let value_2 := calldataload(4)\n                                        let _20 := and(value_2, shl(224, 0xffffffff))\n                                        if iszero(eq(value_2, _20)) { revert(0, 0) }\n                                        /// @src 0:1859:2045  \"interfaceId...\"\n                                        let expr_4 := /** @src 0:1859:1985  \"interfaceId...\" */ eq(_20, /** @src 0:1887:1984  \"type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId\" */ shl(225, 0x307e35b7))\n                                        /// @src 0:1859:2045  \"interfaceId...\"\n                                        if iszero(expr_4)\n                                        {\n                                            expr_4 := /** @src 0:2001:2045  \"interfaceId == type(IEntryPoint).interfaceId\" */ eq(_20, /** @src 0:1887:1916  \"type(IEntryPoint).interfaceId\" */ shl(227, 0x122a0e9b))\n                                        }\n                                        /// @src 0:1859:2095  \"interfaceId...\"\n                                        let expr_5 := expr_4\n                                        if iszero(expr_4)\n                                        {\n                                            expr_5 := /** @src 0:2049:2095  \"interfaceId == type(IStakeManager).interfaceId\" */ eq(_20, /** @src 0:1919:1950  \"type(IStakeManager).interfaceId\" */ shl(224, 0xcf28ef97))\n                                        }\n                                        /// @src 0:1859:2157  \"interfaceId...\"\n                                        let expr_6 := expr_5\n                                        if iszero(expr_5)\n                                        {\n                                            expr_6 := /** @src 0:2111:2157  \"interfaceId == type(INonceManager).interfaceId\" */ eq(_20, /** @src 0:1953:1984  \"type(INonceManager).interfaceId\" */ shl(224, 0x3e84f021))\n                                        }\n                                        /// @src 0:1859:2197  \"interfaceId...\"\n                                        let expr_7 := expr_6\n                                        if iszero(expr_6)\n                                        {\n                                            expr_7 := /** @src 74:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_20, /** @src 74:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                                        }\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let memPos_1 := mload(64)\n                                        mstore(memPos_1, iszero(iszero(expr_7)))\n                                        return(memPos_1, 32)\n                                    }\n                                    case 0x0396cb60 {\n                                        let _21 := 32\n                                        if slt(add(calldatasize(), not(3)), _21) { revert(0, 0) }\n                                        let value_3 := calldataload(4)\n                                        let _22 := 0xffffffff\n                                        let _23 := and(value_3, _22)\n                                        if iszero(eq(value_3, _23)) { revert(0, 0) }\n                                        mstore(0, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_21, 0)\n                                        let dataSlot := keccak256(0, 64)\n                                        if /** @src 4:2457:2476  \"unstakeDelaySec > 0\" */ iszero(_23)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_3 := mload(64)\n                                            mstore(memPtr_3, shl(229, 4594637))\n                                            mstore(add(memPtr_3, 4), _21)\n                                            mstore(add(memPtr_3, 36), 26)\n                                            mstore(add(memPtr_3, 68), \"must specify unstake delay\")\n                                            revert(memPtr_3, 100)\n                                        }\n                                        let _24 := sload(/** @src 4:2557:2577  \"info.unstakeDelaySec\" */ add(dataSlot, 1))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if /** @src 4:2538:2577  \"unstakeDelaySec >= info.unstakeDelaySec\" */ lt(_23, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(120, _24), _22))\n                                        {\n                                            let memPtr_4 := mload(64)\n                                            mstore(memPtr_4, shl(229, 4594637))\n                                            mstore(add(memPtr_4, 4), _21)\n                                            mstore(add(memPtr_4, 36), 28)\n                                            mstore(add(memPtr_4, 68), \"cannot decrease unstake time\")\n                                            revert(memPtr_4, 100)\n                                        }\n                                        let _25 := 0xffffffffffffffffffffffffffff\n                                        /// @src 4:2657:2679  \"info.stake + msg.value\"\n                                        let expr_8 := checked_add_uint256(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(8, _24), _25), /** @src 4:2670:2679  \"msg.value\" */ callvalue())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if /** @src 4:2697:2706  \"stake > 0\" */ iszero(expr_8)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_5 := mload(64)\n                                            mstore(memPtr_5, shl(229, 4594637))\n                                            mstore(add(memPtr_5, 4), _21)\n                                            mstore(add(memPtr_5, 36), 18)\n                                            mstore(add(memPtr_5, 68), \"no stake specified\")\n                                            revert(memPtr_5, 100)\n                                        }\n                                        if /** @src 4:2747:2773  \"stake <= type(uint112).max\" */ gt(expr_8, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _25)\n                                        {\n                                            let memPtr_6 := mload(64)\n                                            mstore(memPtr_6, shl(229, 4594637))\n                                            mstore(add(memPtr_6, 4), _21)\n                                            mstore(add(memPtr_6, 36), 14)\n                                            mstore(add(memPtr_6, 68), \"stake overflow\")\n                                            revert(memPtr_6, 100)\n                                        }\n                                        let _26 := sload(/** @src 4:2850:2862  \"info.deposit\" */ dataSlot)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let memPtr_7 := mload(64)\n                                        finalize_allocation_26259(memPtr_7)\n                                        mstore(memPtr_7, _26)\n                                        /// @src 4:2825:2962  \"DepositInfo(...\"\n                                        let _27 := add(memPtr_7, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _21)\n                                        mstore(_27, /** @src 4:2557:2577  \"info.unstakeDelaySec\" */ 1)\n                                        /// @src 4:2825:2962  \"DepositInfo(...\"\n                                        let _28 := add(memPtr_7, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                        mstore(_28, and(/** @src 4:2894:2908  \"uint112(stake)\" */ expr_8, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _25))\n                                        /// @src 4:2825:2962  \"DepositInfo(...\"\n                                        let _29 := add(memPtr_7, 96)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_29, _23)\n                                        /// @src 4:2825:2962  \"DepositInfo(...\"\n                                        let _30 := add(memPtr_7, 128)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_30, 0)\n                                        mstore(0, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_21, 0)\n                                        let dataSlot_1 := keccak256(0, 64)\n                                        sstore(dataSlot_1, mload(memPtr_7))\n                                        let memberSlot := add(dataSlot_1, /** @src 4:2557:2577  \"info.unstakeDelaySec\" */ 1)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _31 := iszero(iszero(mload(_27)))\n                                        let _32 := sload(memberSlot)\n                                        let _33 := and(shl(8, mload(_28)), 0xffffffffffffffffffffffffffff00)\n                                        sstore(memberSlot, or(or(_33, or(and(_32, shl(152, 0xffffffffffffffffffffffffff)), and(_31, 255))), and(shl(120, mload(_29)), shl(120, 0xffffffff))))\n                                        update_storage_value_offsett_uint48_to_uint48(memberSlot, and(mload(_30), 0xffffffffffff))\n                                        /// @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                                        let _34 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        mstore(_34, expr_8)\n                                        mstore(add(_34, _21), _23)\n                                        /// @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                                        log2(_34, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\" */ 0xa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x0bd28e3b {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let value_4 := calldataload(4)\n                                        let _35 := and(value_4, sub(shl(192, 1), 1))\n                                        if iszero(eq(value_4, _35)) { revert(0, 0) }\n                                        mstore(0, /** @src 2:913:923  \"msg.sender\" */ caller())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(32, /** @src 2:893:912  \"nonceSequenceNumber\" */ 0x01)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _36 := keccak256(0, 64)\n                                        mstore(0, _35)\n                                        mstore(32, _36)\n                                        let dataSlot_2 := keccak256(0, 64)\n                                        sstore(dataSlot_2, /** @src 2:893:931  \"nonceSequenceNumber[msg.sender][key]++\" */ increment_uint256(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 2:893:931  \"nonceSequenceNumber[msg.sender][key]++\" */ dataSlot_2)))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x1b2e01b8 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0 := abi_decode_address()\n                                        let value1 := abi_decode_uint192()\n                                        mstore(0, and(value0, sub(shl(160, 1), 1)))\n                                        mstore(32, /** @src 2:279:353  \"mapping(address => mapping(uint192 => uint256)) public nonceSequenceNumber\" */ 1)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _37 := keccak256(0, 64)\n                                        mstore(0, and(value1, sub(shl(192, 1), 1)))\n                                        mstore(32, _37)\n                                        let _38 := sload(keccak256(0, 64))\n                                        let memPos_2 := mload(64)\n                                        mstore(memPos_2, _38)\n                                        return(memPos_2, 32)\n                                    }\n                                    case 0x205c2878 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0_1 := abi_decode_address()\n                                        let value_5 := calldataload(36)\n                                        mstore(0, /** @src 4:4805:4815  \"msg.sender\" */ caller())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(32, 0)\n                                        let dataSlot_3 := keccak256(0, 64)\n                                        let _39 := sload(/** @src 4:4852:4864  \"info.deposit\" */ dataSlot_3)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if /** @src 4:4834:4864  \"withdrawAmount <= info.deposit\" */ gt(value_5, _39)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_8 := mload(64)\n                                            mstore(memPtr_8, shl(229, 4594637))\n                                            mstore(add(memPtr_8, 4), 32)\n                                            mstore(add(memPtr_8, 36), 25)\n                                            mstore(add(memPtr_8, 68), \"Withdraw amount too large\")\n                                            revert(memPtr_8, 100)\n                                        }\n                                        sstore(dataSlot_3, /** @src 4:4919:4948  \"info.deposit - withdrawAmount\" */ checked_sub_uint256(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _39, /** @src 4:4919:4948  \"info.deposit - withdrawAmount\" */ value_5))\n                                        /// @src 4:4963:5017  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                                        let _40 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 4:4963:5017  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                                        log2(_40, sub(abi_encode_address_payable_uint256(_40, value0_1, value_5), _40), 0xd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb, /** @src 4:4805:4815  \"msg.sender\" */ caller())\n                                        /// @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                                        let expr_component := call(gas(), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:5045:5065  \"withdrawAddress.call\" */ value0_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), /** @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\" */ value_5, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, 0, 0)\n                                        /// @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                                        pop(extract_returndata())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if iszero(expr_component)\n                                        {\n                                            let memPtr_9 := mload(64)\n                                            mstore(memPtr_9, shl(229, 4594637))\n                                            mstore(add(memPtr_9, 4), 32)\n                                            mstore(add(memPtr_9, 36), 18)\n                                            mstore(add(memPtr_9, 68), \"failed to withdraw\")\n                                            revert(memPtr_9, 100)\n                                        }\n                                        return(0, 0)\n                                    }\n                                    case 0x22cdde4c {\n                                        if callvalue() { revert(0, 0) }\n                                        let _41 := not(3)\n                                        if slt(add(calldatasize(), _41), 32) { revert(0, 0) }\n                                        let offset_2 := calldataload(4)\n                                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                                        if slt(add(sub(calldatasize(), offset_2), _41), 288) { revert(0, 0) }\n                                        let ret := fun_getUserOpHash(add(4, offset_2))\n                                        let memPos_3 := mload(64)\n                                        mstore(memPos_3, ret)\n                                        return(memPos_3, 32)\n                                    }\n                                    case 0x35567e1a {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0_2 := abi_decode_address()\n                                        let value1_1 := abi_decode_uint192()\n                                        mstore(0, and(value0_2, sub(shl(160, 1), 1)))\n                                        mstore(32, /** @src 2:507:526  \"nonceSequenceNumber\" */ 0x01)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _42 := keccak256(0, 64)\n                                        mstore(0, and(value1_1, sub(shl(192, 1), 1)))\n                                        mstore(32, _42)\n                                        let _43 := sload(keccak256(0, 64))\n                                        let memPos_4 := mload(64)\n                                        mstore(memPos_4, /** @src 2:507:562  \"nonceSequenceNumber[sender][key] | (uint256(key) << 64)\" */ or(_43, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shl(64, /** @src 2:543:555  \"uint256(key)\" */ value1_1), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(0xffffffffffffffff))))\n                                        return(memPos_4, 32)\n                                    }\n                                    case 0x5287ce12 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let value0_3 := abi_decode_address()\n                                        let memPtr_10 := mload(64)\n                                        finalize_allocation_26259(memPtr_10)\n                                        mstore(memPtr_10, 0)\n                                        mstore(add(memPtr_10, 32), 0)\n                                        mstore(add(memPtr_10, 64), 0)\n                                        mstore(add(memPtr_10, 96), 0)\n                                        mstore(add(memPtr_10, 128), 0)\n                                        mstore(0, and(value0_3, sub(shl(160, 1), 1)))\n                                        mstore(32, 0)\n                                        let dataSlot_4 := keccak256(0, 64)\n                                        let memPtr_11 := mload(64)\n                                        finalize_allocation_26259(memPtr_11)\n                                        let _44 := sload(dataSlot_4)\n                                        mstore(memPtr_11, _44)\n                                        let _45 := sload(add(dataSlot_4, 1))\n                                        let _46 := add(memPtr_11, 32)\n                                        mstore(_46, iszero(iszero(and(_45, 0xff))))\n                                        let _47 := 0xffffffffffffffffffffffffffff\n                                        let _48 := add(memPtr_11, 64)\n                                        mstore(_48, and(shr(8, _45), _47))\n                                        let _49 := 0xffffffff\n                                        let _50 := add(memPtr_11, 96)\n                                        mstore(_50, and(shr(120, _45), _49))\n                                        let _51 := 0xffffffffffff\n                                        let _52 := add(memPtr_11, 128)\n                                        mstore(_52, and(shr(152, _45), _51))\n                                        let memPos_5 := mload(64)\n                                        mstore(memPos_5, _44)\n                                        mstore(add(memPos_5, 32), iszero(iszero(mload(_46))))\n                                        mstore(add(memPos_5, 64), and(mload(_48), _47))\n                                        mstore(add(memPos_5, 96), and(mload(_50), _49))\n                                        mstore(add(memPos_5, 128), and(mload(_52), _51))\n                                        return(memPos_5, 160)\n                                    }\n                                    case 0x70a08231 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                        mstore(32, 0)\n                                        let _53 := sload(keccak256(0, 64))\n                                        let memPos_6 := mload(64)\n                                        mstore(memPos_6, _53)\n                                        return(memPos_6, 32)\n                                    }\n                                    case 0x765e827f {\n                                        if callvalue() { revert(0, 0) }\n                                        let param, param_1, param_2 := abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                                        /// @src 70:2322:2425  \"modifier nonReentrant() {...\"\n                                        fun_nonReentrantBefore()\n                                        /// @src 0:6751:6775  \"new UserOpInfo[](opslen)\"\n                                        let expr_mpos := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(param_1)\n                                        /// @src 0:6815:6828  \"uint256 i = 0\"\n                                        let var_i := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:6810:7135  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                        for { }\n                                        /** @src 0:6830:6840  \"i < opslen\" */ lt(var_i, param_1)\n                                        /// @src 0:6815:6828  \"uint256 i = 0\"\n                                        {\n                                            /// @src 0:6842:6845  \"i++\"\n                                            var_i := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:6842:6845  \"i++\" */ var_i, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                        }\n                                        /// @src 0:6842:6845  \"i++\"\n                                        {\n                                            /// @src 0:6973:7011  \"_validatePrepayment(i, ops[i], opInfo)\"\n                                            let expr_component_1, expr_component_2 := fun_validatePrepayment(var_i, /** @src 0:6996:7002  \"ops[i]\" */ calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(param, param_1, var_i), /** @src 0:6892:6902  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i)))\n                                            /// @src 0:20568:20602  \"_getValidationData(validationData)\"\n                                            let expr_component_3, expr_component_4 := fun_getValidationData(expr_component_1)\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _54 := sub(shl(160, 1), 1)\n                                            /// @src 0:20612:20723  \"if (expectedAggregator != aggregator) {...\"\n                                            if /** @src 0:20616:20648  \"expectedAggregator != aggregator\" */ iszero(iszero(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:20616:20648  \"expectedAggregator != aggregator\" */ expr_component_3, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _54)))\n                                            /// @src 0:20612:20723  \"if (expectedAggregator != aggregator) {...\"\n                                            {\n                                                /// @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                let _55 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                mstore(_55, shl(225, 0x1101335b))\n                                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ add(_55, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                mstore(add(/** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                mstore(add(/** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                mstore(add(/** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA24 signature error\")\n                                                /// @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                revert(_55, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 0:20732:20828  \"if (outOfTimeRange) {...\"\n                                            if expr_component_4\n                                            {\n                                                /// @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                let _56 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                mstore(_56, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ add(_56, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                mstore(add(/** @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                mstore(add(/** @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                                mstore(add(/** @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA22 expired or not due\")\n                                                /// @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                revert(_56, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 0:21130:21173  \"_getValidationData(paymasterValidationData)\"\n                                            let expr_component_5, expr_component_6 := fun_getValidationData(expr_component_2)\n                                            /// @src 0:21183:21288  \"if (pmAggregator != address(0)) {...\"\n                                            if /** @src 0:21187:21213  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:21187:21213  \"pmAggregator != address(0)\" */ expr_component_5, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _54)))\n                                            /// @src 0:21183:21288  \"if (pmAggregator != address(0)) {...\"\n                                            {\n                                                /// @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                let _57 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                mstore(_57, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ add(_57, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                mstore(add(/** @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                mstore(add(/** @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                mstore(add(/** @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA34 signature error\")\n                                                /// @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                revert(_57, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 0:21297:21403  \"if (outOfTimeRange) {...\"\n                                            if expr_component_6\n                                            {\n                                                /// @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                let _58 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                mstore(_58, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ add(_58, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                mstore(add(/** @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                mstore(add(/** @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 33)\n                                                mstore(add(/** @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA32 paymaster expired or not du\")\n                                                mstore(add(/** @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"e\")\n                                                /// @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                revert(_58, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                            }\n                                        }\n                                        /// @src 0:7149:7170  \"uint256 collected = 0\"\n                                        let var_collected := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:7189:7206  \"BeforeExecution()\"\n                                        log1(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:7189:7206  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                                        /// @src 0:7226:7239  \"uint256 i = 0\"\n                                        let var_i_1 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:7221:7341  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                        for { }\n                                        /** @src 0:7241:7251  \"i < opslen\" */ lt(var_i_1, param_1)\n                                        /// @src 0:7226:7239  \"uint256 i = 0\"\n                                        {\n                                            /// @src 0:7253:7256  \"i++\"\n                                            var_i_1 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:7253:7256  \"i++\" */ var_i_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                        }\n                                        /// @src 0:7253:7256  \"i++\"\n                                        {\n                                            /// @src 0:7307:7313  \"ops[i]\"\n                                            let expr_offset := calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(param, param_1, var_i_1)\n                                            /// @src 0:7276:7326  \"collected += _executeUserOp(i, ops[i], opInfos[i])\"\n                                            var_collected := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_collected, /** @src 0:7289:7326  \"_executeUserOp(i, ops[i], opInfos[i])\" */ fun_executeUserOp(var_i_1, expr_offset, /** @src 0:7315:7325  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i_1))))\n                                        }\n                                        /// @src 0:7380:7389  \"collected\"\n                                        fun_compensate(param_2, var_collected)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(/** @src 70:2924:2945  \"_status = NOT_ENTERED\" */ 0x02, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                        return(0, 0)\n                                    }\n                                    case 0x850aaf62 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0_4 := abi_decode_address()\n                                        let offset_3 := calldataload(36)\n                                        if gt(offset_3, 0xffffffffffffffff) { revert(0, 0) }\n                                        let value1_2, value2_1 := abi_decode_bytes_calldata(add(4, offset_3), calldatasize())\n                                        /// @src 0:29607:29632  \"target.delegatecall(data)\"\n                                        let _59 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        calldatacopy(_59, value1_2, value2_1)\n                                        let _60 := add(_59, value2_1)\n                                        mstore(_60, 0)\n                                        /// @src 0:29607:29632  \"target.delegatecall(data)\"\n                                        let expr_component_7 := delegatecall(gas(), value0_4, _59, sub(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _60, /** @src 0:29607:29632  \"target.delegatecall(data)\" */ _59), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0)\n                                        /// @src 0:29607:29632  \"target.delegatecall(data)\"\n                                        let expr_component_mpos := extract_returndata()\n                                        /// @src 0:29649:29680  \"DelegateAndRevert(success, ret)\"\n                                        let _61 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 0:29649:29680  \"DelegateAndRevert(success, ret)\"\n                                        mstore(_61, shl(226, 0x26504155))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:29649:29680  \"DelegateAndRevert(success, ret)\" */ add(_61, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), iszero(iszero(expr_component_7)))\n                                        mstore(add(/** @src 0:29649:29680  \"DelegateAndRevert(success, ret)\" */ _61, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                        /// @src 0:29649:29680  \"DelegateAndRevert(success, ret)\"\n                                        revert(_61, sub(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(expr_component_mpos, add(/** @src 0:29649:29680  \"DelegateAndRevert(success, ret)\" */ _61, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68)), /** @src 0:29649:29680  \"DelegateAndRevert(success, ret)\" */ _61))\n                                    }\n                                    case /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x9b249f69 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let offset_4 := calldataload(4)\n                                        if gt(offset_4, 0xffffffffffffffff) { revert(0, 0) }\n                                        let value0_5, value1_3 := abi_decode_bytes_calldata(add(4, offset_4), calldatasize())\n                                        let _62 := sub(shl(160, 1), 1)\n                                        /// @src 0:15911:15949  \"senderCreator().createSender(initCode)\"\n                                        let _63 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 0:15911:15949  \"senderCreator().createSender(initCode)\"\n                                        mstore(_63, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(225, 0x2b870d1b))\n                                        mstore(/** @src 0:15911:15949  \"senderCreator().createSender(initCode)\" */ add(_63, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), 32)\n                                        /// @src 0:15911:15949  \"senderCreator().createSender(initCode)\"\n                                        let _64 := call(gas(), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1099:1113  \"_senderCreator\" */ loadimmutable(\"35\"), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _62), 0, /** @src 0:15911:15949  \"senderCreator().createSender(initCode)\" */ _63, sub(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(value0_5, value1_3, add(/** @src 0:15911:15949  \"senderCreator().createSender(initCode)\" */ _63, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:15911:15949  \"senderCreator().createSender(initCode)\" */ _63), _63, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32)\n                                        /// @src 0:15911:15949  \"senderCreator().createSender(initCode)\"\n                                        if iszero(_64)\n                                        {\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let pos := mload(64)\n                                            returndatacopy(pos, 0, returndatasize())\n                                            revert(pos, returndatasize())\n                                        }\n                                        /// @src 0:15911:15949  \"senderCreator().createSender(initCode)\"\n                                        let expr_9 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:15911:15949  \"senderCreator().createSender(initCode)\"\n                                        if _64\n                                        {\n                                            let _65 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32\n                                            /// @src 0:15911:15949  \"senderCreator().createSender(initCode)\"\n                                            if gt(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32, /** @src 0:15911:15949  \"senderCreator().createSender(initCode)\" */ returndatasize()) { _65 := returndatasize() }\n                                            finalize_allocation(_63, _65)\n                                            expr_9 := abi_decode_address_fromMemory(_63, add(_63, _65))\n                                        }\n                                        /// @src 0:15966:15993  \"SenderAddressResult(sender)\"\n                                        let _66 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 0:15966:15993  \"SenderAddressResult(sender)\"\n                                        mstore(_66, shl(225, 0x3653dc03))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:15966:15993  \"SenderAddressResult(sender)\" */ add(_66, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), and(expr_9, _62))\n                                        /// @src 0:15966:15993  \"SenderAddressResult(sender)\"\n                                        revert(_66, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                    }\n                                    case 0xb760faf9 {\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        fun_depositTo(abi_decode_address())\n                                        return(0, 0)\n                                    }\n                                    case 0xbb9fe6bf {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        mstore(0, /** @src 4:3248:3258  \"msg.sender\" */ caller())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(0x20, 0)\n                                        /// @src 4:3277:3297  \"info.unstakeDelaySec\"\n                                        let _67 := add(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ keccak256(0, 64), /** @src 4:3277:3297  \"info.unstakeDelaySec\" */ 1)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _68 := sload(/** @src 4:3277:3297  \"info.unstakeDelaySec\" */ _67)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let value_6 := and(shr(120, _68), 0xffffffff)\n                                        if /** @src 4:3277:3302  \"info.unstakeDelaySec != 0\" */ iszero(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_6)\n                                        {\n                                            let memPtr_12 := mload(64)\n                                            mstore(memPtr_12, shl(229, 4594637))\n                                            mstore(add(memPtr_12, 4), 0x20)\n                                            mstore(add(memPtr_12, 36), 10)\n                                            mstore(add(memPtr_12, 68), \"not staked\")\n                                            revert(memPtr_12, 100)\n                                        }\n                                        if iszero(and(_68, 0xff))\n                                        {\n                                            let memPtr_13 := mload(64)\n                                            mstore(memPtr_13, shl(229, 4594637))\n                                            mstore(add(memPtr_13, 4), 0x20)\n                                            mstore(add(memPtr_13, 36), 17)\n                                            mstore(add(memPtr_13, 68), \"already unstaking\")\n                                            revert(memPtr_13, 100)\n                                        }\n                                        let _69 := 0xffffffffffff\n                                        let sum_1 := add(and(/** @src 4:3407:3422  \"block.timestamp\" */ timestamp(), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _69), value_6)\n                                        if gt(sum_1, _69)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(0, 0x24)\n                                        }\n                                        /// @src 4:3456:3488  \"info.withdrawTime = withdrawTime\"\n                                        update_storage_value_offsett_uint48_to_uint48(_67, sum_1)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(_67, and(sload(_67), not(255)))\n                                        /// @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                                        let _70 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        mstore(_70, and(sum_1, _69))\n                                        /// @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                                        log2(_70, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x20, /** @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\" */ 0xfa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a, /** @src 4:3248:3258  \"msg.sender\" */ caller())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0xc23a5cea {\n                                        if callvalue() { revert(0, 0) }\n                                        let _71 := 32\n                                        if slt(add(calldatasize(), not(3)), _71) { revert(0, 0) }\n                                        let value0_6 := abi_decode_address()\n                                        mstore(0, /** @src 4:3897:3907  \"msg.sender\" */ caller())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_71, 0)\n                                        /// @src 4:3934:3944  \"info.stake\"\n                                        let _72 := add(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ keccak256(0, 64), /** @src 4:3934:3944  \"info.stake\" */ 1)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _73 := sload(/** @src 4:3934:3944  \"info.stake\" */ _72)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let value_7 := and(shr(8, _73), 0xffffffffffffffffffffffffffff)\n                                        if /** @src 4:3962:3971  \"stake > 0\" */ iszero(value_7)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_14 := mload(64)\n                                            mstore(memPtr_14, shl(229, 4594637))\n                                            mstore(add(memPtr_14, 4), _71)\n                                            mstore(add(memPtr_14, 36), 20)\n                                            mstore(add(memPtr_14, 68), \"No stake to withdraw\")\n                                            revert(memPtr_14, 100)\n                                        }\n                                        let value_8 := and(shr(152, _73), 0xffffffffffff)\n                                        if /** @src 4:4014:4035  \"info.withdrawTime > 0\" */ iszero(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_8)\n                                        {\n                                            let memPtr_15 := mload(64)\n                                            mstore(memPtr_15, shl(229, 4594637))\n                                            mstore(add(memPtr_15, 4), _71)\n                                            mstore(add(memPtr_15, 36), 29)\n                                            mstore(add(memPtr_15, 68), \"must call unlockStake() first\")\n                                            revert(memPtr_15, 100)\n                                        }\n                                        if /** @src 4:4100:4136  \"info.withdrawTime <= block.timestamp\" */ gt(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_8, /** @src 4:4121:4136  \"block.timestamp\" */ timestamp())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_16 := mload(64)\n                                            mstore(memPtr_16, shl(229, 4594637))\n                                            mstore(add(memPtr_16, 4), _71)\n                                            mstore(add(memPtr_16, 36), 27)\n                                            mstore(add(memPtr_16, 68), \"Stake withdrawal is not due\")\n                                            revert(memPtr_16, 100)\n                                        }\n                                        sstore(_72, and(_73, not(sub(shl(200, 1), 256))))\n                                        /// @src 4:4293:4343  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                                        let _74 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 4:4293:4343  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                                        log2(_74, sub(abi_encode_address_payable_uint256(_74, value0_6, value_7), _74), 0xb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3, /** @src 4:3897:3907  \"msg.sender\" */ caller())\n                                        /// @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                                        let expr_component_8 := call(gas(), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:4371:4391  \"withdrawAddress.call\" */ value0_6, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), /** @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\" */ value_7, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, 0, 0)\n                                        /// @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                                        pop(extract_returndata())\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if iszero(expr_component_8)\n                                        {\n                                            let memPtr_17 := mload(64)\n                                            mstore(memPtr_17, shl(229, 4594637))\n                                            mstore(add(memPtr_17, 4), _71)\n                                            mstore(add(memPtr_17, 36), 24)\n                                            mstore(add(memPtr_17, 68), \"failed to withdraw stake\")\n                                            revert(memPtr_17, 100)\n                                        }\n                                        return(0, 0)\n                                    }\n                                    case 0xdbed18e0 {\n                                        if callvalue() { revert(0, 0) }\n                                        let param_3, param_4, param_5 := abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                                        /// @src 70:2322:2425  \"modifier nonReentrant() {...\"\n                                        fun_nonReentrantBefore()\n                                        /// @src 0:7654:7674  \"uint256 totalOps = 0\"\n                                        let var_totalOps := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:7689:7702  \"uint256 i = 0\"\n                                        let var_i_2 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:7684:8421  \"for (uint256 i = 0; i < opasLen; i++) {...\"\n                                        for { }\n                                        /** @src 0:7704:7715  \"i < opasLen\" */ lt(var_i_2, param_4)\n                                        /// @src 0:7689:7702  \"uint256 i = 0\"\n                                        {\n                                            /// @src 0:7717:7720  \"i++\"\n                                            var_i_2 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:7717:7720  \"i++\" */ var_i_2, /** @src 0:8024:8025  \"1\" */ 0x01)\n                                        }\n                                        /// @src 0:7717:7720  \"i++\"\n                                        {\n                                            /// @src 0:7772:7791  \"opsPerAggregator[i]\"\n                                            let expr_offset_1 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_i_2)\n                                            /// @src 0:7842:7853  \"opa.userOps\"\n                                            let expr_offset_2, expr_length := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_1, expr_offset_1)\n                                            /// @src 0:7892:7906  \"opa.aggregator\"\n                                            let _75 := 32\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _76 := and(/** @src 0:7892:7906  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset_1, _75)), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            /// @src 0:8024:8025  \"1\"\n                                            let _77 := 0x01\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            if /** @src 0:7993:8026  \"address(aggregator) != address(1)\" */ eq(_76, /** @src 0:8024:8025  \"1\" */ _77)\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            {\n                                                let memPtr_18 := mload(64)\n                                                mstore(memPtr_18, shl(229, 4594637))\n                                                mstore(add(memPtr_18, 4), /** @src 0:7892:7906  \"opa.aggregator\" */ _75)\n                                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(memPtr_18, 36), 23)\n                                                mstore(add(memPtr_18, 68), \"AA96 invalid aggregator\")\n                                                revert(memPtr_18, 100)\n                                            }\n                                            /// @src 0:8069:8374  \"if (address(aggregator) != address(0)) {...\"\n                                            if /** @src 0:8073:8106  \"address(aggregator) != address(0)\" */ iszero(iszero(_76))\n                                            /// @src 0:8069:8374  \"if (address(aggregator) != address(0)) {...\"\n                                            {\n                                                /// @src 0:8226:8239  \"opa.signature\"\n                                                let expr_offset_3, expr_length_1 := access_calldata_tail_bytes_calldata(expr_offset_1, add(expr_offset_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64))\n                                                /// @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                if iszero(extcodesize(_76))\n                                                {\n                                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    revert(0, 0)\n                                                }\n                                                /// @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                let _78 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                mstore(_78, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x2dd81133))\n                                                let tail_1 := add(/** @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68)\n                                                mstore(/** @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\" */ add(_78, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), 64)\n                                                let pos_1 := tail_1\n                                                mstore(tail_1, expr_length)\n                                                let _79 := 100\n                                                pos_1 := add(/** @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _79)\n                                                let tail_2 := add(add(/** @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(5, expr_length)), _79)\n                                                let srcPtr := expr_offset_2\n                                                let i := 0\n                                                for { }\n                                                lt(i, expr_length)\n                                                {\n                                                    i := add(i, /** @src 0:8024:8025  \"1\" */ _77)\n                                                }\n                                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    mstore(pos_1, add(sub(tail_2, /** @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(99)))\n                                                    let rel_offset_of_tail := calldataload(srcPtr)\n                                                    if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), expr_offset_2), not(286)))) { revert(0, 0) }\n                                                    tail_2 := abi_encode_struct_PackedUserOperation_calldata(add(rel_offset_of_tail, expr_offset_2), tail_2)\n                                                    srcPtr := add(srcPtr, /** @src 0:7892:7906  \"opa.aggregator\" */ _75)\n                                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    pos_1 := add(pos_1, /** @src 0:7892:7906  \"opa.aggregator\" */ _75)\n                                                }\n                                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), add(sub(tail_2, /** @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(3)))\n                                                /// @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                let trySuccessCondition_1 := staticcall(gas(), _76, _78, sub(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(expr_offset_3, expr_length_1, tail_2), /** @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), _78, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                                /// @src 0:8191:8240  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                if trySuccessCondition_1\n                                                {\n                                                    finalize_allocation_26283(_78)\n                                                }\n                                                /// @src 0:8187:8360  \"try aggregator.validateSignatures(ops, opa.signature) {}...\"\n                                                switch iszero(trySuccessCondition_1)\n                                                case 0 { }\n                                                default {\n                                                    /// @src 0:8295:8341  \"SignatureValidationFailed(address(aggregator))\"\n                                                    let _80 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:8295:8341  \"SignatureValidationFailed(address(aggregator))\"\n                                                    mstore(_80, shl(228, 0x086a9f75))\n                                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(/** @src 0:8295:8341  \"SignatureValidationFailed(address(aggregator))\" */ add(_80, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), _76)\n                                                    /// @src 0:8295:8341  \"SignatureValidationFailed(address(aggregator))\"\n                                                    revert(_80, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                                }\n                                            }\n                                            /// @src 0:8388:8410  \"totalOps += ops.length\"\n                                            var_totalOps := checked_add_uint256(var_totalOps, /** @src 0:8400:8410  \"ops.length\" */ expr_length)\n                                        }\n                                        /// @src 0:8461:8487  \"new UserOpInfo[](totalOps)\"\n                                        let expr_mpos_1 := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(var_totalOps)\n                                        /// @src 0:8498:8517  \"uint256 opIndex = 0\"\n                                        let var_opIndex := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:8532:8545  \"uint256 a = 0\"\n                                        let var_a := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:8527:9240  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                                        for { }\n                                        /** @src 0:8547:8558  \"a < opasLen\" */ lt(var_a, param_4)\n                                        /// @src 0:8532:8545  \"uint256 a = 0\"\n                                        {\n                                            /// @src 0:8560:8563  \"a++\"\n                                            var_a := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:8560:8563  \"a++\" */ var_a, /** @src 0:8024:8025  \"1\" */ 0x01)\n                                        }\n                                        /// @src 0:8560:8563  \"a++\"\n                                        {\n                                            /// @src 0:8615:8634  \"opsPerAggregator[a]\"\n                                            let expr_offset_4 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_a)\n                                            /// @src 0:8685:8696  \"opa.userOps\"\n                                            let expr_offset_5, expr_length_2 := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_4, expr_offset_4)\n                                            /// @src 0:8735:8749  \"opa.aggregator\"\n                                            let expr_address := read_from_calldatat_contract_IAggregator(add(expr_offset_4, /** @src 0:7892:7906  \"opa.aggregator\" */ 32))\n                                            /// @src 0:8810:8823  \"uint256 i = 0\"\n                                            let var_i_3 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            let _81 := sub(shl(160, 1), 1)\n                                            let _82 := and(/** @src 0:9151:9170  \"address(aggregator)\" */ expr_address, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)\n                                            /// @src 0:8805:9230  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                            for { }\n                                            /** @src 0:8825:8835  \"i < opslen\" */ lt(var_i_3, expr_length_2)\n                                            /// @src 0:8810:8823  \"uint256 i = 0\"\n                                            {\n                                                /// @src 0:8837:8840  \"i++\"\n                                                var_i_3 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:8837:8840  \"i++\" */ var_i_3, /** @src 0:8024:8025  \"1\" */ 0x01)\n                                            }\n                                            /// @src 0:8837:8840  \"i++\"\n                                            {\n                                                /// @src 0:8981:9025  \"_validatePrepayment(opIndex, ops[i], opInfo)\"\n                                                let expr_component_9, expr_component_10 := fun_validatePrepayment(var_opIndex, /** @src 0:9010:9016  \"ops[i]\" */ calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_5, expr_length_2, var_i_3), /** @src 0:8887:8903  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos_1, var_opIndex)))\n                                                /// @src 0:20568:20602  \"_getValidationData(validationData)\"\n                                                let expr_component_11, expr_component_12 := fun_getValidationData(expr_component_9)\n                                                /// @src 0:20612:20723  \"if (expectedAggregator != aggregator) {...\"\n                                                if /** @src 0:20616:20648  \"expectedAggregator != aggregator\" */ iszero(eq(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _82, and(/** @src 0:20616:20648  \"expectedAggregator != aggregator\" */ expr_component_11, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)))\n                                                /// @src 0:20612:20723  \"if (expectedAggregator != aggregator) {...\"\n                                                {\n                                                    /// @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                    let _83 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                    mstore(_83, shl(225, 0x1101335b))\n                                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(/** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ add(_83, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                    mstore(add(/** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                    mstore(add(/** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                    mstore(add(/** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA24 signature error\")\n                                                    /// @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                    revert(_83, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                }\n                                                /// @src 0:20732:20828  \"if (outOfTimeRange) {...\"\n                                                if expr_component_12\n                                                {\n                                                    /// @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                    let _84 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                    mstore(_84, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(/** @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ add(_84, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                    mstore(add(/** @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                    mstore(add(/** @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                                    mstore(add(/** @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA22 expired or not due\")\n                                                    /// @src 0:20773:20817  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                    revert(_84, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                }\n                                                /// @src 0:21130:21173  \"_getValidationData(paymasterValidationData)\"\n                                                let expr_component_13, expr_component_14 := fun_getValidationData(expr_component_10)\n                                                /// @src 0:21183:21288  \"if (pmAggregator != address(0)) {...\"\n                                                if /** @src 0:21187:21213  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:21187:21213  \"pmAggregator != address(0)\" */ expr_component_13, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)))\n                                                /// @src 0:21183:21288  \"if (pmAggregator != address(0)) {...\"\n                                                {\n                                                    /// @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                    let _85 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                    mstore(_85, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(/** @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ add(_85, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                    mstore(add(/** @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                    mstore(add(/** @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                    mstore(add(/** @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA34 signature error\")\n                                                    /// @src 0:21236:21277  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                    revert(_85, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                }\n                                                /// @src 0:21297:21403  \"if (outOfTimeRange) {...\"\n                                                if expr_component_14\n                                                {\n                                                    /// @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                    let _86 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                    mstore(_86, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(/** @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ add(_86, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                    mstore(add(/** @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                    mstore(add(/** @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 33)\n                                                    mstore(add(/** @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA32 paymaster expired or not du\")\n                                                    mstore(add(/** @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"e\")\n                                                    /// @src 0:21338:21392  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                    revert(_86, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                                }\n                                                /// @src 0:9206:9215  \"opIndex++\"\n                                                var_opIndex := increment_uint256(var_opIndex)\n                                            }\n                                        }\n                                        /// @src 0:9255:9272  \"BeforeExecution()\"\n                                        log1(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9255:9272  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                                        /// @src 0:9314:9325  \"opIndex = 0\"\n                                        var_opIndex := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:9283:9304  \"uint256 collected = 0\"\n                                        let var_collected_1 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:9340:9353  \"uint256 a = 0\"\n                                        let var_a_1 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:9335:9799  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                                        for { }\n                                        /** @src 0:9355:9366  \"a < opasLen\" */ lt(var_a_1, param_4)\n                                        /// @src 0:9340:9353  \"uint256 a = 0\"\n                                        {\n                                            /// @src 0:9368:9371  \"a++\"\n                                            var_a_1 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:9368:9371  \"a++\" */ var_a_1, /** @src 0:8024:8025  \"1\" */ 0x01)\n                                        }\n                                        /// @src 0:9368:9371  \"a++\"\n                                        {\n                                            /// @src 0:9423:9442  \"opsPerAggregator[a]\"\n                                            let expr_offset_6 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_a_1)\n                                            /// @src 0:9461:9512  \"SignatureAggregatorChanged(address(opa.aggregator))\"\n                                            log2(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9461:9512  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:9496:9510  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset_6, /** @src 0:7892:7906  \"opa.aggregator\" */ 32)), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                                            /// @src 0:9563:9574  \"opa.userOps\"\n                                            let expr_offset_7, expr_length_3 := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_6, expr_offset_6)\n                                            /// @src 0:9635:9648  \"uint256 i = 0\"\n                                            let var_i_4 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:9630:9789  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                            for { }\n                                            /** @src 0:9650:9660  \"i < opslen\" */ lt(var_i_4, expr_length_3)\n                                            /// @src 0:9635:9648  \"uint256 i = 0\"\n                                            {\n                                                /// @src 0:9662:9665  \"i++\"\n                                                var_i_4 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:9662:9665  \"i++\" */ var_i_4, /** @src 0:8024:8025  \"1\" */ 0x01)\n                                            }\n                                            /// @src 0:9662:9665  \"i++\"\n                                            {\n                                                /// @src 0:9722:9728  \"ops[i]\"\n                                                let expr_offset_8 := calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_7, expr_length_3, var_i_4)\n                                                /// @src 0:9685:9747  \"collected += _executeUserOp(opIndex, ops[i], opInfos[opIndex])\"\n                                                var_collected_1 := checked_add_uint256(var_collected_1, /** @src 0:9698:9747  \"_executeUserOp(opIndex, ops[i], opInfos[opIndex])\" */ fun_executeUserOp(var_opIndex, expr_offset_8, /** @src 0:9730:9746  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos_1, var_opIndex))))\n                                                /// @src 0:9765:9774  \"opIndex++\"\n                                                var_opIndex := increment_uint256(var_opIndex)\n                                            }\n                                        }\n                                        /// @src 0:9813:9851  \"SignatureAggregatorChanged(address(0))\"\n                                        log2(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9461:9512  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                        /// @src 0:9887:9896  \"collected\"\n                                        fun_compensate(param_5, var_collected_1)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(/** @src 70:2924:2945  \"_status = NOT_ENTERED\" */ 0x02, /** @src 0:8024:8025  \"1\" */ 0x01)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0xfc7e286d {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                        mstore(32, 0)\n                                        let dataSlot_5 := keccak256(0, 64)\n                                        let _87 := sload(/** @src 4:507:554  \"mapping(address => DepositInfo) public deposits\" */ dataSlot_5)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _88 := sload(/** @src 4:507:554  \"mapping(address => DepositInfo) public deposits\" */ add(dataSlot_5, 1))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let memPos_7 := mload(64)\n                                        mstore(memPos_7, _87)\n                                        mstore(add(memPos_7, 32), iszero(iszero(and(_88, 0xff))))\n                                        mstore(add(memPos_7, 64), and(shr(8, _88), 0xffffffffffffffffffffffffffff))\n                                        mstore(add(memPos_7, 96), and(shr(120, _88), 0xffffffff))\n                                        mstore(add(memPos_7, 128), and(shr(152, _88), 0xffffffffffff))\n                                        return(memPos_7, 160)\n                                    }\n                                }\n                                if iszero(calldatasize())\n                                {\n                                    /// @src 4:1326:1336  \"msg.sender\"\n                                    fun_depositTo(caller())\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    stop()\n                                }\n                                revert(0, 0)\n                            }\n                            function finalize_allocation_26259(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 0xa0)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function finalize_allocation_26260(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 0x0140)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function finalize_allocation_26283(memPtr)\n                            {\n                                if gt(memPtr, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, memPtr)\n                            }\n                            function finalize_allocation_26350(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 96)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function finalize_allocation(memPtr, size)\n                            {\n                                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function array_allocation_size_bytes(length) -> size\n                            {\n                                if gt(length, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                size := add(and(add(length, 31), not(31)), 0x20)\n                            }\n                            function abi_decode_available_length_bytes(src, length, end) -> array\n                            {\n                                let _1 := array_allocation_size_bytes(length)\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, _1)\n                                array := memPtr\n                                mstore(memPtr, length)\n                                if gt(add(src, length), end)\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                calldatacopy(add(memPtr, 0x20), src, length)\n                                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                            }\n                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            function abi_decode_address() -> value\n                            {\n                                value := calldataload(4)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n                            {\n                                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                                length := calldataload(offset)\n                                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                arrayPos := add(offset, 0x20)\n                                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n                            }\n                            function abi_decode_uint192() -> value\n                            {\n                                value := calldataload(36)\n                                if iszero(eq(value, and(value, sub(shl(192, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(dataEnd) -> value0, value1, value2\n                            {\n                                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                                let offset := calldataload(4)\n                                let _1 := 0xffffffffffffffff\n                                if gt(offset, _1) { revert(0, 0) }\n                                if iszero(slt(add(offset, 35), dataEnd))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let length := calldataload(add(4, offset))\n                                if gt(length, _1)\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if gt(add(add(offset, shl(5, length)), 36), dataEnd)\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                value0 := add(offset, 36)\n                                value1 := length\n                                let value := calldataload(36)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                value2 := value\n                            }\n                            /// @src 0:1542:1546  \"2048\"\n                            function copy_memory_to_memory_with_cleanup(src, dst, length)\n                            {\n                                let i := 0\n                                for { } lt(i, length) { i := add(i, 32) }\n                                {\n                                    mstore(add(dst, i), mload(add(src, i)))\n                                }\n                                mstore(add(dst, length), 0)\n                            }\n                            function abi_encode_bytes(value, pos) -> end\n                            {\n                                let length := /** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:1542:1546  \"2048\" */ value)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(pos, length)\n                                /// @src 0:1542:1546  \"2048\"\n                                copy_memory_to_memory_with_cleanup(add(value, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x20), add(pos, 0x20), /** @src 0:1542:1546  \"2048\" */ length)\n                                end := add(add(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ pos, and(add(/** @src 0:1542:1546  \"2048\" */ length, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 31), not(31))), 0x20)\n                            }\n                            function checked_add_uint256(x, y) -> sum\n                            {\n                                sum := add(x, y)\n                                if gt(x, sum)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                            }\n                            function update_storage_value_offsett_uint48_to_uint48(slot, value)\n                            {\n                                let _1 := sload(slot)\n                                sstore(slot, or(and(_1, not(shl(152, 0xffffffffffff))), and(shl(152, value), shl(152, 0xffffffffffff))))\n                            }\n                            function increment_uint256(value) -> ret\n                            {\n                                if eq(value, not(0))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                                ret := add(value, 1)\n                            }\n                            function checked_sub_uint256(x, y) -> diff\n                            {\n                                diff := sub(x, y)\n                                if gt(diff, x)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                            }\n                            function abi_encode_address_payable_uint256(headStart, value0, value1) -> tail\n                            {\n                                tail := add(headStart, 64)\n                                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                mstore(add(headStart, 32), value1)\n                            }\n                            function extract_returndata() -> data\n                            {\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _1 := returndatasize()\n                                    let _2 := array_allocation_size_bytes(_1)\n                                    let memPtr := mload(64)\n                                    finalize_allocation(memPtr, _2)\n                                    mstore(memPtr, _1)\n                                    data := memPtr\n                                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ returndatasize())\n                                }\n                            }\n                            /// @ast-id 968 @src 0:12516:12696  \"function getUserOpHash(PackedUserOperation calldata userOp) public view returns (bytes32) {...\"\n                            function fun_getUserOpHash(var_userOp_947_offset) -> var\n                            {\n                                /// @src 5:1998:2013  \"userOp.initCode\"\n                                let _1 := 64\n                                let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, _1))\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                let usr$mem := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                calldatacopy(usr$mem, expr_offset, expr_length)\n                                let var_ret := keccak256(usr$mem, expr_length)\n                                /// @src 5:2062:2077  \"userOp.callData\"\n                                let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, 96))\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                let usr$mem_1 := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                calldatacopy(usr$mem_1, expr_offset_1, expr_length_1)\n                                let var_ret_1 := keccak256(usr$mem_1, expr_length_1)\n                                /// @src 5:2300:2323  \"userOp.paymasterAndData\"\n                                let expr_offset_2, expr_length_2 := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, 224))\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                let usr$mem_2 := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                calldatacopy(usr$mem_2, expr_offset_2, expr_length_2)\n                                let var_ret_2 := keccak256(usr$mem_2, expr_length_2)\n                                /// @src 5:2342:2522  \"abi.encode(...\"\n                                let expr_mpos := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                /// @src 5:2342:2522  \"abi.encode(...\"\n                                let _2 := add(expr_mpos, /** @src 5:1938:1950  \"userOp.nonce\" */ 32)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(_2, and(/** @src 5:823:884  \"assembly {...\" */ calldataload(/** @src 5:1895:1912  \"getSender(userOp)\" */ var_userOp_947_offset), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:1998:2013  \"userOp.initCode\" */ _1), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:1938:1950  \"userOp.nonce\" */ add(var_userOp_947_offset, 32)))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2062:2077  \"userOp.callData\" */ 96), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_ret)\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2115:2138  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_ret_1)\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2177:2202  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2115:2138  \"userOp.accountGasLimits\" */ add(var_userOp_947_offset, 128)))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2230:2244  \"userOp.gasFees\" */ 192), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2177:2202  \"userOp.preVerificationGas\" */ add(var_userOp_947_offset, 160)))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2300:2323  \"userOp.paymasterAndData\" */ 224), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2230:2244  \"userOp.gasFees\" */ add(var_userOp_947_offset, 192)))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _3 := 256\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), var_ret_2)\n                                /// @src 5:2342:2522  \"abi.encode(...\"\n                                mstore(expr_mpos, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3)\n                                let newFreePtr := add(expr_mpos, 288)\n                                let _4 := 0xffffffffffffffff\n                                if or(gt(newFreePtr, _4), lt(newFreePtr, expr_mpos))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(/** @src 5:1998:2013  \"userOp.initCode\" */ _1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ newFreePtr)\n                                /// @src 5:4955:4987  \"return keccak256(encode(userOp))\"\n                                let var_1 := /** @src 5:4962:4987  \"keccak256(encode(userOp))\" */ keccak256(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2, /** @src 0:1296:1301  \"10000\" */ mload(/** @src 5:4962:4987  \"keccak256(encode(userOp))\" */ expr_mpos))\n                                /// @src 0:12633:12688  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                                let _5 := add(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ expr_mpos, /** @src 0:12633:12688  \"abi.encode(userOp.hash(), address(this), block.chainid)\" */ 320)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(_5, var_1)\n                                mstore(add(expr_mpos, 352), /** @src 0:12667:12671  \"this\" */ address())\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(expr_mpos, 384), /** @src 0:12674:12687  \"block.chainid\" */ chainid())\n                                /// @src 0:12633:12688  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                                mstore(newFreePtr, /** @src 5:2062:2077  \"userOp.callData\" */ 96)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let newFreePtr_1 := add(expr_mpos, 416)\n                                if or(gt(newFreePtr_1, _4), lt(newFreePtr_1, newFreePtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(/** @src 5:1998:2013  \"userOp.initCode\" */ _1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ newFreePtr_1)\n                                /// @src 0:12616:12689  \"return keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\"\n                                var := /** @src 0:12623:12689  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ keccak256(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _5, /** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:12623:12689  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ newFreePtr))\n                            }\n                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            function array_allocation_size_array_struct_UserOpInfo_dyn(length) -> size\n                            {\n                                if gt(length, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                size := add(shl(5, length), 0x20)\n                            }\n                            function allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(length) -> memPtr\n                            {\n                                let _1 := array_allocation_size_array_struct_UserOpInfo_dyn(length)\n                                let _2 := 64\n                                let memPtr_1 := mload(64)\n                                finalize_allocation(memPtr_1, _1)\n                                mstore(memPtr_1, length)\n                                memPtr := memPtr_1\n                                let _3 := add(array_allocation_size_array_struct_UserOpInfo_dyn(length), not(31))\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                for { } lt(i, _3) { i := add(i, 32) }\n                                {\n                                    let memPtr_2 := mload(_2)\n                                    finalize_allocation_26259(memPtr_2)\n                                    let memPtr_3 := mload(_2)\n                                    finalize_allocation_26260(memPtr_3)\n                                    mstore(memPtr_3, /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _4 := 32\n                                    mstore(add(memPtr_3, _4), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, _2), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _5 := 96\n                                    mstore(add(memPtr_3, _5), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _6 := 128\n                                    mstore(add(memPtr_3, _6), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, 160), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, 192), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, 224), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, 256), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, 288), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(memPtr_2, memPtr_3)\n                                    mstore(add(memPtr_2, _4), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_2, _2), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_2, _5), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_2, _6), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(add(memPtr_1, i), _4), memPtr_2)\n                                }\n                            }\n                            function memory_array_index_access_struct_UserOpInfo_dyn(baseRef, index) -> addr\n                            {\n                                if iszero(lt(index, /** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ baseRef)))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x32)\n                                    revert(0, 0x24)\n                                }\n                                addr := add(add(baseRef, shl(5, index)), 32)\n                            }\n                            function calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(base_ref, length, index) -> addr\n                            {\n                                if iszero(lt(index, length))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x32)\n                                    revert(0, 0x24)\n                                }\n                                let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(286))))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                addr := add(base_ref, rel_offset_of_tail)\n                            }\n                            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n                            {\n                                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                                let value := mload(headStart)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                value0 := value\n                            }\n                            function abi_encode_bytes_calldata(start, length, pos) -> end\n                            {\n                                mstore(pos, length)\n                                calldatacopy(add(pos, 0x20), start, length)\n                                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                            }\n                            /// @ast-id 2551 @src 4:1935:2114  \"function depositTo(address account) public virtual payable {...\"\n                            function fun_depositTo(var_account)\n                            {\n                                /// @src 4:2025:2062  \"_incrementDeposit(account, msg.value)\"\n                                let expr := fun_incrementDeposit(var_account, /** @src 4:2052:2061  \"msg.value\" */ callvalue())\n                                /// @src 4:2077:2107  \"Deposited(account, newDeposit)\"\n                                let _1 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                mstore(_1, expr)\n                                /// @src 4:2077:2107  \"Deposited(account, newDeposit)\"\n                                log2(_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32, /** @src 4:2077:2107  \"Deposited(account, newDeposit)\" */ 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:2077:2107  \"Deposited(account, newDeposit)\" */ var_account, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                            }\n                            function calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(base_ref, length, index) -> addr\n                            {\n                                if iszero(lt(index, length))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x32)\n                                    revert(0, 0x24)\n                                }\n                                let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(94))))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                addr := add(base_ref, rel_offset_of_tail)\n                            }\n                            function access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(base_ref, ptr_to_tail) -> addr, length\n                            {\n                                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                let addr_1 := add(base_ref, rel_offset_of_tail)\n                                length := calldataload(addr_1)\n                                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                addr := add(addr_1, 0x20)\n                                if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n                            }\n                            function read_from_calldatat_contract_IAggregator(ptr) -> returnValue\n                            {\n                                let value := calldataload(ptr)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                returnValue := value\n                            }\n                            function access_calldata_tail_bytes_calldata(base_ref, ptr_to_tail) -> addr, length\n                            {\n                                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                let addr_1 := add(base_ref, rel_offset_of_tail)\n                                length := calldataload(addr_1)\n                                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                addr := add(addr_1, 0x20)\n                                if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n                            }\n                            function calldata_access_bytes_calldata(base_ref, ptr) -> value, length\n                            {\n                                let rel_offset_of_tail := calldataload(ptr)\n                                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                let value_1 := add(rel_offset_of_tail, base_ref)\n                                length := calldataload(value_1)\n                                value := add(value_1, 0x20)\n                                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                if sgt(value, sub(calldatasize(), length)) { revert(0, 0) }\n                            }\n                            function abi_encode_struct_PackedUserOperation_calldata(value, pos) -> end\n                            {\n                                let _1 := 0x0120\n                                let value_1 := calldataload(value)\n                                let _2 := and(value_1, sub(shl(160, 1), 1))\n                                if iszero(eq(value_1, _2))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(pos, _2)\n                                mstore(add(pos, 0x20), calldataload(add(value, 0x20)))\n                                let memberValue0, memberValue1 := calldata_access_bytes_calldata(value, add(value, 0x40))\n                                mstore(add(pos, 0x40), _1)\n                                let tail := abi_encode_bytes_calldata(memberValue0, memberValue1, add(pos, _1))\n                                let memberValue0_1, memberValue1_1 := calldata_access_bytes_calldata(value, add(value, 0x60))\n                                mstore(add(pos, 0x60), sub(tail, pos))\n                                let tail_1 := abi_encode_bytes_calldata(memberValue0_1, memberValue1_1, tail)\n                                mstore(add(pos, 0x80), calldataload(add(value, 0x80)))\n                                mstore(add(pos, 0xa0), calldataload(add(value, 0xa0)))\n                                mstore(add(pos, 0xc0), calldataload(add(value, 0xc0)))\n                                let memberValue0_2, memberValue1_2 := calldata_access_bytes_calldata(value, add(value, 0xe0))\n                                mstore(add(pos, 0xe0), sub(tail_1, pos))\n                                let tail_2 := abi_encode_bytes_calldata(memberValue0_2, memberValue1_2, tail_1)\n                                let _3 := 0x0100\n                                let memberValue0_3, memberValue1_3 := calldata_access_bytes_calldata(value, add(value, _3))\n                                mstore(add(pos, _3), sub(tail_2, pos))\n                                end := abi_encode_bytes_calldata(memberValue0_3, memberValue1_3, tail_2)\n                            }\n                            /// @ast-id 48469 @src 70:2431:2738  \"function _nonReentrantBefore() private {...\"\n                            function fun_nonReentrantBefore()\n                            {\n                                /// @src 70:2554:2640  \"if (_status == ENTERED) {...\"\n                                if /** @src 70:2558:2576  \"_status == ENTERED\" */ eq(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 70:2558:2565  \"_status\" */ 0x02), 0x02)\n                                /// @src 70:2554:2640  \"if (_status == ENTERED) {...\"\n                                {\n                                    /// @src 70:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                                    let _1 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                    /// @src 70:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                                    mstore(_1, shl(224, 0x3ee5aeb5))\n                                    revert(_1, 4)\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                sstore(/** @src 70:2558:2565  \"_status\" */ 0x02, 0x02)\n                            }\n                            /// @ast-id 1799 @src 0:22607:24550  \"function _validatePrepayment(uint256 opIndex, PackedUserOperation calldata userOp, UserOpInfo memory outOpInfo)...\"\n                            function fun_validatePrepayment(var_opIndex, var_userOp_1632_offset, var_outOpInfo_mpos) -> var_validationData, var_paymasterValidationData\n                            {\n                                /// @src 0:22777:22808  \"uint256 paymasterValidationData\"\n                                var_paymasterValidationData := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:22841:22850  \"gasleft()\"\n                                let expr := gas()\n                                /// @src 0:22890:22907  \"outOpInfo.mUserOp\"\n                                let _431_mpos := mload(var_outOpInfo_mpos)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let value := calldataload(var_userOp_1632_offset)\n                                let _1 := and(value, sub(shl(160, 1), 1))\n                                if iszero(eq(value, _1)) { revert(0, 0) }\n                                mstore(_431_mpos, _1)\n                                mstore(/** @src 0:13045:13058  \"mUserOp.nonce\" */ add(_431_mpos, /** @src 0:13061:13073  \"userOp.nonce\" */ 32), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:13061:13073  \"userOp.nonce\" */ add(var_userOp_1632_offset, 32)))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _2 := calldataload(/** @src 0:13167:13190  \"userOp.accountGasLimits\" */ add(var_userOp_1632_offset, 128))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _3 := 0xffffffffffffffffffffffffffffffff\n                                mstore(/** @src 0:13114:13134  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 5:2694:2709  \"uint256(packed)\" */ _2, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                mstore(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13167:13190  \"userOp.accountGasLimits\" */ 128, /** @src 5:2668:2683  \"bytes16(packed)\" */ _2))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:13201:13227  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:13230:13255  \"userOp.preVerificationGas\" */ add(var_userOp_1632_offset, 160)))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _4 := calldataload(/** @src 0:13349:13363  \"userOp.gasFees\" */ add(var_userOp_1632_offset, /** @src 0:13201:13227  \"mUserOp.preVerificationGas\" */ 192))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:13296:13316  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 5:2694:2709  \"uint256(packed)\" */ _4, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                mstore(/** @src 0:13266:13294  \"mUserOp.maxPriorityFeePerGas\" */ add(_431_mpos, 288), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13167:13190  \"userOp.accountGasLimits\" */ 128, /** @src 5:2668:2683  \"bytes16(packed)\" */ _4))\n                                /// @src 0:13408:13431  \"userOp.paymasterAndData\"\n                                let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_1632_offset, add(var_userOp_1632_offset, 224))\n                                /// @src 0:13441:13957  \"if (paymasterAndData.length > 0) {...\"\n                                switch /** @src 0:13445:13472  \"paymasterAndData.length > 0\" */ iszero(iszero(expr_length))\n                                case /** @src 0:13441:13957  \"if (paymasterAndData.length > 0) {...\" */ 0 {\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:13812:13829  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:13408:13431  \"userOp.paymasterAndData\" */ 224), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    mstore(/** @src 0:13856:13893  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13167:13190  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    mstore(/** @src 0:13911:13942  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:13230:13255  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                }\n                                default /// @src 0:13441:13957  \"if (paymasterAndData.length > 0) {...\"\n                                {\n                                    /// @src 5:490:492  \"52\"\n                                    if /** @src 0:13496:13561  \"paymasterAndData.length >= UserOperationLib.PAYMASTER_DATA_OFFSET\" */ lt(expr_length, /** @src 5:490:492  \"52\" */ 0x34)\n                                    {\n                                        let memPtr := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 5:490:492  \"52\"\n                                        mstore(memPtr, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(229, 4594637))\n                                        /// @src 5:490:492  \"52\"\n                                        mstore(add(memPtr, 4), /** @src 0:13061:13073  \"userOp.nonce\" */ 32)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 5:490:492  \"52\" */ add(memPtr, 36), 29)\n                                        mstore(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 5:490:492  \"52\" */ memPtr, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 5:490:492  \"52\" */ \"AA93 invalid paymasterAndData\")\n                                        revert(memPtr, 100)\n                                    }\n                                    /// @src 5:372:374  \"20\"\n                                    if gt(0x14, expr_length)\n                                    {\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        revert(0, 0)\n                                    }\n                                    /// @src 5:372:374  \"20\"\n                                    if gt(/** @src 5:434:436  \"36\" */ 0x24, /** @src 5:372:374  \"20\" */ expr_length)\n                                    {\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        revert(0, 0)\n                                    }\n                                    /// @src 5:372:374  \"20\"\n                                    if gt(/** @src 5:490:492  \"52\" */ 0x34, /** @src 5:372:374  \"20\" */ expr_length)\n                                    {\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        revert(0, 0)\n                                    }\n                                    mstore(/** @src 0:13668:13699  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:13230:13255  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13167:13190  \"userOp.accountGasLimits\" */ 128, /** @src 5:434:436  \"36\" */ calldataload(/** @src 5:372:374  \"20\" */ add(expr_offset, /** @src 5:434:436  \"36\" */ 0x24))))\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:13629:13666  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13167:13190  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13167:13190  \"userOp.accountGasLimits\" */ 128, /** @src 5:434:436  \"36\" */ calldataload(/** @src 5:372:374  \"20\" */ add(expr_offset, 0x14))))\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:13610:13627  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:13408:13431  \"userOp.paymasterAndData\" */ 224), /** @src 5:372:374  \"20\" */ shr(/** @src 0:13114:13134  \"mUserOp.callGasLimit\" */ 96, /** @src 5:372:374  \"20\" */ calldataload(/** @src 5:4451:4511  \"bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])\" */ expr_offset)))\n                                }\n                                /// @src 0:22986:23007  \"getUserOpHash(userOp)\"\n                                let _5 := fun_getUserOpHash(var_userOp_1632_offset)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:22963:22983  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13061:13073  \"userOp.nonce\" */ 32), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _5)\n                                let _6 := mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64))\n                                /// @src 0:23263:23312  \"mUserOp.preVerificationGas | verificationGasLimit\"\n                                let expr_1 := or(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13201:13227  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192)), /** @src 0:23263:23312  \"mUserOp.preVerificationGas | verificationGasLimit\" */ _6)\n                                /// @src 0:23263:23335  \"mUserOp.preVerificationGas | verificationGasLimit | mUserOp.callGasLimit\"\n                                let expr_2 := or(expr_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13114:13134  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96)))\n                                /// @src 0:23263:23387  \"mUserOp.preVerificationGas | verificationGasLimit | mUserOp.callGasLimit...\"\n                                let expr_3 := or(expr_2, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:23350:23387  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13167:13190  \"userOp.accountGasLimits\" */ 128)))\n                                /// @src 0:23263:23421  \"mUserOp.preVerificationGas | verificationGasLimit | mUserOp.callGasLimit...\"\n                                let expr_4 := or(expr_3, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:23390:23421  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:13230:13255  \"userOp.preVerificationGas\" */ 160)))\n                                /// @src 0:23263:23444  \"mUserOp.preVerificationGas | verificationGasLimit | mUserOp.callGasLimit...\"\n                                let expr_5 := or(expr_4, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13296:13316  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256)))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if /** @src 0:23505:23538  \"maxGasValues <= type(uint120).max\" */ gt(/** @src 0:23263:23487  \"mUserOp.preVerificationGas | verificationGasLimit | mUserOp.callGasLimit...\" */ or(expr_5, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13266:13294  \"mUserOp.maxPriorityFeePerGas\" */ add(_431_mpos, 288))), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xffffffffffffffffffffffffffffff)\n                                {\n                                    let memPtr_1 := mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(memPtr_1, shl(229, 4594637))\n                                    mstore(add(memPtr_1, 4), /** @src 0:13061:13073  \"userOp.nonce\" */ 32)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_1, 36), 24)\n                                    mstore(add(memPtr_1, 68), \"AA94 gas values overflow\")\n                                    revert(memPtr_1, 100)\n                                }\n                                let _7 := mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let sum := add(_7, mload(/** @src 0:13114:13134  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96)))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let sum_1 := add(sum, mload(/** @src 0:23350:23387  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13167:13190  \"userOp.accountGasLimits\" */ 128)))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let sum_2 := add(sum_1, mload(/** @src 0:23390:23421  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:13230:13255  \"userOp.preVerificationGas\" */ 160)))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let sum_3 := add(sum_2, mload(/** @src 0:13201:13227  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192)))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let product := mul(sum_3, mload(/** @src 0:13296:13316  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256)))\n                                /// @src 0:23659:23752  \"_validateAccountPrepayment(opIndex, userOp, outOpInfo, requiredPreFund, verificationGasLimit)\"\n                                let var_validationData_1 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:16744:16758  \"opInfo.mUserOp\"\n                                let _mpos := mload(var_outOpInfo_mpos)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let cleaned := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:16789:16803  \"mUserOp.sender\" */ _mpos), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 0:16856:16867  \"op.initCode\"\n                                let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(var_userOp_1632_offset, add(var_userOp_1632_offset, /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64))\n                                /// @src 0:14894:15782  \"if (initCode.length != 0) {...\"\n                                if /** @src 0:14898:14918  \"initCode.length != 0\" */ iszero(iszero(expr_length_1))\n                                /// @src 0:14894:15782  \"if (initCode.length != 0) {...\"\n                                {\n                                    /// @src 0:14986:15107  \"if (sender.code.length != 0) {...\"\n                                    if /** @src 0:14990:15013  \"sender.code.length != 0\" */ iszero(iszero(/** @src 0:14990:15008  \"sender.code.length\" */ extcodesize(cleaned)))\n                                    /// @src 0:14986:15107  \"if (sender.code.length != 0) {...\"\n                                    {\n                                        /// @src 0:15040:15092  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                        let _8 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:15040:15092  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                        mstore(_8, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:15040:15092  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ add(_8, 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:15040:15092  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:15040:15092  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 31)\n                                        mstore(add(/** @src 0:15040:15092  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA10 sender already constructed\")\n                                        /// @src 0:15040:15092  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                        revert(_8, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    let _9 := mload(/** @src 0:15172:15207  \"opInfo.mUserOp.verificationGasLimit\" */ add(/** @src 0:15172:15186  \"opInfo.mUserOp\" */ mload(var_outOpInfo_mpos), /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64))\n                                    /// @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\"\n                                    let _10 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\"\n                                    mstore(_10, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(225, 0x2b870d1b))\n                                    mstore(/** @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\" */ add(_10, 4), /** @src 0:13061:13073  \"userOp.nonce\" */ 32)\n                                    /// @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\"\n                                    let _11 := call(_9, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1099:1113  \"_senderCreator\" */ loadimmutable(\"35\"), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), 0, /** @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\" */ _10, sub(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(expr_offset_1, expr_length_1, add(/** @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\" */ _10, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\" */ _10), _10, /** @src 0:13061:13073  \"userOp.nonce\" */ 32)\n                                    /// @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\"\n                                    if iszero(_11)\n                                    {\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let pos := mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        returndatacopy(pos, 0, returndatasize())\n                                        revert(pos, returndatasize())\n                                    }\n                                    /// @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\"\n                                    let expr_6 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\"\n                                    if _11\n                                    {\n                                        let _12 := /** @src 0:13061:13073  \"userOp.nonce\" */ 32\n                                        /// @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\"\n                                        if gt(/** @src 0:13061:13073  \"userOp.nonce\" */ 32, /** @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\" */ returndatasize()) { _12 := returndatasize() }\n                                        finalize_allocation(_10, _12)\n                                        expr_6 := abi_decode_address_fromMemory(_10, add(_10, _12))\n                                    }\n                                    /// @src 0:15236:15257  \"sender1 == address(0)\"\n                                    let _13 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:15236:15257  \"sender1 == address(0)\" */ expr_6, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                    /// @src 0:15232:15347  \"if (sender1 == address(0)) {...\"\n                                    if /** @src 0:15236:15257  \"sender1 == address(0)\" */ iszero(_13)\n                                    /// @src 0:15232:15347  \"if (sender1 == address(0)) {...\"\n                                    {\n                                        /// @src 0:15284:15332  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                        let _14 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:15284:15332  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                        mstore(_14, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:15284:15332  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ add(_14, /** @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\" */ 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:15284:15332  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:15284:15332  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 27)\n                                        mstore(add(/** @src 0:15284:15332  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA13 initCode failed or OOG\")\n                                        /// @src 0:15284:15332  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                        revert(_14, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    /// @src 0:15360:15476  \"if (sender1 != sender) {...\"\n                                    if /** @src 0:15364:15381  \"sender1 != sender\" */ iszero(eq(_13, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned))\n                                    /// @src 0:15360:15476  \"if (sender1 != sender) {...\"\n                                    {\n                                        /// @src 0:15408:15461  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                        let _15 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:15408:15461  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                        mstore(_15, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:15408:15461  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ add(_15, /** @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\" */ 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:15408:15461  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:15408:15461  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13061:13073  \"userOp.nonce\" */ 32)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:15408:15461  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA14 initCode must return sender\")\n                                        /// @src 0:15408:15461  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                        revert(_15, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    /// @src 0:15489:15612  \"if (sender1.code.length == 0) {...\"\n                                    if /** @src 0:15493:15517  \"sender1.code.length == 0\" */ iszero(/** @src 0:15493:15512  \"sender1.code.length\" */ extcodesize(expr_6))\n                                    /// @src 0:15489:15612  \"if (sender1.code.length == 0) {...\"\n                                    {\n                                        /// @src 0:15544:15597  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                        let _16 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:15544:15597  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                        mstore(_16, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:15544:15597  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ add(_16, /** @src 0:15138:15218  \"senderCreator().createSender{gas: opInfo.mUserOp.verificationGasLimit}(initCode)\" */ 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:15544:15597  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:15544:15597  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13061:13073  \"userOp.nonce\" */ 32)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:15544:15597  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA15 initCode must create sender\")\n                                        /// @src 0:15544:15597  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                        revert(_16, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    /// @src 5:372:374  \"20\"\n                                    if gt(/** @src 0:15670:15672  \"20\" */ 0x14, /** @src 5:372:374  \"20\" */ expr_length_1)\n                                    {\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        revert(0, 0)\n                                    }\n                                    /// @src 0:1542:1546  \"2048\"\n                                    let _17 := mload(/** @src 0:22963:22983  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13061:13073  \"userOp.nonce\" */ 32))\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let cleaned_1 := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:15746:15770  \"opInfo.mUserOp.paymaster\" */ add(/** @src 0:15746:15760  \"opInfo.mUserOp\" */ mload(var_outOpInfo_mpos), /** @src 0:13408:13431  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                    /// @src 0:15694:15771  \"AccountDeployed(opInfo.userOpHash, sender, factory, opInfo.mUserOp.paymaster)\"\n                                    let _18 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(_18, /** @src 5:372:374  \"20\" */ shr(/** @src 0:13114:13134  \"mUserOp.callGasLimit\" */ 96, /** @src 5:372:374  \"20\" */ calldataload(/** @src 0:15651:15674  \"bytes20(initCode[0:20])\" */ expr_offset_1)))\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(_18, /** @src 0:13061:13073  \"userOp.nonce\" */ 32), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_1)\n                                    /// @src 0:15694:15771  \"AccountDeployed(opInfo.userOpHash, sender, factory, opInfo.mUserOp.paymaster)\"\n                                    log3(_18, /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64, /** @src 0:15694:15771  \"AccountDeployed(opInfo.userOpHash, sender, factory, opInfo.mUserOp.paymaster)\" */ 0xd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d, _17, cleaned)\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let cleaned_2 := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:16902:16919  \"mUserOp.paymaster\" */ add(_mpos, /** @src 0:13408:13431  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 0:16933:16964  \"uint256 missingAccountFunds = 0\"\n                                let var_missingAccountFunds := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:16978:17160  \"if (paymaster == address(0)) {...\"\n                                if /** @src 0:16982:17005  \"paymaster == address(0)\" */ iszero(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                /// @src 0:16978:17160  \"if (paymaster == address(0)) {...\"\n                                {\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(0, cleaned)\n                                    mstore(/** @src 0:13061:13073  \"userOp.nonce\" */ 32, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    let _19 := sload(keccak256(0, /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64))\n                                    /// @src 0:17096:17145  \"bal > requiredPrefund ? 0 : requiredPrefund - bal\"\n                                    let expr_7 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:17096:17145  \"bal > requiredPrefund ? 0 : requiredPrefund - bal\"\n                                    switch /** @src 0:17096:17117  \"bal > requiredPrefund\" */ gt(_19, product)\n                                    case /** @src 0:17096:17145  \"bal > requiredPrefund ? 0 : requiredPrefund - bal\" */ 0 {\n                                        expr_7 := /** @src 0:1542:1546  \"2048\" */ sub(/** @src 0:17124:17145  \"requiredPrefund - bal\" */ product, _19)\n                                    }\n                                    default /// @src 0:17096:17145  \"bal > requiredPrefund ? 0 : requiredPrefund - bal\"\n                                    {\n                                        expr_7 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    }\n                                    /// @src 0:17074:17145  \"missingAccountFunds = bal > requiredPrefund ? 0 : requiredPrefund - bal\"\n                                    var_missingAccountFunds := expr_7\n                                }\n                                /// @src 0:1542:1546  \"2048\"\n                                let _20 := mload(/** @src 0:22963:22983  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13061:13073  \"userOp.nonce\" */ 32))\n                                /// @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\"\n                                let _21 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\"\n                                mstore(_21, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(226, 0x06608bdf))\n                                /// @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\"\n                                let trySuccessCondition := call(_6, cleaned, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\" */ _21, sub(abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(add(_21, 4), var_userOp_1632_offset, _20, var_missingAccountFunds), _21), _21, /** @src 0:13061:13073  \"userOp.nonce\" */ 32)\n                                /// @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\"\n                                let expr_8 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\"\n                                if trySuccessCondition\n                                {\n                                    let _22 := /** @src 0:13061:13073  \"userOp.nonce\" */ 32\n                                    /// @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\"\n                                    if gt(/** @src 0:13061:13073  \"userOp.nonce\" */ 32, /** @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\" */ returndatasize()) { _22 := returndatasize() }\n                                    finalize_allocation(_21, _22)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    if slt(sub(/** @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\" */ add(_21, _22), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _21), /** @src 0:13061:13073  \"userOp.nonce\" */ 32)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    { revert(0, 0) }\n                                    /// @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\"\n                                    expr_8 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(_21)\n                                }\n                                /// @src 0:17173:17525  \"try IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)...\"\n                                switch iszero(trySuccessCondition)\n                                case 0 {\n                                    /// @src 0:17344:17376  \"validationData = _validationData\"\n                                    var_validationData_1 := expr_8\n                                }\n                                default /// @src 0:17173:17525  \"try IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)...\"\n                                {\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    let usr$len := returndatasize()\n                                    /// @src 0:1542:1546  \"2048\"\n                                    let _23 := 0x0800\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    if gt(usr$len, /** @src 0:1542:1546  \"2048\" */ _23)\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    {\n                                        usr$len := /** @src 0:1542:1546  \"2048\" */ _23\n                                    }\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    let usr$ptr := mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    mstore(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:13061:13073  \"userOp.nonce\" */ 32))\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    mstore(usr$ptr, usr$len)\n                                    returndatacopy(add(usr$ptr, /** @src 0:13061:13073  \"userOp.nonce\" */ 32), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                    /// @src 0:17423:17510  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                    let _24 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:17423:17510  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                    mstore(_24, shl(224, 0x65c8fd4d))\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:17423:17510  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ add(_24, /** @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\" */ 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                    mstore(add(/** @src 0:17423:17510  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13114:13134  \"mUserOp.callGasLimit\" */ 96)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(/** @src 0:17423:17510  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), 13)\n                                    mstore(add(/** @src 0:17423:17510  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"AA23 reverted\")\n                                    mstore(add(/** @src 0:17423:17510  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13230:13255  \"userOp.preVerificationGas\" */ 160)\n                                    /// @src 0:17423:17510  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                    revert(_24, sub(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr, add(/** @src 0:17423:17510  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)), /** @src 0:17423:17510  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24))\n                                }\n                                /// @src 0:17538:17907  \"if (paymaster == address(0)) {...\"\n                                if /** @src 0:16982:17005  \"paymaster == address(0)\" */ iszero(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                /// @src 0:17538:17907  \"if (paymaster == address(0)) {...\"\n                                {\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(0, cleaned)\n                                    mstore(/** @src 0:13061:13073  \"userOp.nonce\" */ 32, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    let dataSlot := keccak256(0, /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _25 := sload(/** @src 0:17670:17688  \"senderInfo.deposit\" */ dataSlot)\n                                    /// @src 0:17706:17829  \"if (requiredPrefund > deposit) {...\"\n                                    if /** @src 0:17710:17735  \"requiredPrefund > deposit\" */ gt(product, _25)\n                                    /// @src 0:17706:17829  \"if (requiredPrefund > deposit) {...\"\n                                    {\n                                        /// @src 0:17766:17810  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                        let _26 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:17766:17810  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                        mstore(_26, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:17766:17810  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ add(_26, /** @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\" */ 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:17766:17810  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:17766:17810  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                        mstore(add(/** @src 0:17766:17810  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA21 didn't pay prefund\")\n                                        /// @src 0:17766:17810  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                        revert(_26, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    sstore(dataSlot, /** @src 0:1542:1546  \"2048\" */ sub(/** @src 0:17867:17892  \"deposit - requiredPrefund\" */ _25, product))\n                                }\n                                /// @src 0:23642:23752  \"validationData = _validateAccountPrepayment(opIndex, userOp, outOpInfo, requiredPreFund, verificationGasLimit)\"\n                                var_validationData := var_validationData_1\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let cleaned_3 := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:23792:23806  \"mUserOp.sender\" */ _431_mpos), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                let _27 := mload(/** @src 0:13045:13058  \"mUserOp.nonce\" */ add(_431_mpos, /** @src 0:13061:13073  \"userOp.nonce\" */ 32))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(0, cleaned_3)\n                                mstore(/** @src 0:13061:13073  \"userOp.nonce\" */ 32, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                let _28 := keccak256(0, /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(0, shr(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _27))\n                                mstore(/** @src 0:13061:13073  \"userOp.nonce\" */ 32, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _28)\n                                let dataSlot_1 := keccak256(0, /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _29 := sload(/** @src 2:1373:1407  \"nonceSequenceNumber[sender][key]++\" */ dataSlot_1)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                sstore(dataSlot_1, /** @src 2:1373:1407  \"nonceSequenceNumber[sender][key]++\" */ increment_uint256(_29))\n                                /// @src 0:23763:23903  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                                if /** @src 0:23767:23822  \"!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)\" */ iszero(/** @src 2:1373:1414  \"nonceSequenceNumber[sender][key]++ == seq\" */ eq(_29, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 2:1343:1356  \"uint64(nonce)\" */ _27, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xffffffffffffffff)))\n                                /// @src 0:23763:23903  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                                {\n                                    /// @src 0:23845:23892  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                    let _30 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:23845:23892  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                    mstore(_30, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:23845:23892  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ add(_30, /** @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\" */ 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                    mstore(add(/** @src 0:23845:23892  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(/** @src 0:23845:23892  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 26)\n                                    mstore(add(/** @src 0:23845:23892  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA25 invalid account nonce\")\n                                    /// @src 0:23845:23892  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                    revert(_30, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                }\n                                /// @src 0:23937:24075  \"if (preGas - gasleft() > verificationGasLimit) {...\"\n                                if /** @src 0:23941:23982  \"preGas - gasleft() > verificationGasLimit\" */ gt(/** @src 0:1542:1546  \"2048\" */ sub(expr, /** @src 0:23950:23959  \"gasleft()\" */ gas()), /** @src 0:23941:23982  \"preGas - gasleft() > verificationGasLimit\" */ _6)\n                                /// @src 0:23937:24075  \"if (preGas - gasleft() > verificationGasLimit) {...\"\n                                {\n                                    /// @src 0:24009:24060  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                    let _31 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:24009:24060  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                    mstore(_31, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:24009:24060  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ add(_31, /** @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\" */ 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                    mstore(add(/** @src 0:24009:24060  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(/** @src 0:24009:24060  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 30)\n                                    mstore(add(/** @src 0:24009:24060  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA26 over verificationGasLimit\")\n                                    /// @src 0:24009:24060  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                    revert(_31, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                }\n                                /// @src 0:24095:24115  \"bytes memory context\"\n                                let var_context_1749_mpos := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:24095:24115  \"bytes memory context\"\n                                var_context_1749_mpos := /** @src 0:13114:13134  \"mUserOp.callGasLimit\" */ 96\n                                /// @src 0:24125:24313  \"if (mUserOp.paymaster != address(0)) {...\"\n                                if /** @src 0:24129:24160  \"mUserOp.paymaster != address(0)\" */ iszero(iszero(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:24129:24146  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:13408:13431  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))))\n                                /// @src 0:24125:24313  \"if (mUserOp.paymaster != address(0)) {...\"\n                                {\n                                    /// @src 0:24229:24302  \"_validatePaymasterPrepayment(opIndex, userOp, outOpInfo, requiredPreFund)\"\n                                    let var_context_mpos := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:24229:24302  \"_validatePaymasterPrepayment(opIndex, userOp, outOpInfo, requiredPreFund)\"\n                                    let var_validationData_2 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:18780:18789  \"gasleft()\"\n                                    let expr_9 := gas()\n                                    /// @src 0:18833:18847  \"opInfo.mUserOp\"\n                                    let _mpos_1 := mload(var_outOpInfo_mpos)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let cleaned_4 := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:18881:18898  \"mUserOp.paymaster\" */ add(_mpos_1, /** @src 0:13408:13431  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                    mstore(0, cleaned_4)\n                                    mstore(/** @src 0:13061:13073  \"userOp.nonce\" */ 32, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    let dataSlot_2 := keccak256(0, /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _32 := sload(/** @src 0:18999:19020  \"paymasterInfo.deposit\" */ dataSlot_2)\n                                    /// @src 0:19034:19156  \"if (deposit < requiredPreFund) {...\"\n                                    if /** @src 0:19038:19063  \"deposit < requiredPreFund\" */ lt(_32, product)\n                                    /// @src 0:19034:19156  \"if (deposit < requiredPreFund) {...\"\n                                    {\n                                        /// @src 0:19090:19141  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                        let _33 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:19090:19141  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                        mstore(_33, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:19090:19141  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ add(_33, /** @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\" */ 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:19090:19141  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:19090:19141  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 30)\n                                        mstore(add(/** @src 0:19090:19141  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA31 paymaster deposit too low\")\n                                        /// @src 0:19090:19141  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                        revert(_33, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    sstore(dataSlot_2, /** @src 0:1542:1546  \"2048\" */ sub(/** @src 0:19193:19218  \"deposit - requiredPreFund\" */ _32, product))\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _34 := mload(/** @src 0:19265:19302  \"mUserOp.paymasterVerificationGasLimit\" */ add(_mpos_1, /** @src 0:13167:13190  \"userOp.accountGasLimits\" */ 128))\n                                    /// @src 0:1542:1546  \"2048\"\n                                    let _35 := mload(/** @src 0:22963:22983  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13061:13073  \"userOp.nonce\" */ 32))\n                                    /// @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    let _36 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    mstore(_36, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(226, 0x14add44b))\n                                    /// @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    let trySuccessCondition_1 := call(_34, cleaned_4, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ _36, sub(abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(add(_36, /** @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\" */ 4), /** @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ var_userOp_1632_offset, _35, product), _36), _36, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    /// @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    let expr_component_mpos := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    let expr_component := 0\n                                    /// @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    if trySuccessCondition_1\n                                    {\n                                        let _37 := returndatasize()\n                                        returndatacopy(_36, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ _37)\n                                        finalize_allocation(_36, _37)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if slt(sub(/** @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _36), /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        { revert(0, 0) }\n                                        let offset := mload(_36)\n                                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                                        if iszero(slt(add(add(_36, offset), 0x1f), /** @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37)))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        { revert(0, 0) }\n                                        let _38 := mload(add(_36, offset))\n                                        let _39 := array_allocation_size_bytes(_38)\n                                        let memPtr_2 := mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        finalize_allocation(memPtr_2, _39)\n                                        mstore(memPtr_2, _38)\n                                        if gt(add(add(add(_36, offset), _38), /** @src 0:13061:13073  \"userOp.nonce\" */ 32), /** @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        { revert(0, 0) }\n                                        copy_memory_to_memory_with_cleanup(add(add(_36, offset), /** @src 0:13061:13073  \"userOp.nonce\" */ 32), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr_2, /** @src 0:13061:13073  \"userOp.nonce\" */ 32), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _38)\n                                        let value_1 := mload(add(_36, /** @src 0:13061:13073  \"userOp.nonce\" */ 32))\n                                        /// @src 0:19320:19464  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                        expr_component_mpos := memPtr_2\n                                        expr_component := value_1\n                                    }\n                                    /// @src 0:19316:19757  \"try IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    switch iszero(trySuccessCondition_1)\n                                    case 0 {\n                                        /// @src 0:19540:19558  \"context = _context\"\n                                        var_context_mpos := expr_component_mpos\n                                        /// @src 0:19576:19608  \"validationData = _validationData\"\n                                        var_validationData_2 := expr_component\n                                    }\n                                    default /// @src 0:19316:19757  \"try IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    {\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$len_1 := returndatasize()\n                                        /// @src 0:1542:1546  \"2048\"\n                                        let _40 := 0x0800\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        if gt(usr$len_1, /** @src 0:1542:1546  \"2048\" */ _40)\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        {\n                                            usr$len_1 := /** @src 0:1542:1546  \"2048\" */ _40\n                                        }\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$ptr_1 := mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        mstore(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr_1, usr$len_1), /** @src 0:13061:13073  \"userOp.nonce\" */ 32))\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        mstore(usr$ptr_1, usr$len_1)\n                                        returndatacopy(add(usr$ptr_1, /** @src 0:13061:13073  \"userOp.nonce\" */ 32), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len_1)\n                                        /// @src 0:19655:19742  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                        let _41 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:19655:19742  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                        mstore(_41, /** @src 0:17423:17510  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ shl(224, 0x65c8fd4d))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:19655:19742  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ add(_41, /** @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\" */ 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:19655:19742  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13114:13134  \"mUserOp.callGasLimit\" */ 96)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:19655:19742  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), 13)\n                                        mstore(add(/** @src 0:19655:19742  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"AA33 reverted\")\n                                        mstore(add(/** @src 0:19655:19742  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13230:13255  \"userOp.preVerificationGas\" */ 160)\n                                        /// @src 0:19655:19742  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                        revert(_41, sub(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr_1, add(/** @src 0:19655:19742  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)), /** @src 0:19655:19742  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41))\n                                    }\n                                    /// @src 0:19770:19919  \"if (preGas - gasleft() > pmVerificationGasLimit) {...\"\n                                    if /** @src 0:19774:19817  \"preGas - gasleft() > pmVerificationGasLimit\" */ gt(/** @src 0:1542:1546  \"2048\" */ sub(expr_9, /** @src 0:19783:19792  \"gasleft()\" */ gas()), /** @src 0:19774:19817  \"preGas - gasleft() > pmVerificationGasLimit\" */ _34)\n                                    /// @src 0:19770:19919  \"if (preGas - gasleft() > pmVerificationGasLimit) {...\"\n                                    {\n                                        /// @src 0:19844:19904  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                        let _42 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:19844:19904  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                        mstore(_42, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:19844:19904  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ add(_42, /** @src 0:17177:17279  \"IAccount(sender).validateUserOp{gas: verificationGasLimit}(op, opInfo.userOpHash, missingAccountFunds)\" */ 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:19844:19904  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:19844:19904  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 39)\n                                        mstore(add(/** @src 0:19844:19904  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA36 over paymasterVerificationG\")\n                                        mstore(add(/** @src 0:19844:19904  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"asLimit\")\n                                        /// @src 0:19844:19904  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                        revert(_42, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                    }\n                                    /// @src 0:24176:24302  \"(context, paymasterValidationData) =...\"\n                                    var_paymasterValidationData := var_validationData_2\n                                    var_context_1749_mpos := var_context_mpos\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:24346:24363  \"outOpInfo.prefund\" */ add(var_outOpInfo_mpos, /** @src 0:13084:13112  \"mUserOp.verificationGasLimit\" */ 64), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ product)\n                                mstore(/** @src 0:24395:24418  \"outOpInfo.contextOffset\" */ add(var_outOpInfo_mpos, /** @src 0:13114:13134  \"mUserOp.callGasLimit\" */ 96), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_context_1749_mpos)\n                                mstore(/** @src 0:24466:24484  \"outOpInfo.preOpGas\" */ add(var_outOpInfo_mpos, /** @src 0:13167:13190  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:1542:1546  \"2048\" */ sub(expr, /** @src 0:24496:24505  \"gasleft()\" */ gas()), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:13230:13255  \"userOp.preVerificationGas\" */ add(var_userOp_1632_offset, 160))))\n                            }\n                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            function abi_encode_struct_UserOpInfo(value, pos)\n                            {\n                                let _1 := mload(value)\n                                let _2 := sub(shl(160, 1), 1)\n                                mstore(pos, and(mload(_1), _2))\n                                mstore(add(pos, 0x20), mload(add(_1, 0x20)))\n                                mstore(add(pos, 0x40), mload(add(_1, 0x40)))\n                                mstore(add(pos, 0x60), mload(add(_1, 0x60)))\n                                mstore(add(pos, 0x80), mload(add(_1, 0x80)))\n                                mstore(add(pos, 0xa0), mload(add(_1, 0xa0)))\n                                mstore(add(pos, 0xc0), mload(add(_1, 0xc0)))\n                                mstore(add(pos, 0xe0), and(mload(add(_1, 0xe0)), _2))\n                                let _3 := 0x0100\n                                mstore(add(pos, _3), mload(add(_1, _3)))\n                                let _4 := 0x0120\n                                mstore(add(pos, _4), mload(add(_1, _4)))\n                                mstore(add(pos, 0x0140), mload(add(value, 0x20)))\n                                mstore(add(pos, 0x0160), mload(add(value, 0x40)))\n                                mstore(add(pos, 0x0180), mload(add(value, 0x60)))\n                                mstore(add(pos, 0x01a0), mload(add(value, 0x80)))\n                            }\n                            /// @ast-id 328 @src 0:3018:5928  \"function _executeUserOp(uint256 opIndex, PackedUserOperation calldata userOp, UserOpInfo memory opInfo)...\"\n                            function fun_executeUserOp(var_opIndex, var_userOp_offset, var_opInfo_155_mpos) -> var_collected\n                            {\n                                /// @src 0:3206:3215  \"gasleft()\"\n                                let expr := gas()\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _1 := mload(/** @src 0:3273:3293  \"opInfo.contextOffset\" */ add(var_opInfo_155_mpos, 96))\n                                /// @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\"\n                                let _2 := 0x40\n                                let var_saveFreePtr := mload(_2)\n                                /// @src 0:3495:3510  \"userOp.callData\"\n                                let expr_offset, expr_182_length := access_calldata_tail_bytes_calldata(var_userOp_offset, add(var_userOp_offset, /** @src 0:3273:3293  \"opInfo.contextOffset\" */ 96))\n                                /// @src 0:3524:3546  \"bytes memory innerCall\"\n                                let var_innerCall_mpos := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:3560:3576  \"bytes4 methodSig\"\n                                let var_methodSig := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerCall_mpos\n                                /// @src 0:3560:3576  \"bytes4 methodSig\"\n                                var_methodSig := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerCall_mpos\n                                /// @src 0:3590:3734  \"assembly {...\"\n                                if gt(expr_182_length, 3)\n                                {\n                                    var_methodSig := calldataload(expr_offset)\n                                }\n                                /// @src 0:3764:3802  \"IAccountExecute.executeUserOp.selector\"\n                                let _3 := shl(224, 0x8dd7712f)\n                                /// @src 0:3747:4152  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\"\n                                switch /** @src 0:3751:3802  \"methodSig == IAccountExecute.executeUserOp.selector\" */ eq(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:3751:3802  \"methodSig == IAccountExecute.executeUserOp.selector\" */ var_methodSig, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0xffffffff)), /** @src 0:3764:3802  \"IAccountExecute.executeUserOp.selector\" */ _3)\n                                case /** @src 0:3747:4152  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\" */ 0 {\n                                    /// @src 0:4074:4137  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                    mstore(add(var_saveFreePtr, 0x20), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 4381779))\n                                    mstore(/** @src 0:4074:4137  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ add(var_saveFreePtr, 36), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 512)\n                                    let tail := abi_encode_bytes_calldata(expr_offset, expr_182_length, add(/** @src 0:4074:4137  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 548))\n                                    abi_encode_struct_UserOpInfo(var_opInfo_155_mpos, add(/** @src 0:4074:4137  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68))\n                                    mstore(add(/** @src 0:4074:4137  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 516), add(sub(tail, /** @src 0:4074:4137  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(35)))\n                                    /// @src 0:4074:4137  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                    let _4 := sub(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(_1, tail), /** @src 0:4074:4137  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr)\n                                    mstore(var_saveFreePtr, add(_4, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(31)))\n                                    /// @src 0:4074:4137  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                    finalize_allocation(var_saveFreePtr, _4)\n                                    /// @src 0:4062:4137  \"innerCall = abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                    var_innerCall_mpos := var_saveFreePtr\n                                }\n                                default /// @src 0:3747:4152  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\"\n                                {\n                                    /// @src 0:1542:1546  \"2048\"\n                                    let _5 := mload(/** @src 0:3906:3923  \"opInfo.userOpHash\" */ add(var_opInfo_155_mpos, 32))\n                                    /// @src 0:3851:3925  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                    let expr_mpos := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                    /// @src 0:3851:3925  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                    mstore(add(expr_mpos, /** @src 0:3906:3923  \"opInfo.userOpHash\" */ 32), /** @src 0:3764:3802  \"IAccountExecute.executeUserOp.selector\" */ _3)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:3851:3925  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ add(expr_mpos, 36), /** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let tail_1 := abi_encode_struct_PackedUserOperation_calldata(var_userOp_offset, add(/** @src 0:3851:3925  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ expr_mpos, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100))\n                                    mstore(add(/** @src 0:3851:3925  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ expr_mpos, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), _5)\n                                    /// @src 0:3851:3925  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                    let _6 := sub(tail_1, expr_mpos)\n                                    let _7 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(31)\n                                    /// @src 0:3851:3925  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                    mstore(expr_mpos, add(_6, _7))\n                                    finalize_allocation(expr_mpos, _6)\n                                    /// @src 0:3955:4023  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                    let expr_217_mpos := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                    /// @src 0:3955:4023  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                    mstore(add(expr_217_mpos, /** @src 0:3906:3923  \"opInfo.userOpHash\" */ 32), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 4381779))\n                                    mstore(/** @src 0:3955:4023  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ add(expr_217_mpos, /** @src 0:3851:3925  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ 36), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 512)\n                                    let tail_2 := abi_encode_bytes(expr_mpos, add(/** @src 0:3955:4023  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 548))\n                                    abi_encode_struct_UserOpInfo(var_opInfo_155_mpos, add(/** @src 0:3955:4023  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68))\n                                    mstore(add(/** @src 0:3955:4023  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 516), add(sub(tail_2, /** @src 0:3955:4023  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(35)))\n                                    /// @src 0:3955:4023  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                    let _8 := sub(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(_1, tail_2), /** @src 0:3955:4023  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos)\n                                    mstore(expr_217_mpos, add(_8, /** @src 0:3851:3925  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ _7))\n                                    /// @src 0:3955:4023  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                    finalize_allocation(expr_217_mpos, _8)\n                                    /// @src 0:3943:4023  \"innerCall = abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                    var_innerCall_mpos := expr_217_mpos\n                                }\n                                /// @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\"\n                                let _9 := 32\n                                let var_success := call(gas(), address(), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\" */ add(var_innerCall_mpos, _9), mload(var_innerCall_mpos), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\" */ _9)\n                                var_collected := mload(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                /// @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\"\n                                mstore(/** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2, /** @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\" */ var_saveFreePtr)\n                                /// @src 0:4404:5922  \"if (!success) {...\"\n                                if /** @src 0:4408:4416  \"!success\" */ iszero(var_success)\n                                /// @src 0:4404:5922  \"if (!success) {...\"\n                                {\n                                    /// @src 0:4432:4455  \"bytes32 innerRevertCode\"\n                                    let var_innerRevertCode := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:4469:4697  \"assembly (\\\"memory-safe\\\") {...\"\n                                    if eq(/** @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\" */ _9, /** @src 0:4469:4697  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                                    {\n                                        returndatacopy(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerRevertCode, var_innerRevertCode, /** @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\" */ _9)\n                                        /// @src 0:4469:4697  \"assembly (\\\"memory-safe\\\") {...\"\n                                        var_innerRevertCode := mload(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerRevertCode)\n                                    }\n                                    /// @src 0:4710:5912  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                                    switch /** @src 0:4714:4749  \"innerRevertCode == INNER_OUT_OF_GAS\" */ eq(var_innerRevertCode, /** @src 0:11604:11730  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeaddead))\n                                    case /** @src 0:4710:5912  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\" */ 0 {\n                                        /// @src 0:5006:5912  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\"\n                                        switch /** @src 0:5010:5053  \"innerRevertCode == INNER_REVERT_LOW_PREFUND\" */ eq(var_innerRevertCode, /** @src 0:27628:27774  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeadaa51))\n                                        case /** @src 0:5006:5912  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\" */ 0 {\n                                            /// @src 0:1542:1546  \"2048\"\n                                            let _10 := mload(/** @src 0:5529:5546  \"opInfo.userOpHash\" */ add(var_opInfo_155_mpos, /** @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                            /// @src 0:5568:5582  \"opInfo.mUserOp\"\n                                            let _565_mpos := mload(var_opInfo_155_mpos)\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _11 := sub(shl(160, 1), 1)\n                                            let cleaned := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:5568:5589  \"opInfo.mUserOp.sender\" */ _565_mpos), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                            let _12 := mload(/** @src 0:5611:5631  \"opInfo.mUserOp.nonce\" */ add(_565_mpos, /** @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            let usr$len := returndatasize()\n                                            /// @src 0:1542:1546  \"2048\"\n                                            let _13 := 0x0800\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            if gt(usr$len, /** @src 0:1542:1546  \"2048\" */ _13)\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            {\n                                                usr$len := /** @src 0:1542:1546  \"2048\" */ _13\n                                            }\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            let usr$ptr := mload(/** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            mstore(/** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            mstore(usr$ptr, usr$len)\n                                            returndatacopy(add(usr$ptr, /** @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\" */ _9), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                            /// @src 0:5489:5712  \"PostOpRevertReason(...\"\n                                            let _14 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(_14, _12)\n                                            /// @src 0:1542:1546  \"2048\"\n                                            mstore(add(_14, /** @src 0:4165:4385  \"assembly (\\\"memory-safe\\\") {...\" */ _9), /** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 0:5489:5712  \"PostOpRevertReason(...\"\n                                            log3(_14, sub(/** @src 0:1542:1546  \"2048\" */ abi_encode_bytes(usr$ptr, add(_14, /** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2)), /** @src 0:5489:5712  \"PostOpRevertReason(...\" */ _14), 0xf62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792, _10, cleaned)\n                                            /// @src 0:5751:5769  \"preGas - gasleft()\"\n                                            let expr_1 := checked_sub_uint256(expr, /** @src 0:5760:5769  \"gasleft()\" */ gas())\n                                            /// @src 0:5772:5787  \"opInfo.preOpGas\"\n                                            let _15 := add(var_opInfo_155_mpos, 128)\n                                            /// @src 0:5817:5897  \"_postExecution(IPaymaster.PostOpMode.postOpReverted, opInfo, context, actualGas)\"\n                                            let var_actualGas := /** @src 0:5751:5787  \"preGas - gasleft() + opInfo.preOpGas\" */ checked_add_uint256(expr_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:5772:5787  \"opInfo.preOpGas\" */ _15))\n                                            /// @src 0:5817:5897  \"_postExecution(IPaymaster.PostOpMode.postOpReverted, opInfo, context, actualGas)\"\n                                            let var_actualGasCost := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:25391:25400  \"gasleft()\"\n                                            let expr_2 := gas()\n                                            /// @src 0:25434:25455  \"address refundAddress\"\n                                            let var_refundAddress := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_actualGasCost\n                                            /// @src 0:25434:25455  \"address refundAddress\"\n                                            let var_refundAddress_1 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_actualGasCost\n                                            /// @src 0:25499:25513  \"opInfo.mUserOp\"\n                                            let _mpos := mload(var_opInfo_155_mpos)\n                                            /// @src 0:25546:25572  \"getUserOpGasPrice(mUserOp)\"\n                                            let expr_3 := fun_getUserOpGasPrice(_mpos)\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let cleaned_1 := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:25607:25624  \"mUserOp.paymaster\" */ add(_mpos, 224)), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                            /// @src 0:25638:26482  \"if (paymaster == address(0)) {...\"\n                                            switch /** @src 0:25642:25665  \"paymaster == address(0)\" */ iszero(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_1)\n                                            case /** @src 0:25638:26482  \"if (paymaster == address(0)) {...\" */ 0 {\n                                                /// @src 0:25754:25779  \"refundAddress = paymaster\"\n                                                var_refundAddress := cleaned_1\n                                                /// @src 0:25797:26468  \"if (context.length > 0) {...\"\n                                                if /** @src 0:25801:25819  \"context.length > 0\" */ iszero(iszero(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:25801:25815  \"context.length\" */ _1)))\n                                                /// @src 0:25797:26468  \"if (context.length > 0) {...\"\n                                                {\n                                                    /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    var_refundAddress_1 := var_actualGasCost\n                                                }\n                                            }\n                                            default /// @src 0:25638:26482  \"if (paymaster == address(0)) {...\"\n                                            {\n                                                /// @src 0:25685:25715  \"refundAddress = mUserOp.sender\"\n                                                var_refundAddress := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:25701:25715  \"mUserOp.sender\" */ _mpos), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                            }\n                                            /// @src 0:26495:26526  \"actualGas += preGas - gasleft()\"\n                                            var_actualGas := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, /** @src 0:1542:1546  \"2048\" */ sub(expr_2, /** @src 0:26517:26526  \"gasleft()\" */ gas()))\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _16 := mload(/** @src 0:26649:26669  \"mUserOp.callGasLimit\" */ add(_mpos, /** @src 0:3273:3293  \"opInfo.contextOffset\" */ 96))\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let sum := add(_16, mload(/** @src 0:26672:26703  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos, 160)))\n                                            /// @src 0:1542:1546  \"2048\"\n                                            let diff := sub(var_actualGas, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:26760:26775  \"opInfo.preOpGas\" */ _15))\n                                            /// @src 0:26909:27183  \"if (executionGasLimit > executionGasUsed) {...\"\n                                            if /** @src 0:26913:26949  \"executionGasLimit > executionGasUsed\" */ gt(sum, diff)\n                                            /// @src 0:26909:27183  \"if (executionGasLimit > executionGasUsed) {...\"\n                                            {\n                                                /// @src 0:27135:27164  \"actualGas += unusedGasPenalty\"\n                                                var_actualGas := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, div(mul(/** @src 0:1542:1546  \"2048\" */ sub(/** @src 0:26993:27029  \"executionGasLimit - executionGasUsed\" */ sum, diff), /** @src 0:1595:1597  \"10\" */ 0x0a), /** @src 0:27110:27113  \"100\" */ 0x64))\n                                            }\n                                            /// @src 0:27211:27247  \"actualGasCost = actualGas * gasPrice\"\n                                            var_actualGasCost := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mul(/** @src 0:27227:27247  \"actualGas * gasPrice\" */ var_actualGas, expr_3)\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _17 := mload(/** @src 0:27279:27293  \"opInfo.prefund\" */ add(var_opInfo_155_mpos, /** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2))\n                                            /// @src 0:27307:28100  \"if (prefund < actualGasCost) {...\"\n                                            switch /** @src 0:27311:27334  \"prefund < actualGasCost\" */ lt(_17, var_actualGasCost)\n                                            case /** @src 0:27307:28100  \"if (prefund < actualGasCost) {...\" */ 0 {\n                                                /// @src 0:27888:27928  \"_incrementDeposit(refundAddress, refund)\"\n                                                pop(fun_incrementDeposit(var_refundAddress, /** @src 0:1542:1546  \"2048\" */ sub(/** @src 0:27847:27870  \"prefund - actualGasCost\" */ _17, var_actualGasCost)))\n                                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if var_refundAddress_1\n                                                {\n                                                    mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                    mstore(4, 0x21)\n                                                    revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                                }\n                                                /// @src 0:28075:28084  \"actualGas\"\n                                                fun_emitUserOperationEvent(var_opInfo_155_mpos, var_actualGasCost, var_actualGas)\n                                            }\n                                            default /// @src 0:27307:28100  \"if (prefund < actualGasCost) {...\"\n                                            {\n                                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if var_refundAddress_1\n                                                {\n                                                    mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                    mstore(4, 0x21)\n                                                    revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                                }\n                                                /// @src 0:27426:27449  \"actualGasCost = prefund\"\n                                                var_actualGasCost := _17\n                                                /// @src 0:27489:27495  \"opInfo\"\n                                                fun_emitPrefundTooLow(var_opInfo_155_mpos)\n                                                /// @src 0:27571:27580  \"actualGas\"\n                                                fun_emitUserOperationEvent(var_opInfo_155_mpos, _17, var_actualGas)\n                                            }\n                                            /// @src 0:5805:5897  \"collected = _postExecution(IPaymaster.PostOpMode.postOpReverted, opInfo, context, actualGas)\"\n                                            var_collected := var_actualGasCost\n                                        }\n                                        default /// @src 0:5006:5912  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\"\n                                        {\n                                            /// @src 0:5186:5204  \"preGas - gasleft()\"\n                                            let expr_4 := checked_sub_uint256(expr, /** @src 0:5195:5204  \"gasleft()\" */ gas())\n                                            /// @src 0:5186:5222  \"preGas - gasleft() + opInfo.preOpGas\"\n                                            let expr_5 := checked_add_uint256(expr_4, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:5207:5222  \"opInfo.preOpGas\" */ add(var_opInfo_155_mpos, 128)))\n                                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _18 := mload(/** @src 0:5264:5278  \"opInfo.prefund\" */ add(var_opInfo_155_mpos, /** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2))\n                                            /// @src 0:5314:5320  \"opInfo\"\n                                            fun_emitPrefundTooLow(var_opInfo_155_mpos)\n                                            /// @src 0:5392:5401  \"actualGas\"\n                                            fun_emitUserOperationEvent(var_opInfo_155_mpos, _18, expr_5)\n                                            /// @src 0:5420:5445  \"collected = actualGasCost\"\n                                            var_collected := _18\n                                        }\n                                    }\n                                    default /// @src 0:4710:5912  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                                    {\n                                        /// @src 0:4949:4985  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                        let _19 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                        /// @src 0:4949:4985  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                        mstore(_19, /** @src 0:20671:20712  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:4949:4985  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ add(_19, 4), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        /// @src 0:1473:1486  \"hex\\\"deadaa51\\\"\"\n                                        mstore(add(/** @src 0:4949:4985  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:1473:1486  \"hex\\\"deadaa51\\\"\" */ 36), /** @src 0:3373:3456  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                        /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:1473:1486  \"hex\\\"deadaa51\\\"\" */ add(/** @src 0:4949:4985  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:1473:1486  \"hex\\\"deadaa51\\\"\" */ 68), 15)\n                                        mstore(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:4949:4985  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), /** @src 0:1473:1486  \"hex\\\"deadaa51\\\"\" */ \"AA95 out of gas\")\n                                        /// @src 0:4949:4985  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                        revert(_19, /** @src 0:1473:1486  \"hex\\\"deadaa51\\\"\" */ 132)\n                                    }\n                                }\n                            }\n                            /// @ast-id 146 @src 0:2433:2711  \"function _compensate(address payable beneficiary, uint256 amount) internal {...\"\n                            function fun_compensate(var_beneficiary, var_amount)\n                            {\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _1 := and(/** @src 0:2526:2551  \"beneficiary != address(0)\" */ var_beneficiary, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                if /** @src 0:2526:2551  \"beneficiary != address(0)\" */ iszero(_1)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                {\n                                    let memPtr := mload(64)\n                                    mstore(memPtr, shl(229, 4594637))\n                                    mstore(add(memPtr, 4), 32)\n                                    mstore(add(memPtr, 36), 24)\n                                    mstore(add(memPtr, 68), \"AA90 invalid beneficiary\")\n                                    revert(memPtr, 100)\n                                }\n                                /// @src 0:2608:2643  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                                let expr_138_component := call(gas(), _1, var_amount, /** @src 0:2549:2550  \"0\" */ 0x00, 0x00, 0x00, 0x00)\n                                /// @src 0:2608:2643  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                                pop(extract_returndata())\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if iszero(expr_138_component)\n                                {\n                                    let memPtr_1 := mload(64)\n                                    mstore(memPtr_1, shl(229, 4594637))\n                                    mstore(add(memPtr_1, 4), 32)\n                                    mstore(add(memPtr_1, 36), 31)\n                                    mstore(add(memPtr_1, 68), \"AA91 failed send to beneficiary\")\n                                    revert(memPtr_1, 100)\n                                }\n                            }\n                            /// @ast-id 2531 @src 4:1559:1818  \"function _incrementDeposit(address account, uint256 amount) internal returns (uint256) {...\"\n                            function fun_incrementDeposit(var_account, var_amount) -> var\n                            {\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 4:1683:1691  \"deposits\" */ 0x00, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                                mstore(0x20, /** @src 4:1683:1691  \"deposits\" */ 0x00)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let dataSlot := keccak256(/** @src 4:1683:1691  \"deposits\" */ 0x00, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x40)\n                                /// @src 4:1730:1751  \"info.deposit + amount\"\n                                let expr := checked_add_uint256(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 4:1730:1742  \"info.deposit\" */ dataSlot), /** @src 4:1730:1751  \"info.deposit + amount\" */ var_amount)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                sstore(dataSlot, expr)\n                                /// @src 4:1795:1811  \"return newAmount\"\n                                var := expr\n                            }\n                            /// @ast-id 2057 @src 0:28360:28877  \"function getUserOpGasPrice(MemoryUserOp memory mUserOp) internal view returns (uint256) {...\"\n                            function fun_getUserOpGasPrice(var_mUserOp_mpos) -> var_\n                            {\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _1 := mload(/** @src 0:28505:28525  \"mUserOp.maxFeePerGas\" */ add(var_mUserOp_mpos, 256))\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _2 := mload(/** @src 0:28570:28598  \"mUserOp.maxPriorityFeePerGas\" */ add(var_mUserOp_mpos, 288))\n                                /// @src 0:28612:28785  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                                if /** @src 0:28616:28652  \"maxFeePerGas == maxPriorityFeePerGas\" */ eq(_1, _2)\n                                /// @src 0:28612:28785  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                                {\n                                    /// @src 0:28751:28770  \"return maxFeePerGas\"\n                                    var_ := _1\n                                    leave\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _3 := add(/** @src 0:28823:28859  \"maxPriorityFeePerGas + block.basefee\" */ _2, /** @src 0:28846:28859  \"block.basefee\" */ basefee())\n                                /// @src 1:3338:3351  \"a < b ? a : b\"\n                                let expr := /** @src -1:-1:-1 */ 0\n                                /// @src 1:3338:3351  \"a < b ? a : b\"\n                                switch /** @src 1:3338:3343  \"a < b\" */ lt(_1, _3)\n                                case /** @src 1:3338:3351  \"a < b ? a : b\" */ 0 { expr := _3 }\n                                default { expr := _1 }\n                                /// @src 0:28798:28860  \"return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee)\"\n                                var_ := expr\n                            }\n                            /// @ast-id 358 @src 0:5934:6344  \"function emitUserOperationEvent(UserOpInfo memory opInfo, bool success, uint256 actualGasCost, uint256 actualGas)...\"\n                            function fun_emitUserOperationEvent(var_opInfo_mpos, var_actualGasCost, var_actualGas)\n                            {\n                                /// @src 0:1542:1546  \"2048\"\n                                let _1 := mload(/** @src 0:6132:6149  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                                /// @src 0:6163:6177  \"opInfo.mUserOp\"\n                                let _mpos := mload(var_opInfo_mpos)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _2 := sub(shl(160, 1), 1)\n                                let cleaned := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:6163:6184  \"opInfo.mUserOp.sender\" */ _mpos), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2)\n                                let cleaned_1 := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:6198:6222  \"opInfo.mUserOp.paymaster\" */ add(_mpos, 224)), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2)\n                                let _3 := mload(/** @src 0:6236:6256  \"opInfo.mUserOp.nonce\" */ add(_mpos, /** @src 0:6132:6149  \"opInfo.userOpHash\" */ 32))\n                                /// @src 0:6100:6337  \"UserOperationEvent(...\"\n                                let _4 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                mstore(_4, _3)\n                                mstore(add(_4, /** @src 0:6132:6149  \"opInfo.userOpHash\" */ 32), /** @src -1:-1:-1 */ 0)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(_4, 64), var_actualGasCost)\n                                mstore(add(_4, 96), var_actualGas)\n                                /// @src 0:6100:6337  \"UserOperationEvent(...\"\n                                log4(_4, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 128, /** @src 0:6100:6337  \"UserOperationEvent(...\" */ 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _1, cleaned, cleaned_1)\n                            }\n                            /// @ast-id 376 @src 0:6350:6532  \"function emitPrefundTooLow(UserOpInfo memory opInfo) internal virtual {...\"\n                            function fun_emitPrefundTooLow(var_opInfo_mpos)\n                            {\n                                /// @src 0:1542:1546  \"2048\"\n                                let _1 := mload(/** @src 0:6462:6479  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                                /// @src 0:6481:6495  \"opInfo.mUserOp\"\n                                let _665_mpos := mload(var_opInfo_mpos)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let cleaned := and(/** @src 0:1296:1301  \"10000\" */ mload(/** @src 0:6481:6502  \"opInfo.mUserOp.sender\" */ _665_mpos), /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                let _2 := mload(/** @src 0:6504:6524  \"opInfo.mUserOp.nonce\" */ add(_665_mpos, /** @src 0:6462:6479  \"opInfo.userOpHash\" */ 32))\n                                /// @src 0:6435:6525  \"UserOperationPrefundTooLow(opInfo.userOpHash, opInfo.mUserOp.sender, opInfo.mUserOp.nonce)\"\n                                let _3 := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                mstore(_3, _2)\n                                /// @src 0:6435:6525  \"UserOperationPrefundTooLow(opInfo.userOpHash, opInfo.mUserOp.sender, opInfo.mUserOp.nonce)\"\n                                log3(_3, /** @src 0:6462:6479  \"opInfo.userOpHash\" */ 32, /** @src 0:6435:6525  \"UserOperationPrefundTooLow(opInfo.userOpHash, opInfo.mUserOp.sender, opInfo.mUserOp.nonce)\" */ 0x67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e, _1, cleaned)\n                            }\n                            /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            function abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(headStart, value0, value1, value2) -> tail\n                            {\n                                mstore(headStart, 96)\n                                tail := abi_encode_struct_PackedUserOperation_calldata(value0, add(headStart, 96))\n                                mstore(add(headStart, 32), value1)\n                                mstore(add(headStart, 64), value2)\n                            }\n                            /// @ast-id 1626 @src 0:21739:22239  \"function _getValidationData(uint256 validationData)...\"\n                            function fun_getValidationData(var_validationData) -> var_aggregator, var_outOfTimeRange\n                            {\n                                /// @src 0:21893:21969  \"if (validationData == 0) {...\"\n                                if /** @src 0:21897:21916  \"validationData == 0\" */ iszero(var_validationData)\n                                /// @src 0:21893:21969  \"if (validationData == 0) {...\"\n                                {\n                                    /// @src 0:21932:21958  \"return (address(0), false)\"\n                                    var_aggregator := /** @src 0:21915:21916  \"0\" */ 0x00\n                                    /// @src 0:21932:21958  \"return (address(0), false)\"\n                                    var_outOfTimeRange := /** @src 0:21915:21916  \"0\" */ 0x00\n                                    /// @src 0:21932:21958  \"return (address(0), false)\"\n                                    leave\n                                }\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let memPtr := mload(64)\n                                finalize_allocation_26350(memPtr)\n                                mstore(memPtr, /** @src 0:21915:21916  \"0\" */ 0x00)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(memPtr, 32), /** @src 0:21915:21916  \"0\" */ 0x00)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(memPtr, 64), /** @src 0:21915:21916  \"0\" */ 0x00)\n                                /// @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _1 := and(/** @src 1:1507:1530  \"uint160(validationData)\" */ var_validationData, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                let _2 := 0xffffffffffff\n                                /// @src 1:1537:1586  \"uint48 validUntil = uint48(validationData >> 160)\"\n                                let var_validUntil := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(/** @src 1:1582:1585  \"160\" */ 0xa0, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validationData), _2)\n                                /// @src 1:1592:1659  \"if (validUntil == 0) {...\"\n                                if /** @src 1:1596:1611  \"validUntil == 0\" */ iszero(/** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validUntil)\n                                /// @src 1:1592:1659  \"if (validUntil == 0) {...\"\n                                {\n                                    /// @src 1:1623:1652  \"validUntil = type(uint48).max\"\n                                    var_validUntil := /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2\n                                }\n                                let result := shr(/** @src 1:1710:1718  \"48 + 160\" */ 0xd0, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validationData)\n                                let memPtr_1 := mload(64)\n                                finalize_allocation_26350(memPtr_1)\n                                mstore(memPtr_1, _1)\n                                mstore(/** @src 1:1733:1783  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32), result)\n                                let _3 := and(var_validUntil, _2)\n                                mstore(/** @src 1:1733:1783  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr_1, /** @src 0:789:29689  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64), _3)\n                                /// @src 0:22124:22194  \"block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                let expr := /** @src 0:22124:22157  \"block.timestamp > data.validUntil\" */ gt(/** @src 0:22124:22139  \"block.timestamp\" */ timestamp(), /** @src 0:22124:22157  \"block.timestamp > data.validUntil\" */ _3)\n                                /// @src 0:22124:22194  \"block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                if iszero(expr)\n                                {\n                                    expr := /** @src 0:22161:22194  \"block.timestamp < data.validAfter\" */ lt(/** @src 0:22124:22139  \"block.timestamp\" */ timestamp(), /** @src 0:22161:22194  \"block.timestamp < data.validAfter\" */ result)\n                                }\n                                /// @src 0:22107:22194  \"outOfTimeRange = block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                var_outOfTimeRange := expr\n                                /// @src 0:22204:22232  \"aggregator = data.aggregator\"\n                                var_aggregator := _1\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000818000a\"\n                    }\n                    /// @use-src 3:\"lib/account-abstraction/contracts/core/SenderCreator.sol\"\n                    object \"SenderCreator_2418\" {\n                        code {\n                            {\n                                /// @src 3:205:1231  \"contract SenderCreator {...\"\n                                let _1 := memoryguard(0x80)\n                                mstore(64, _1)\n                                if callvalue() { revert(0, 0) }\n                                let _2 := datasize(\"SenderCreator_2418_deployed\")\n                                codecopy(_1, dataoffset(\"SenderCreator_2418_deployed\"), _2)\n                                return(_1, _2)\n                            }\n                        }\n                        /// @use-src 3:\"lib/account-abstraction/contracts/core/SenderCreator.sol\"\n                        object \"SenderCreator_2418_deployed\" {\n                            code {\n                                {\n                                    /// @src 3:205:1231  \"contract SenderCreator {...\"\n                                    let _1 := memoryguard(0x80)\n                                    if iszero(lt(calldatasize(), 4))\n                                    {\n                                        let _2 := 0\n                                        if eq(0x570e1a36, shr(224, calldataload(_2)))\n                                        {\n                                            if callvalue() { revert(_2, _2) }\n                                            if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                            let offset := calldataload(4)\n                                            let _3 := 0xffffffffffffffff\n                                            if gt(offset, _3) { revert(_2, _2) }\n                                            if iszero(slt(add(offset, 35), calldatasize())) { revert(_2, _2) }\n                                            let length := calldataload(add(4, offset))\n                                            if gt(length, _3) { revert(_2, _2) }\n                                            if gt(add(add(offset, length), 36), calldatasize()) { revert(_2, _2) }\n                                            let var_sender := _2\n                                            if gt(/** @src 3:726:728  \"20\" */ 0x14, /** @src 3:205:1231  \"contract SenderCreator {...\" */ length) { revert(_2, _2) }\n                                            let lengthOut := add(length, not(19))\n                                            if gt(lengthOut, _3)\n                                            {\n                                                mstore(_2, shl(224, 0x4e487b71))\n                                                mstore(4, 0x41)\n                                                revert(_2, 36)\n                                            }\n                                            let _4 := not(31)\n                                            let newFreePtr := add(_1, and(add(and(add(length, 11), _4), 63), _4))\n                                            if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                                            {\n                                                mstore(_2, shl(224, 0x4e487b71))\n                                                mstore(4, 0x41)\n                                                revert(_2, 36)\n                                            }\n                                            mstore(64, newFreePtr)\n                                            mstore(_1, lengthOut)\n                                            let dst := add(_1, 32)\n                                            calldatacopy(dst, add(offset, 56), lengthOut)\n                                            mstore(add(add(_1, length), 12), _2)\n                                            /// @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\"\n                                            let var_success := call(gas(), /** @src 3:205:1231  \"contract SenderCreator {...\" */ shr(96, calldataload(add(offset, 36))), _2, /** @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\" */ dst, mload(_1), /** @src 3:205:1231  \"contract SenderCreator {...\" */ _2, 32)\n                                            /// @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\"\n                                            var_sender := mload(/** @src 3:205:1231  \"contract SenderCreator {...\" */ _2)\n                                            /// @src 3:1165:1223  \"if (!success) {...\"\n                                            if /** @src 3:1169:1177  \"!success\" */ iszero(var_success)\n                                            /// @src 3:1165:1223  \"if (!success) {...\"\n                                            {\n                                                /// @src 3:1193:1212  \"sender = address(0)\"\n                                                var_sender := /** @src 3:205:1231  \"contract SenderCreator {...\" */ _2\n                                            }\n                                            let memPos := mload(64)\n                                            mstore(memPos, and(var_sender, sub(shl(160, 1), 1)))\n                                            return(memPos, 32)\n                                        }\n                                    }\n                                    revert(0, 0)\n                                }\n                            }\n                            data \".metadata\" hex\"a164736f6c6343000818000a\"\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        /// @use-src 6:\"lib/account-abstraction/contracts/interfaces/IAccount.sol\", 60:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 69:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 81:\"src/ethereum/MinimalAccount.sol\"\n        object \"MinimalAccount_51163\" {\n            code {\n                {\n                    /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                    let _1 := memoryguard(0xa0)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"MinimalAccount_51163\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), 32)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                    let value := mload(_1)\n                    let _2 := sub(shl(160, 1), 1)\n                    let _3 := and(value, _2)\n                    if iszero(eq(value, _3))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 60:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 60:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 81:2100:2110  \"msg.sender\" */ caller())\n                    /// @src 60:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 60:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        let _4 := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                        /// @src 60:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(_4, shl(224, 0x1e4fbdf7))\n                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                        mstore(/** @src 60:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_4, 4), /** @src -1:-1:-1 */ 0)\n                        /// @src 60:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(_4, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36)\n                    }\n                    let _5 := sload(/** @src -1:-1:-1 */ 0)\n                    /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                    sstore(/** @src -1:-1:-1 */ 0, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ or(and(_5, not(sub(shl(160, 1), 1))), /** @src 81:2100:2110  \"msg.sender\" */ caller()))\n                    /// @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    let _6 := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                    /// @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ 0, 0, /** @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(_5, _2), /** @src 81:2100:2110  \"msg.sender\" */ caller())\n                    /// @src 81:2122:2160  \"i_entryPoint = IEntryPoint(entryPoint)\"\n                    mstore(128, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _3)\n                    let _7 := datasize(\"MinimalAccount_51163_deployed\")\n                    codecopy(_6, dataoffset(\"MinimalAccount_51163_deployed\"), _7)\n                    setimmutable(_6, \"50967\", mload(/** @src 81:2122:2160  \"i_entryPoint = IEntryPoint(entryPoint)\" */ 128))\n                    /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                    return(_6, _7)\n                }\n            }\n            /// @use-src 1:\"lib/account-abstraction/contracts/core/Helpers.sol\", 60:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 69:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 73:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 81:\"src/ethereum/MinimalAccount.sol\"\n            object \"MinimalAccount_51163_deployed\" {\n                code {\n                    {\n                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x19822f7c {\n                                if callvalue() { revert(_4, _4) }\n                                let _5 := not(3)\n                                if slt(add(calldatasize(), _5), 96) { revert(_4, _4) }\n                                let offset := calldataload(_3)\n                                if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                                if slt(add(sub(calldatasize(), offset), _5), 288) { revert(_4, _4) }\n                                let value := calldataload(68)\n                                /// @src 81:1538:1643  \"if (msg.sender != address(i_entryPoint)) {...\"\n                                if /** @src 81:1542:1577  \"msg.sender != address(i_entryPoint)\" */ iszero(eq(/** @src 81:1542:1552  \"msg.sender\" */ caller(), /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(/** @src 81:1564:1576  \"i_entryPoint\" */ loadimmutable(\"50967\"), /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1))))\n                                /// @src 81:1538:1643  \"if (msg.sender != address(i_entryPoint)) {...\"\n                                {\n                                    /// @src 81:1600:1632  \"MinimalAccount__OnlyEntryPoint()\"\n                                    mstore(_1, shl(225, 0x54068c25))\n                                    revert(_1, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _3)\n                                }\n                                /// @src 81:2440:2495  \"validationData = _validateSignature(userOp, userOpHash)\"\n                                let var_validationData := /** @src 81:2457:2495  \"_validateSignature(userOp, userOpHash)\" */ fun_validateSignature(/** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ add(_3, offset), calldataload(36))\n                                /// @src 81:3682:3857  \"if (missingAccountFunds > 0) {...\"\n                                if /** @src 81:3686:3709  \"missingAccountFunds > 0\" */ iszero(iszero(value))\n                                /// @src 81:3682:3857  \"if (missingAccountFunds > 0) {...\"\n                                {\n                                    /// @src 81:3743:3823  \"payable(msg.sender).call{value: missingAccountFunds, gas: type(uint256).max}(\\\"\\\")\"\n                                    pop(call(/** @src 81:3801:3818  \"type(uint256).max\" */ not(0), /** @src 81:1542:1552  \"msg.sender\" */ caller(), /** @src 81:3743:3823  \"payable(msg.sender).call{value: missingAccountFunds, gas: type(uint256).max}(\\\"\\\")\" */ value, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _4, _4, _4, _4))\n                                    /// @src 81:3743:3823  \"payable(msg.sender).call{value: missingAccountFunds, gas: type(uint256).max}(\\\"\\\")\"\n                                    pop(extract_returndata())\n                                }\n                                /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                let memPos := mload(_2)\n                                mstore(memPos, var_validationData)\n                                return(memPos, 32)\n                            }\n                            case 0x44ab613f {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, and(/** @src 81:4140:4152  \"i_entryPoint\" */ loadimmutable(\"50967\"), /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_1, 32)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 60:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                let _6 := sload(_4)\n                                sstore(_4, and(_6, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _4, _4, /** @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(_6, sub(shl(160, 1), 1)), _4)\n                                return(_4, _4)\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let cleaned := and(sload(_4), sub(shl(160, 1), 1))\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, cleaned)\n                                return(memPos_2, 32)\n                            }\n                            case 0xb61d27f6 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                let value0 := abi_decode_address()\n                                let _7 := 68\n                                let offset_1 := calldataload(68)\n                                let _8 := 0xffffffffffffffff\n                                if gt(offset_1, _8) { revert(_4, _4) }\n                                if iszero(slt(add(offset_1, 35), calldatasize())) { revert(_4, _4) }\n                                let length := calldataload(add(_3, offset_1))\n                                if gt(length, _8) { revert(_4, _4) }\n                                if gt(add(add(offset_1, length), 36), calldatasize()) { revert(_4, _4) }\n                                let _9 := sub(shl(160, 1), 1)\n                                /// @src 81:1713:1773  \"msg.sender != address(i_entryPoint) && msg.sender != owner()\"\n                                let expr := /** @src 81:1713:1748  \"msg.sender != address(i_entryPoint)\" */ iszero(eq(/** @src 81:1713:1723  \"msg.sender\" */ caller(), /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(/** @src 81:1735:1747  \"i_entryPoint\" */ loadimmutable(\"50967\"), /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _9)))\n                                /// @src 81:1713:1773  \"msg.sender != address(i_entryPoint) && msg.sender != owner()\"\n                                if expr\n                                {\n                                    expr := /** @src 81:1752:1773  \"msg.sender != owner()\" */ iszero(eq(/** @src 81:1713:1723  \"msg.sender\" */ caller(), /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(sload(_4), _9)))\n                                }\n                                /// @src 81:1709:1846  \"if (msg.sender != address(i_entryPoint) && msg.sender != owner()) {...\"\n                                if expr\n                                {\n                                    /// @src 81:1796:1835  \"MinimalAccount__OnlyEntryPointOrOwner()\"\n                                    let _10 := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(_2)\n                                    /// @src 81:1796:1835  \"MinimalAccount__OnlyEntryPointOrOwner()\"\n                                    mstore(_10, shl(225, 0x54b4aab7))\n                                    revert(_10, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _3)\n                                }\n                                /// @src 81:2736:2773  \"dest.call{value: value}(functionData)\"\n                                let _11 := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(_2)\n                                calldatacopy(_11, add(offset_1, 36), length)\n                                let _12 := add(_11, length)\n                                mstore(_12, _4)\n                                /// @src 81:2736:2773  \"dest.call{value: value}(functionData)\"\n                                let expr_component := call(gas(), value0, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ calldataload(36), /** @src 81:2736:2773  \"dest.call{value: value}(functionData)\" */ _11, sub(/** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _12, /** @src 81:2736:2773  \"dest.call{value: value}(functionData)\" */ _11), /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _4, _4)\n                                /// @src 81:2736:2773  \"dest.call{value: value}(functionData)\"\n                                let expr_component_mpos := extract_returndata()\n                                /// @src 81:2783:2863  \"if (!success) {...\"\n                                if /** @src 81:2787:2795  \"!success\" */ iszero(expr_component)\n                                /// @src 81:2783:2863  \"if (!success) {...\"\n                                {\n                                    /// @src 81:2818:2852  \"MinimalAccount__CallFailed(result)\"\n                                    let _13 := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(_2)\n                                    /// @src 81:2818:2852  \"MinimalAccount__CallFailed(result)\"\n                                    mstore(_13, shl(228, 0x038fe215))\n                                    /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                    let _14 := 32\n                                    mstore(/** @src 81:2818:2852  \"MinimalAccount__CallFailed(result)\" */ add(_13, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _3), 32)\n                                    let length_1 := mload(expr_component_mpos)\n                                    mstore(add(/** @src 81:2818:2852  \"MinimalAccount__CallFailed(result)\" */ _13, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36), length_1)\n                                    let i := _4\n                                    for { } lt(i, length_1) { i := add(i, _14) }\n                                    {\n                                        mstore(add(add(/** @src 81:2818:2852  \"MinimalAccount__CallFailed(result)\" */ _13, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ i), _7), mload(add(add(expr_component_mpos, i), _14)))\n                                    }\n                                    mstore(add(add(/** @src 81:2818:2852  \"MinimalAccount__CallFailed(result)\" */ _13, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ length_1), 68), _4)\n                                    /// @src 81:2818:2852  \"MinimalAccount__CallFailed(result)\"\n                                    revert(_13, add(sub(/** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ add(/** @src 81:2818:2852  \"MinimalAccount__CallFailed(result)\" */ _13, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(add(length_1, 0x1f), not(31))), /** @src 81:2818:2852  \"MinimalAccount__CallFailed(result)\" */ _13), /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 68))\n                                }\n                                return(_4, _4)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address()\n                                /// @src 60:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                let _15 := sub(shl(160, 1), 1)\n                                let _16 := and(/** @src 60:2627:2649  \"newOwner == address(0)\" */ value0_1, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _15)\n                                /// @src 60:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 60:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _16)\n                                /// @src 60:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 60:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    let _17 := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(_2)\n                                    /// @src 60:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(_17, shl(224, 0x1e4fbdf7))\n                                    /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                    mstore(/** @src 60:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_17, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _3), _4)\n                                    /// @src 60:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(_17, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36)\n                                }\n                                let _18 := sload(_4)\n                                sstore(_4, or(and(_18, shl(160, 0xffffffffffffffffffffffff)), _16))\n                                /// @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _4, _4, /** @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(_18, _15), /** @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _16)\n                                /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                return(_4, _4)\n                            }\n                        }\n                        if iszero(calldatasize()) { stop() }\n                        revert(0, 0)\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function allocate_memory(size) -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function array_allocation_size_bytes(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        size := add(and(add(length, 31), not(31)), 0x20)\n                    }\n                    function extract_returndata() -> data\n                    {\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _1 := returndatasize()\n                            let memPtr := allocate_memory(array_allocation_size_bytes(_1))\n                            mstore(memPtr, _1)\n                            data := memPtr\n                            returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ returndatasize())\n                        }\n                    }\n                    /// @ast-id 51119 @src 81:3144:3607  \"function _validateSignature(PackedUserOperation calldata userOp, bytes32 userOpHash)...\"\n                    function fun_validateSignature(var_userOp_offset, var_userOpHash) -> var_validationData\n                    {\n                        /// @src -1:-1:-1\n                        let _1 := 0\n                        /// @src 73:1367:1676  \"assembly {...\"\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 73:1367:1676  \"assembly {...\" */ \"\\x19Ethereum Signed Message:\\n32\")\n                        mstore(0x1c, var_userOpHash)\n                        let var_digest := keccak256(/** @src -1:-1:-1 */ _1, /** @src 73:1367:1676  \"assembly {...\" */ 0x3c)\n                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                        let rel_offset_of_tail := calldataload(/** @src 81:3459:3475  \"userOp.signature\" */ add(var_userOp_offset, 256))\n                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), var_userOp_offset), not(30))))\n                        {\n                            revert(/** @src -1:-1:-1 */ _1, _1)\n                        }\n                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                        let addr := add(var_userOp_offset, rel_offset_of_tail)\n                        let length := calldataload(addr)\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            revert(/** @src -1:-1:-1 */ _1, _1)\n                        }\n                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                        let addr_1 := add(addr, 0x20)\n                        if sgt(addr_1, sub(calldatasize(), length))\n                        {\n                            revert(/** @src -1:-1:-1 */ _1, _1)\n                        }\n                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                        let array := allocate_memory(array_allocation_size_bytes(length))\n                        mstore(array, length)\n                        if gt(add(add(addr, length), 0x20), calldatasize())\n                        {\n                            revert(/** @src -1:-1:-1 */ _1, _1)\n                        }\n                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                        calldatacopy(add(array, 0x20), addr_1, length)\n                        mstore(add(add(array, length), 0x20), /** @src -1:-1:-1 */ _1)\n                        /// @src 72:3859:3886  \"tryRecover(hash, signature)\"\n                        let expr_component, expr_component_1, expr_component_2 := fun_tryRecover_48818(var_digest, array)\n                        /// @src 72:3915:3923  \"errorArg\"\n                        fun_throwError(expr_component_1, expr_component_2)\n                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                        let _2 := sub(shl(160, 1), 1)\n                        /// @src 81:3486:3562  \"if (signer != owner()) {...\"\n                        if /** @src 81:3490:3507  \"signer != owner()\" */ iszero(eq(/** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(/** @src 81:3490:3507  \"signer != owner()\" */ expr_component, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _2), and(sload(/** @src -1:-1:-1 */ _1), /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ _2)))\n                        /// @src 81:3486:3562  \"if (signer != owner()) {...\"\n                        {\n                            /// @src 81:3523:3551  \"return SIG_VALIDATION_FAILED\"\n                            var_validationData := /** @src 1:305:306  \"1\" */ 0x01\n                            /// @src 81:3523:3551  \"return SIG_VALIDATION_FAILED\"\n                            leave\n                        }\n                        /// @src 81:3571:3600  \"return SIG_VALIDATION_SUCCESS\"\n                        var_validationData := /** @src -1:-1:-1 */ _1\n                    }\n                    /// @ast-id 46951 @src 60:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                        let cleaned := and(sload(/** @src 60:1710:1716  \"_owner\" */ 0x00), /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 60:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 60:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ cleaned, /** @src 69:735:745  \"msg.sender\" */ caller()))\n                        /// @src 60:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 60:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            let _1 := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                            /// @src 60:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(_1, shl(224, 0x118cdaa7))\n                            /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                            mstore(/** @src 60:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 69:735:745  \"msg.sender\" */ caller())\n                            /// @src 60:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(_1, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36)\n                        }\n                    }\n                    /// @ast-id 48818 @src 72:2129:2895  \"function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {...\"\n                    function fun_tryRecover_48818(var_hash, var_signature_mpos) -> var, var_, var_1\n                    {\n                        /// @src 72:2256:2272  \"signature.length\"\n                        let expr := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 72:2256:2272  \"signature.length\" */ var_signature_mpos)\n                        /// @src 72:2252:2889  \"if (signature.length == 65) {...\"\n                        switch /** @src 72:2256:2278  \"signature.length == 65\" */ eq(expr, /** @src 72:2276:2278  \"65\" */ 0x41)\n                        case /** @src 72:2252:2889  \"if (signature.length == 65) {...\" */ 0 {\n                            /// @src 72:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                            var := /** @src 72:2811:2812  \"0\" */ 0x00\n                            /// @src 72:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                            var_ := /** @src 72:2815:2850  \"RecoverError.InvalidSignatureLength\" */ 2\n                            /// @src 72:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                            var_1 := expr\n                            leave\n                        }\n                        default /// @src 72:2252:2889  \"if (signature.length == 65) {...\"\n                        {\n                            /// @src 72:2539:2719  \"assembly {...\"\n                            let var_r := mload(add(var_signature_mpos, 0x20))\n                            /// @src 72:2739:2764  \"tryRecover(hash, v, r, s)\"\n                            let expr_48799_component, expr_component, expr_component_1 := fun_tryRecover(var_hash, /** @src 72:2539:2719  \"assembly {...\" */ byte(/** @src -1:-1:-1 */ 0, /** @src 72:2539:2719  \"assembly {...\" */ mload(add(var_signature_mpos, 0x60))), /** @src 72:2739:2764  \"tryRecover(hash, v, r, s)\" */ var_r, /** @src 72:2539:2719  \"assembly {...\" */ mload(add(var_signature_mpos, 0x40)))\n                            /// @src 72:2732:2764  \"return tryRecover(hash, v, r, s)\"\n                            var := expr_48799_component\n                            var_ := expr_component\n                            var_1 := expr_component_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 49091 @src 72:7196:7728  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n                    function fun_throwError(var_error, var_errorArg)\n                    {\n                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                        if iszero(lt(var_error, 4))\n                        {\n                            mstore(/** @src 72:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(/** @src 72:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 0x24)\n                        }\n                        /// @src 72:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                        switch /** @src 72:7282:7311  \"error == RecoverError.NoError\" */ iszero(var_error)\n                        case /** @src 72:7278:7722  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                            /// @src 72:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                            switch /** @src 72:7378:7416  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 1)\n                            case /** @src 72:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                                /// @src 72:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                switch /** @src 72:7483:7527  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 72:7492:7527  \"RecoverError.InvalidSignatureLength\" */ 2)\n                                case /** @src 72:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                                    /// @src 72:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    if /** @src 72:7617:7656  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 72:7626:7656  \"RecoverError.InvalidSignatureS\" */ 3)\n                                    /// @src 72:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    {\n                                        /// @src 72:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        let _1 := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                        /// @src 72:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        mstore(_1, shl(226, 0x35e2f383))\n                                        /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                        mstore(/** @src 72:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\" */ add(_1, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 4), var_errorArg)\n                                        /// @src 72:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        revert(_1, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36)\n                                    }\n                                }\n                                default /// @src 72:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                {\n                                    /// @src 72:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    let _2 := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                    /// @src 72:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    mstore(_2, shl(224, 0xfce698f7))\n                                    /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                    mstore(/** @src 72:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\" */ add(_2, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 4), var_errorArg)\n                                    /// @src 72:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    revert(_2, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36)\n                                }\n                            }\n                            default /// @src 72:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                            {\n                                /// @src 72:7439:7462  \"ECDSAInvalidSignature()\"\n                                let _3 := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                /// @src 72:7439:7462  \"ECDSAInvalidSignature()\"\n                                mstore(_3, shl(224, 0xf645eedf))\n                                revert(_3, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 4)\n                            }\n                        }\n                        default /// @src 72:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                        {\n                            /// @src 72:7327:7334  \"return;\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 49006 @src 72:5140:6670  \"function tryRecover(...\"\n                    function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                    {\n                        /// @src 72:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        if /** @src 72:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 72:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                        /// @src 72:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        {\n                            /// @src 72:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var := /** @src 72:6297:6298  \"0\" */ 0x00\n                            /// @src 72:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_1 := /** @src 72:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                            /// @src 72:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_2 := var_s\n                            leave\n                        }\n                        /// @src 72:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _1 := /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                        mstore(_1, var_hash)\n                        mstore(add(_1, 32), and(var_v, 0xff))\n                        mstore(add(_1, 64), var_r)\n                        mstore(add(_1, 96), var_s)\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 72:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        mstore(/** @src -1:-1:-1 */ _2, _2)\n                        /// @src 72:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        if iszero(staticcall(gas(), 1, _1, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ 32))\n                        /// @src 72:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        {\n                            /// @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 72:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _3 := mload(/** @src -1:-1:-1 */ _2)\n                        /// @src 72:6491:6604  \"if (signer == address(0)) {...\"\n                        if /** @src 72:6495:6515  \"signer == address(0)\" */ iszero(/** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(/** @src 72:6495:6515  \"signer == address(0)\" */ _3, /** @src 81:697:4162  \"contract MinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 72:6491:6604  \"if (signer == address(0)) {...\"\n                        {\n                            /// @src 72:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var := /** @src -1:-1:-1 */ _2\n                            /// @src 72:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_1 := /** @src 72:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                            /// @src 72:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_2 := /** @src -1:-1:-1 */ _2\n                            /// @src 72:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            leave\n                        }\n                        /// @src 72:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var := _3\n                        var_1 := /** @src -1:-1:-1 */ _2\n                        /// @src 72:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_2 := /** @src -1:-1:-1 */ _2\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000818000a\"\n    }\n}\n","hash":"010000bb33ee534cf80c02825bd61e52b3fa56b6603510c3796fe9ac0518a92d","factoryDependencies":{"010000f571c27cafb5596f36ea647c99a0c8ff6c108e96c41674196a7bc33f3a":"src/ethereum/MinimalAccount.sol:MinimalAccount","01000123ce4bb2a4960e0560c1d0db8da6392fe80686fc7461c66172dbdbbe9e":"script/HelperConfig.s.sol:HelperConfig"},"id":78}